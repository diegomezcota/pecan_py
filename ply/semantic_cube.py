class SemanticCube:
    # TODO: Add a get_result_type() function that handles tuples that don't exist and returns None
    def __init__(self):
        self.table = {
            ('int', 'int', '*'): 'int',
            ('int', 'int', '/'): 'float',
            ('int', 'int', '+'): 'int',
            ('int', 'int', '-'): 'int',
            ('int', 'int', '>'): 'bool',
            ('int', 'int', '<'): 'bool',
            ('int', 'int', '=='): 'bool',
            ('int', 'int', '!='): 'bool',
            ('int', 'int', '&&'): 'bool',
            ('int', 'int', '||'): 'bool',
            ('int', 'float', '*'): 'float',
            ('int', 'float', '/'): 'float',
            ('int', 'float', '+'): 'float',
            ('int', 'float', '-'): 'float',
            ('int', 'float', '>'): 'bool',
            ('int', 'float', '<'): 'bool',
            ('int', 'float', '=='): 'bool',
            ('int', 'float', '!='): 'bool',
            ('int', 'float', '&&'): 'bool',
            ('int', 'float', '||'): 'bool',
            ('int', 'bool', '&&'): 'bool',
            ('int', 'bool', '||'): 'bool',
            ('float', 'float', '*'): 'float',
            ('float', 'float', '/'): 'float',
            ('float', 'float', '+'): 'float',
            ('float', 'float', '-'): 'float',
            ('float', 'float', '>'): 'bool',
            ('float', 'float', '<'): 'bool',
            ('float', 'float', '=='): 'bool',
            ('float', 'float', '!='): 'bool',
            ('float', 'float', '&&'): 'bool',
            ('float', 'float', '||'): 'bool',
            ('float', 'bool', '&&'): 'bool',
            ('float', 'bool', '||'): 'bool',
            ('bool', 'bool', '=='): 'bool',
            ('bool', 'bool', '!='): 'bool',
            ('bool', 'bool', '&&'): 'bool',
            ('bool', 'bool', '||'): 'bool',
        }
