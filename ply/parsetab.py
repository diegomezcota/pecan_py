
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN AT_CLASS BOOL BOOL_VALUE CLASS CLOSE_BRACKET CLOSE_KEY CLOSE_PARENTHESIS COMMA CONSTRUCTOR DIVISION DOT ELSE EQUAL_TO FLOAT FLOAT_VALUE FOR FUNCTION GREATER_THAN GROUP ID IF IN INT INT_VALUE IS LESS_THAN MAIN MINUS MULTIPLICATION NOT_EQUAL_TO OBJ OPEN_BRACKET OPEN_KEY OPEN_PARENTHESIS OR PLUS PROGRAM READ RETURN RETURNS SEMICOLON STRING STRING_VALUE VAR VOID WHILE WRITE\n    program : PROGRAM ID SEMICOLON program1 MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY\n    \n    program1    : declaration statement_loop\n                | epsilon\n    \n    statement_loop  : statement statement_loop1\n    \n    statement_loop1 : statement statement_loop1\n                    | epsilon\n    \n    declaration : class_declaration\n                | variable_declaration\n                | function_declaration\n    \n    variable    : ID variable1\n    \n    variable1   : OPEN_BRACKET hyper_exp CLOSE_BRACKET\n                | DOT ID\n                | epsilon\n\n    \n    class_declaration   : CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2\n    \n    class_declaration1  : IS ID\n                        | epsilon\n    \n    class_declaration2  : class_function class_declaration2\n                        | epsilon\n    \n    class_body  : class_body1 class_body3\n    \n    class_body1 : variable_declaration class_body2\n    \n    class_body2 : variable_declaration class_body2\n                | epsilon\n    \n    class_body3 : class_function_declaration class_body4\n    \n    class_body4 : class_function_declaration class_body4\n                | epsilon\n\n    \n    constructor : CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY\n    \n    variable_declaration    : VAR data_type ID SEMICOLON\n                            | GROUP ID ASSIGN data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON\n                            | OBJ ID ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON\n\n    \n    variable_declaration1   : hyper_exp_loop\n                            | epsilon\n    \n    statement   : assignment\n                | conditional\n                | cycle\n                | read\n                | write\n                | function_call\n                | variable_declaration\n    \n    assignment  : variable ASSIGN hyper_exp SEMICOLON\n    \n    hyper_exp   : super_exp hyper_exp1\n    \n    hyper_exp1  : AND super_exp\n                | OR super_exp\n                | epsilon\n    \n    super_exp   : exp super_exp1\n    \n    super_exp1  : GREATER_THAN exp\n                | LESS_THAN exp\n                | EQUAL_TO exp\n                | NOT_EQUAL_TO exp\n                | epsilon\n    \n    exp : term exp1\n    \n    exp1    : PLUS term exp1\n            | MINUS term exp1\n            | epsilon\n    \n    term    : factor term1\n    \n    term1   : MULTIPLICATION factor term1\n            | DIVISION factor term1\n            | epsilon\n    \n    factor  : function_call\n            | FLOAT_VALUE\n            | INT_VALUE\n            | BOOL_VALUE\n            | STRING_VALUE\n            | variable\n            | OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS\n    \n    data_type   : INT\n                | FLOAT\n                | STRING\n                | BOOL\n    \n    class_function_declaration : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON\n    \n    return_arg  : data_type\n                | VOID\n    \n    parameter   : data_type ID parameter1\n                | epsilon\n    \n    parameter1  : COMMA data_type ID parameter1\n                | epsilon\n    \n    conditional : IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY conditional1\n    \n    conditional1    : ELSE OPEN_KEY statement_loop CLOSE_KEY\n                    | epsilon\n    \n    cycle   : FOR OPEN_PARENTHESIS ID IN ID CLOSE_PARENTHESIS cycle1\n            | WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS cycle1\n    \n    cycle1  : OPEN_KEY statement_loop CLOSE_KEY\n    \n    read    : READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    variable_loop   : variable variable_loop1\n    \n    variable_loop1  : COMMA variable variable_loop1\n                    | epsilon\n    \n    write   : WRITE OPEN_PARENTHESIS hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    hyper_exp_loop  : hyper_exp hyper_exp_loop1\n    \n    hyper_exp_loop1 : COMMA hyper_exp hyper_exp_loop1\n                    | epsilon\n\n    \n    function_call   : ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON\n    \n    function_call1  : DOT ID\n                    | epsilon\n    \n    function_call2  : hyper_exp_loop\n                    | epsilon\n    \n    class_function  : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS AT_CLASS ID RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY\n\n    \n    function_declaration    : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY\n    \n    function_return : RETURN hyper_exp SEMICOLON\n                    | epsilon\n    \n    function_statement_loop  : statement_loop\n                    | epsilon\n    epsilon :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,179,],[0,-1,]),'ID':([2,6,8,9,10,11,13,14,15,18,19,20,21,22,23,24,25,34,35,36,37,38,43,46,47,48,51,53,54,55,56,58,62,77,80,91,95,97,98,100,101,104,105,106,107,110,111,114,115,119,127,129,133,139,154,157,158,159,162,167,186,201,202,203,204,205,206,209,210,211,213,215,216,217,218,219,226,227,232,238,240,246,248,251,254,257,],[3,29,-7,-8,-9,33,39,40,41,29,-32,-33,-34,-35,-36,-37,-38,60,-65,-66,-67,-68,29,29,29,79,81,29,29,86,29,90,93,29,29,-27,141,29,-39,29,29,29,29,29,29,29,29,29,29,155,86,161,29,29,29,-80,29,-82,-86,194,-90,212,-101,-79,-81,-101,220,-28,-29,29,-76,-78,-14,-101,-18,228,29,-17,29,-96,-77,29,250,-26,29,-95,]),'SEMICOLON':([3,29,35,36,37,38,50,52,60,66,67,68,69,70,71,72,73,74,75,76,81,99,102,103,108,109,112,113,116,123,125,131,143,144,145,146,147,148,149,150,151,152,153,156,164,180,181,182,183,186,196,197,199,200,239,243,],[4,-101,-65,-66,-67,-68,-10,-13,91,-63,98,-101,-101,-101,-101,-58,-59,-60,-61,-62,-12,-40,-43,-44,-49,-50,-53,-54,-57,-11,159,162,-41,-42,-45,-46,-47,-48,-101,-101,-101,-101,-64,186,190,-51,-52,-55,-56,-90,209,210,-70,-71,244,247,]),'MAIN':([4,5,7,17,18,19,20,21,22,23,24,25,43,44,45,65,91,98,157,159,162,186,202,203,204,209,210,213,215,240,],[-101,16,-3,-2,-101,-32,-33,-34,-35,-36,-37,-38,-101,-4,-6,-5,-27,-39,-80,-82,-86,-90,-101,-79,-81,-28,-29,-76,-78,-77,]),'CLASS':([4,],[11,]),'VAR':([4,6,8,9,10,18,19,20,21,22,23,24,25,43,89,91,97,98,137,154,157,158,159,162,168,186,202,203,204,205,209,210,211,213,215,216,217,218,226,227,238,240,246,251,254,257,],[12,12,-7,-8,-9,12,-32,-33,-34,-35,-36,-37,-38,12,12,-27,12,-39,12,12,-80,12,-82,-86,12,-90,-101,-79,-81,-101,-28,-29,12,-76,-78,-14,-101,-18,12,-17,-96,-77,12,-26,12,-95,]),'GROUP':([4,6,8,9,10,18,19,20,21,22,23,24,25,43,89,91,97,98,137,154,157,158,159,162,168,186,202,203,204,205,209,210,211,213,215,216,217,218,226,227,238,240,246,251,254,257,],[13,13,-7,-8,-9,13,-32,-33,-34,-35,-36,-37,-38,13,13,-27,13,-39,13,13,-80,13,-82,-86,13,-90,-101,-79,-81,-101,-28,-29,13,-76,-78,-14,-101,-18,13,-17,-96,-77,13,-26,13,-95,]),'OBJ':([4,6,8,9,10,18,19,20,21,22,23,24,25,43,89,91,97,98,137,154,157,158,159,162,168,186,202,203,204,205,209,210,211,213,215,216,217,218,226,227,238,240,246,251,254,257,],[14,14,-7,-8,-9,14,-32,-33,-34,-35,-36,-37,-38,14,14,-27,14,-39,14,14,-80,14,-82,-86,14,-90,-101,-79,-81,-101,-28,-29,14,-76,-78,-14,-101,-18,14,-17,-96,-77,14,-26,14,-95,]),'FUNCTION':([4,91,136,137,166,168,169,170,191,195,205,209,210,217,247,251,257,],[15,-27,167,-101,167,-101,-20,-22,167,-21,219,-28,-29,219,-69,-26,-95,]),'IF':([6,8,9,10,18,19,20,21,22,23,24,25,43,91,97,98,154,157,158,159,162,186,202,203,204,205,209,210,211,213,215,216,217,218,226,227,238,240,246,251,254,257,],[27,-7,-8,-9,27,-32,-33,-34,-35,-36,-37,-38,27,-27,27,-39,27,-80,27,-82,-86,-90,-101,-79,-81,-101,-28,-29,27,-76,-78,-14,-101,-18,27,-17,-96,-77,27,-26,27,-95,]),'FOR':([6,8,9,10,18,19,20,21,22,23,24,25,43,91,97,98,154,157,158,159,162,186,202,203,204,205,209,210,211,213,215,216,217,218,226,227,238,240,246,251,254,257,],[28,-7,-8,-9,28,-32,-33,-34,-35,-36,-37,-38,28,-27,28,-39,28,-80,28,-82,-86,-90,-101,-79,-81,-101,-28,-29,28,-76,-78,-14,-101,-18,28,-17,-96,-77,28,-26,28,-95,]),'WHILE':([6,8,9,10,18,19,20,21,22,23,24,25,43,91,97,98,154,157,158,159,162,186,202,203,204,205,209,210,211,213,215,216,217,218,226,227,238,240,246,251,254,257,],[30,-7,-8,-9,30,-32,-33,-34,-35,-36,-37,-38,30,-27,30,-39,30,-80,30,-82,-86,-90,-101,-79,-81,-101,-28,-29,30,-76,-78,-14,-101,-18,30,-17,-96,-77,30,-26,30,-95,]),'READ':([6,8,9,10,18,19,20,21,22,23,24,25,43,91,97,98,154,157,158,159,162,186,202,203,204,205,209,210,211,213,215,216,217,218,226,227,238,240,246,251,254,257,],[31,-7,-8,-9,31,-32,-33,-34,-35,-36,-37,-38,31,-27,31,-39,31,-80,31,-82,-86,-90,-101,-79,-81,-101,-28,-29,31,-76,-78,-14,-101,-18,31,-17,-96,-77,31,-26,31,-95,]),'WRITE':([6,8,9,10,18,19,20,21,22,23,24,25,43,91,97,98,154,157,158,159,162,186,202,203,204,205,209,210,211,213,215,216,217,218,226,227,238,240,246,251,254,257,],[32,-7,-8,-9,32,-32,-33,-34,-35,-36,-37,-38,32,-27,32,-39,32,-80,32,-82,-86,-90,-101,-79,-81,-101,-28,-29,32,-76,-78,-14,-101,-18,32,-17,-96,-77,32,-26,32,-95,]),'INT':([12,61,63,175,177,208,229,235,237,252,],[35,35,35,35,35,35,35,35,35,35,]),'FLOAT':([12,61,63,175,177,208,229,235,237,252,],[36,36,36,36,36,36,36,36,36,36,]),'STRING':([12,61,63,175,177,208,229,235,237,252,],[37,37,37,37,37,37,37,37,37,37,]),'BOOL':([12,61,63,175,177,208,229,235,237,252,],[38,38,38,38,38,38,38,38,38,38,]),'OPEN_PARENTHESIS':([16,27,28,29,30,31,32,41,46,47,49,52,53,54,56,77,80,81,93,100,101,104,105,106,107,110,111,114,115,133,139,194,220,228,232,],[42,47,48,-101,54,55,56,63,77,77,80,-92,77,77,77,77,77,-91,139,77,77,77,77,77,77,77,77,77,77,77,77,208,229,235,77,]),'CLOSE_KEY':([18,19,20,21,22,23,24,25,43,44,45,65,91,98,135,142,157,159,162,165,166,184,186,187,191,192,193,202,203,204,207,209,210,211,213,215,222,223,224,231,233,234,240,244,247,249,254,255,256,],[-101,-32,-33,-34,-35,-36,-37,-38,-101,-4,-6,-5,-27,-39,164,179,-80,-82,-86,-19,-101,202,-90,204,-101,-23,-25,-101,-79,-81,-24,-28,-29,-101,-76,-78,-101,-99,-100,238,-98,240,-77,-97,-69,251,-101,-101,257,]),'RETURN':([18,19,20,21,22,23,24,25,43,44,45,65,91,98,157,159,162,186,202,203,204,209,210,211,213,215,222,223,224,240,254,255,],[-101,-32,-33,-34,-35,-36,-37,-38,-101,-4,-6,-5,-27,-39,-80,-82,-86,-90,-101,-79,-81,-28,-29,-101,-76,-78,232,-99,-100,-77,-101,232,]),'ASSIGN':([26,29,39,40,50,52,81,123,],[46,-101,61,62,-10,-13,-12,-11,]),'DOT':([29,86,],[51,129,]),'OPEN_BRACKET':([29,35,36,37,38,86,92,],[53,-65,-66,-67,-68,53,138,]),'MULTIPLICATION':([29,50,52,66,71,72,73,74,75,76,81,123,151,152,153,186,],[-101,-10,-13,-63,114,-58,-59,-60,-61,-62,-12,-11,114,114,-64,-90,]),'DIVISION':([29,50,52,66,71,72,73,74,75,76,81,123,151,152,153,186,],[-101,-10,-13,-63,115,-58,-59,-60,-61,-62,-12,-11,115,115,-64,-90,]),'PLUS':([29,50,52,66,70,71,72,73,74,75,76,81,113,116,123,149,150,151,152,153,182,183,186,],[-101,-10,-13,-63,110,-101,-58,-59,-60,-61,-62,-12,-54,-57,-11,110,110,-101,-101,-64,-55,-56,-90,]),'MINUS':([29,50,52,66,70,71,72,73,74,75,76,81,113,116,123,149,150,151,152,153,182,183,186,],[-101,-10,-13,-63,111,-101,-58,-59,-60,-61,-62,-12,-54,-57,-11,111,111,-101,-101,-64,-55,-56,-90,]),'GREATER_THAN':([29,50,52,66,69,70,71,72,73,74,75,76,81,109,112,113,116,123,149,150,151,152,153,180,181,182,183,186,],[-101,-10,-13,-63,104,-101,-101,-58,-59,-60,-61,-62,-12,-50,-53,-54,-57,-11,-101,-101,-101,-101,-64,-51,-52,-55,-56,-90,]),'LESS_THAN':([29,50,52,66,69,70,71,72,73,74,75,76,81,109,112,113,116,123,149,150,151,152,153,180,181,182,183,186,],[-101,-10,-13,-63,105,-101,-101,-58,-59,-60,-61,-62,-12,-50,-53,-54,-57,-11,-101,-101,-101,-101,-64,-51,-52,-55,-56,-90,]),'EQUAL_TO':([29,50,52,66,69,70,71,72,73,74,75,76,81,109,112,113,116,123,149,150,151,152,153,180,181,182,183,186,],[-101,-10,-13,-63,106,-101,-101,-58,-59,-60,-61,-62,-12,-50,-53,-54,-57,-11,-101,-101,-101,-101,-64,-51,-52,-55,-56,-90,]),'NOT_EQUAL_TO':([29,50,52,66,69,70,71,72,73,74,75,76,81,109,112,113,116,123,149,150,151,152,153,180,181,182,183,186,],[-101,-10,-13,-63,107,-101,-101,-58,-59,-60,-61,-62,-12,-50,-53,-54,-57,-11,-101,-101,-101,-101,-64,-51,-52,-55,-56,-90,]),'AND':([29,50,52,66,68,69,70,71,72,73,74,75,76,81,103,108,109,112,113,116,123,145,146,147,148,149,150,151,152,153,180,181,182,183,186,],[-101,-10,-13,-63,100,-101,-101,-101,-58,-59,-60,-61,-62,-12,-44,-49,-50,-53,-54,-57,-11,-45,-46,-47,-48,-101,-101,-101,-101,-64,-51,-52,-55,-56,-90,]),'OR':([29,50,52,66,68,69,70,71,72,73,74,75,76,81,103,108,109,112,113,116,123,145,146,147,148,149,150,151,152,153,180,181,182,183,186,],[-101,-10,-13,-63,101,-101,-101,-101,-58,-59,-60,-61,-62,-12,-44,-49,-50,-53,-54,-57,-11,-45,-46,-47,-48,-101,-101,-101,-101,-64,-51,-52,-55,-56,-90,]),'CLOSE_PARENTHESIS':([29,42,50,52,63,66,68,69,70,71,72,73,74,75,76,78,80,81,83,84,85,86,87,88,94,96,99,102,103,108,109,112,113,116,117,120,121,122,123,126,128,130,132,134,139,141,143,144,145,146,147,148,149,150,151,152,153,155,160,161,163,172,173,174,176,178,180,181,182,183,186,188,189,208,212,221,225,229,235,236,241,],[-101,64,-10,-13,-101,-63,-101,-101,-101,-101,-58,-59,-60,-61,-62,118,-101,-12,124,125,-101,-101,131,-101,140,-73,-40,-43,-44,-49,-50,-53,-54,-57,153,156,-93,-94,-11,-83,-85,-13,-87,-89,-101,-101,-41,-42,-45,-46,-47,-48,-101,-101,-101,-101,-64,185,-101,-12,-101,197,-30,-31,-72,-75,-51,-52,-55,-56,-90,-84,-88,-101,-101,230,-74,-101,-101,242,245,]),'CLOSE_BRACKET':([29,50,52,66,68,69,70,71,72,73,74,75,76,81,82,99,102,103,108,109,112,113,116,123,143,144,145,146,147,148,149,150,151,152,153,171,180,181,182,183,186,],[-101,-10,-13,-63,-101,-101,-101,-101,-58,-59,-60,-61,-62,-12,123,-40,-43,-44,-49,-50,-53,-54,-57,-11,-41,-42,-45,-46,-47,-48,-101,-101,-101,-101,-64,196,-51,-52,-55,-56,-90,]),'COMMA':([29,50,52,66,68,69,70,71,72,73,74,75,76,81,85,86,88,99,102,103,108,109,112,113,116,123,130,141,143,144,145,146,147,148,149,150,151,152,153,160,161,163,180,181,182,183,186,212,],[-101,-10,-13,-63,-101,-101,-101,-101,-58,-59,-60,-61,-62,-12,127,-101,133,-40,-43,-44,-49,-50,-53,-54,-57,-11,-13,177,-41,-42,-45,-46,-47,-48,-101,-101,-101,-101,-64,127,-12,133,-51,-52,-55,-56,-90,177,]),'IS':([33,],[58,]),'OPEN_KEY':([33,35,36,37,38,57,59,64,90,118,124,185,198,199,200,214,242,253,],[-101,-65,-66,-67,-68,89,-16,97,-15,154,158,158,211,-70,-71,226,246,254,]),'FLOAT_VALUE':([46,47,53,54,56,77,80,100,101,104,105,106,107,110,111,114,115,133,139,232,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'INT_VALUE':([46,47,53,54,56,77,80,100,101,104,105,106,107,110,111,114,115,133,138,139,232,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,171,74,74,]),'BOOL_VALUE':([46,47,53,54,56,77,80,100,101,104,105,106,107,110,111,114,115,133,139,232,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'STRING_VALUE':([46,47,53,54,56,77,80,100,101,104,105,106,107,110,111,114,115,133,139,232,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'IN':([79,],[119,]),'RETURNS':([140,230,250,],[175,237,252,]),'VOID':([175,237,252,],[200,200,200,]),'CONSTRUCTOR':([190,],[206,]),'ELSE':([202,],[214,]),'AT_CLASS':([245,],[248,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'declaration':([4,],[6,]),'epsilon':([4,18,29,33,43,63,68,69,70,71,80,85,86,88,137,139,141,149,150,151,152,160,163,166,168,191,202,205,208,211,212,217,222,229,235,254,255,],[7,45,52,59,45,96,102,108,112,116,122,128,130,134,170,174,178,112,112,116,116,128,134,193,170,193,215,218,96,224,178,218,233,96,96,224,233,]),'class_declaration':([4,],[8,]),'variable_declaration':([4,6,18,43,89,97,137,154,158,168,211,226,246,254,],[9,25,25,25,137,25,168,25,25,168,25,25,25,25,]),'function_declaration':([4,],[10,]),'statement_loop':([6,97,154,158,211,226,246,254,],[17,142,184,187,223,234,249,223,]),'statement':([6,18,43,97,154,158,211,226,246,254,],[18,43,43,18,18,18,18,18,18,18,]),'assignment':([6,18,43,97,154,158,211,226,246,254,],[19,19,19,19,19,19,19,19,19,19,]),'conditional':([6,18,43,97,154,158,211,226,246,254,],[20,20,20,20,20,20,20,20,20,20,]),'cycle':([6,18,43,97,154,158,211,226,246,254,],[21,21,21,21,21,21,21,21,21,21,]),'read':([6,18,43,97,154,158,211,226,246,254,],[22,22,22,22,22,22,22,22,22,22,]),'write':([6,18,43,97,154,158,211,226,246,254,],[23,23,23,23,23,23,23,23,23,23,]),'function_call':([6,18,43,46,47,53,54,56,77,80,97,100,101,104,105,106,107,110,111,114,115,133,139,154,158,211,226,232,246,254,],[24,24,24,72,72,72,72,72,72,72,24,72,72,72,72,72,72,72,72,72,72,72,72,24,24,24,24,72,24,24,]),'variable':([6,18,43,46,47,53,54,55,56,77,80,97,100,101,104,105,106,107,110,111,114,115,127,133,139,154,158,211,226,232,246,254,],[26,26,26,66,66,66,66,85,66,66,66,26,66,66,66,66,66,66,66,66,66,66,160,66,66,26,26,26,26,66,26,26,]),'data_type':([12,61,63,175,177,208,229,235,237,252,],[34,92,95,199,201,95,95,95,199,199,]),'statement_loop1':([18,43,],[44,65,]),'function_call1':([29,],[49,]),'variable1':([29,86,],[50,50,]),'class_declaration1':([33,],[57,]),'hyper_exp':([46,47,53,54,56,77,80,133,139,232,],[67,78,82,83,88,117,88,163,88,239,]),'super_exp':([46,47,53,54,56,77,80,100,101,133,139,232,],[68,68,68,68,68,68,68,143,144,68,68,68,]),'exp':([46,47,53,54,56,77,80,100,101,104,105,106,107,133,139,232,],[69,69,69,69,69,69,69,69,69,145,146,147,148,69,69,69,]),'term':([46,47,53,54,56,77,80,100,101,104,105,106,107,110,111,133,139,232,],[70,70,70,70,70,70,70,70,70,70,70,70,70,149,150,70,70,70,]),'factor':([46,47,53,54,56,77,80,100,101,104,105,106,107,110,111,114,115,133,139,232,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,151,152,71,71,71,]),'variable_loop':([55,],[84,]),'hyper_exp_loop':([56,80,139,],[87,121,173,]),'parameter':([63,208,229,235,],[94,221,236,241,]),'hyper_exp1':([68,],[99,]),'super_exp1':([69,],[103,]),'exp1':([70,149,150,],[109,180,181,]),'term1':([71,151,152,],[113,182,183,]),'function_call2':([80,],[120,]),'variable_loop1':([85,160,],[126,188,]),'hyper_exp_loop1':([88,163,],[132,189,]),'class_body':([89,],[135,]),'class_body1':([89,],[136,]),'cycle1':([124,185,],[157,203,]),'class_body3':([136,],[165,]),'class_function_declaration':([136,166,191,],[166,191,191,]),'class_body2':([137,168,],[169,195,]),'variable_declaration1':([139,],[172,]),'parameter1':([141,212,],[176,225,]),'class_body4':([166,191,],[192,207,]),'return_arg':([175,237,252,],[198,243,253,]),'constructor':([190,],[205,]),'conditional1':([202,],[213,]),'class_declaration2':([205,217,],[216,227,]),'class_function':([205,217,],[217,217,]),'function_statement_loop':([211,254,],[222,255,]),'function_return':([222,255,],[231,256,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program1 MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY','program',10,'p_program','pecan_parser.py',7),
  ('program1 -> declaration statement_loop','program1',2,'p_program1','pecan_parser.py',13),
  ('program1 -> epsilon','program1',1,'p_program1','pecan_parser.py',14),
  ('statement_loop -> statement statement_loop1','statement_loop',2,'p_statement_loop','pecan_parser.py',20),
  ('statement_loop1 -> statement statement_loop1','statement_loop1',2,'p_statement_loop1','pecan_parser.py',26),
  ('statement_loop1 -> epsilon','statement_loop1',1,'p_statement_loop1','pecan_parser.py',27),
  ('declaration -> class_declaration','declaration',1,'p_declaration','pecan_parser.py',33),
  ('declaration -> variable_declaration','declaration',1,'p_declaration','pecan_parser.py',34),
  ('declaration -> function_declaration','declaration',1,'p_declaration','pecan_parser.py',35),
  ('variable -> ID variable1','variable',2,'p_variable','pecan_parser.py',41),
  ('variable1 -> OPEN_BRACKET hyper_exp CLOSE_BRACKET','variable1',3,'p_variable1','pecan_parser.py',47),
  ('variable1 -> DOT ID','variable1',2,'p_variable1','pecan_parser.py',48),
  ('variable1 -> epsilon','variable1',1,'p_variable1','pecan_parser.py',49),
  ('class_declaration -> CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2','class_declaration',9,'p_class_declaration','pecan_parser.py',56),
  ('class_declaration1 -> IS ID','class_declaration1',2,'p_class_declaration1','pecan_parser.py',62),
  ('class_declaration1 -> epsilon','class_declaration1',1,'p_class_declaration1','pecan_parser.py',63),
  ('class_declaration2 -> class_function class_declaration2','class_declaration2',2,'p_class_declaration2','pecan_parser.py',69),
  ('class_declaration2 -> epsilon','class_declaration2',1,'p_class_declaration2','pecan_parser.py',70),
  ('class_body -> class_body1 class_body3','class_body',2,'p_class_body','pecan_parser.py',76),
  ('class_body1 -> variable_declaration class_body2','class_body1',2,'p_class_body1','pecan_parser.py',82),
  ('class_body2 -> variable_declaration class_body2','class_body2',2,'p_class_body2','pecan_parser.py',88),
  ('class_body2 -> epsilon','class_body2',1,'p_class_body2','pecan_parser.py',89),
  ('class_body3 -> class_function_declaration class_body4','class_body3',2,'p_class_body3','pecan_parser.py',95),
  ('class_body4 -> class_function_declaration class_body4','class_body4',2,'p_class_body4','pecan_parser.py',101),
  ('class_body4 -> epsilon','class_body4',1,'p_class_body4','pecan_parser.py',102),
  ('constructor -> CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY','constructor',8,'p_constructor','pecan_parser.py',109),
  ('variable_declaration -> VAR data_type ID SEMICOLON','variable_declaration',4,'p_variable_declaration','pecan_parser.py',115),
  ('variable_declaration -> GROUP ID ASSIGN data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON','variable_declaration',8,'p_variable_declaration','pecan_parser.py',116),
  ('variable_declaration -> OBJ ID ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON','variable_declaration',8,'p_variable_declaration','pecan_parser.py',117),
  ('variable_declaration1 -> hyper_exp_loop','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',124),
  ('variable_declaration1 -> epsilon','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',125),
  ('statement -> assignment','statement',1,'p_statement','pecan_parser.py',130),
  ('statement -> conditional','statement',1,'p_statement','pecan_parser.py',131),
  ('statement -> cycle','statement',1,'p_statement','pecan_parser.py',132),
  ('statement -> read','statement',1,'p_statement','pecan_parser.py',133),
  ('statement -> write','statement',1,'p_statement','pecan_parser.py',134),
  ('statement -> function_call','statement',1,'p_statement','pecan_parser.py',135),
  ('statement -> variable_declaration','statement',1,'p_statement','pecan_parser.py',136),
  ('assignment -> variable ASSIGN hyper_exp SEMICOLON','assignment',4,'p_assignment','pecan_parser.py',142),
  ('hyper_exp -> super_exp hyper_exp1','hyper_exp',2,'p_hyper_exp','pecan_parser.py',148),
  ('hyper_exp1 -> AND super_exp','hyper_exp1',2,'p_hyper_exp1','pecan_parser.py',154),
  ('hyper_exp1 -> OR super_exp','hyper_exp1',2,'p_hyper_exp1','pecan_parser.py',155),
  ('hyper_exp1 -> epsilon','hyper_exp1',1,'p_hyper_exp1','pecan_parser.py',156),
  ('super_exp -> exp super_exp1','super_exp',2,'p_super_exp','pecan_parser.py',162),
  ('super_exp1 -> GREATER_THAN exp','super_exp1',2,'p_super_exp1','pecan_parser.py',168),
  ('super_exp1 -> LESS_THAN exp','super_exp1',2,'p_super_exp1','pecan_parser.py',169),
  ('super_exp1 -> EQUAL_TO exp','super_exp1',2,'p_super_exp1','pecan_parser.py',170),
  ('super_exp1 -> NOT_EQUAL_TO exp','super_exp1',2,'p_super_exp1','pecan_parser.py',171),
  ('super_exp1 -> epsilon','super_exp1',1,'p_super_exp1','pecan_parser.py',172),
  ('exp -> term exp1','exp',2,'p_exp','pecan_parser.py',178),
  ('exp1 -> PLUS term exp1','exp1',3,'p_exp1','pecan_parser.py',184),
  ('exp1 -> MINUS term exp1','exp1',3,'p_exp1','pecan_parser.py',185),
  ('exp1 -> epsilon','exp1',1,'p_exp1','pecan_parser.py',186),
  ('term -> factor term1','term',2,'p_term','pecan_parser.py',192),
  ('term1 -> MULTIPLICATION factor term1','term1',3,'p_term1','pecan_parser.py',198),
  ('term1 -> DIVISION factor term1','term1',3,'p_term1','pecan_parser.py',199),
  ('term1 -> epsilon','term1',1,'p_term1','pecan_parser.py',200),
  ('factor -> function_call','factor',1,'p_factor','pecan_parser.py',206),
  ('factor -> FLOAT_VALUE','factor',1,'p_factor','pecan_parser.py',207),
  ('factor -> INT_VALUE','factor',1,'p_factor','pecan_parser.py',208),
  ('factor -> BOOL_VALUE','factor',1,'p_factor','pecan_parser.py',209),
  ('factor -> STRING_VALUE','factor',1,'p_factor','pecan_parser.py',210),
  ('factor -> variable','factor',1,'p_factor','pecan_parser.py',211),
  ('factor -> OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS','factor',3,'p_factor','pecan_parser.py',212),
  ('data_type -> INT','data_type',1,'p_data_type','pecan_parser.py',218),
  ('data_type -> FLOAT','data_type',1,'p_data_type','pecan_parser.py',219),
  ('data_type -> STRING','data_type',1,'p_data_type','pecan_parser.py',220),
  ('data_type -> BOOL','data_type',1,'p_data_type','pecan_parser.py',221),
  ('class_function_declaration -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON','class_function_declaration',8,'p_class_function_declaration','pecan_parser.py',227),
  ('return_arg -> data_type','return_arg',1,'p_return_arg','pecan_parser.py',233),
  ('return_arg -> VOID','return_arg',1,'p_return_arg','pecan_parser.py',234),
  ('parameter -> data_type ID parameter1','parameter',3,'p_parameter','pecan_parser.py',240),
  ('parameter -> epsilon','parameter',1,'p_parameter','pecan_parser.py',241),
  ('parameter1 -> COMMA data_type ID parameter1','parameter1',4,'p_parameter1','pecan_parser.py',247),
  ('parameter1 -> epsilon','parameter1',1,'p_parameter1','pecan_parser.py',248),
  ('conditional -> IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY conditional1','conditional',8,'p_conditional','pecan_parser.py',254),
  ('conditional1 -> ELSE OPEN_KEY statement_loop CLOSE_KEY','conditional1',4,'p_conditional1','pecan_parser.py',260),
  ('conditional1 -> epsilon','conditional1',1,'p_conditional1','pecan_parser.py',261),
  ('cycle -> FOR OPEN_PARENTHESIS ID IN ID CLOSE_PARENTHESIS cycle1','cycle',7,'p_cycle','pecan_parser.py',267),
  ('cycle -> WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS cycle1','cycle',5,'p_cycle','pecan_parser.py',268),
  ('cycle1 -> OPEN_KEY statement_loop CLOSE_KEY','cycle1',3,'p_cycle1','pecan_parser.py',274),
  ('read -> READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON','read',5,'p_read','pecan_parser.py',280),
  ('variable_loop -> variable variable_loop1','variable_loop',2,'p_variable_loop','pecan_parser.py',286),
  ('variable_loop1 -> COMMA variable variable_loop1','variable_loop1',3,'p_variable_loop1','pecan_parser.py',292),
  ('variable_loop1 -> epsilon','variable_loop1',1,'p_variable_loop1','pecan_parser.py',293),
  ('write -> WRITE OPEN_PARENTHESIS hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON','write',5,'p_write','pecan_parser.py',299),
  ('hyper_exp_loop -> hyper_exp hyper_exp_loop1','hyper_exp_loop',2,'p_hyper_exp_loop','pecan_parser.py',305),
  ('hyper_exp_loop1 -> COMMA hyper_exp hyper_exp_loop1','hyper_exp_loop1',3,'p_hyper_exp_loop1','pecan_parser.py',311),
  ('hyper_exp_loop1 -> epsilon','hyper_exp_loop1',1,'p_hyper_exp_loop1','pecan_parser.py',312),
  ('function_call -> ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON','function_call',6,'p_function_call','pecan_parser.py',319),
  ('function_call1 -> DOT ID','function_call1',2,'p_function_call1','pecan_parser.py',325),
  ('function_call1 -> epsilon','function_call1',1,'p_function_call1','pecan_parser.py',326),
  ('function_call2 -> hyper_exp_loop','function_call2',1,'p_function_call2','pecan_parser.py',332),
  ('function_call2 -> epsilon','function_call2',1,'p_function_call2','pecan_parser.py',333),
  ('class_function -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS AT_CLASS ID RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY','class_function',13,'p_class_function','pecan_parser.py',339),
  ('function_declaration -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY','function_declaration',11,'p_function_declaration','pecan_parser.py',346),
  ('function_return -> RETURN hyper_exp SEMICOLON','function_return',3,'p_function_return','pecan_parser.py',352),
  ('function_return -> epsilon','function_return',1,'p_function_return','pecan_parser.py',353),
  ('function_statement_loop -> statement_loop','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',359),
  ('function_statement_loop -> epsilon','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',360),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','pecan_parser.py',365),
]
