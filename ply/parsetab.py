
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN AT_CLASS BOOL BOOL_VALUE CLASS CLOSE_BRACKET CLOSE_KEY CLOSE_PARENTHESIS COMMA CONSTRUCTOR DIVISION DO DOT ELSE EQUAL_TO FLOAT FLOAT_VALUE FOR FUNCTION GREATER_THAN GROUP ID IF IN INT INT_VALUE IS LESS_THAN MAIN MINUS MULTIPLICATION NOT_EQUAL_TO OBJ OPEN_BRACKET OPEN_KEY OPEN_PARENTHESIS OR PLUS PROGRAM READ RETURN RETURNS SEMICOLON STRING STRING_VALUE VAR VOID WHILE WRITE\n    program : PROGRAM np_start_func_dir ID SEMICOLON declaration_loop main_function\n    \n    main_function : MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY variable_declaration_loop statement_loop CLOSE_KEY\n    \n    np_start_func_dir : epsilon\n    \n    declaration_loop : declaration declaration_loop\n                     | epsilon\n    \n    statement_loop  : statement statement_loop1\n    \n    statement_loop1 : statement statement_loop1\n                    | epsilon\n    \n    declaration : class_declaration\n                | variable_declaration\n                | function_declaration\n    \n    variable    : ID variable1\n    \n    variable1   : OPEN_BRACKET hyper_exp CLOSE_BRACKET\n                | DOT ID\n                | epsilon\n\n    \n    class_declaration   : CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2\n    \n    class_declaration1  : IS ID\n                        | epsilon\n    \n    class_declaration2  : class_function class_declaration2\n                        | epsilon\n    \n    class_body  : class_body1 class_body3\n    \n    class_body1 : variable_declaration class_body2\n    \n    class_body2 : variable_declaration class_body2\n                | epsilon\n    \n    class_body3 : class_function_declaration class_body4\n    \n    class_body4 : class_function_declaration class_body4\n                | epsilon\n\n    \n    constructor : CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY\n    \n    variable_declaration_loop : variable_declaration variable_declaration_loop\n                                | epsilon\n    \n    variable_declaration    : VAR data_type ID SEMICOLON\n                            | GROUP ID ASSIGN data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON\n                            | OBJ ID ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON\n\n    \n    atomic_var_type    : VAR\n                | GROUP\n    \n    variable_declaration1   : hyper_exp_loop\n                            | epsilon\n    \n    statement   : assignment\n                | conditional\n                | cycle\n                | read\n                | write\n                | function_call\n    \n    assignment  : variable ASSIGN hyper_exp SEMICOLON\n    \n    np_add_operator : epsilon\n    \n    hyper_exp   : super_exp np_hyper_exp hyper_exp1\n    \n    hyper_exp1  : AND np_add_operator super_exp np_hyper_exp hyper_exp1\n                | OR np_add_operator super_exp np_hyper_exp hyper_exp1\n                | epsilon\n    \n    np_hyper_exp : epsilon\n    \n    super_exp   : exp np_super_exp super_exp1\n    \n    super_exp1  : GREATER_THAN np_add_operator exp np_super_exp super_exp1\n                | LESS_THAN np_add_operator exp np_super_exp super_exp1\n                | EQUAL_TO np_add_operator exp np_super_exp super_exp1\n                | NOT_EQUAL_TO np_add_operator exp np_super_exp super_exp1\n                | epsilon\n    \n    np_super_exp : epsilon\n    \n    exp : term np_exp exp1\n    \n    exp1    : PLUS np_add_operator term np_exp exp1\n            | MINUS np_add_operator term np_exp exp1\n            | epsilon\n    \n    np_exp : epsilon\n    \n    term    : factor np_term term1\n    \n    term1   : MULTIPLICATION np_add_operator factor np_term term1\n            | DIVISION np_add_operator factor np_term term1\n            | epsilon\n    \n    np_term : epsilon\n    \n    factor  : function_call\n            | FLOAT_VALUE\n            | INT_VALUE\n            | BOOL_VALUE\n            | STRING_VALUE\n            | variable\n            | OPEN_PARENTHESIS np_add_open_parenthesis hyper_exp CLOSE_PARENTHESIS np_remove_open_parenthesis\n    \n    np_add_open_parenthesis : epsilon\n    \n    np_remove_open_parenthesis : epsilon\n    \n    data_type   : INT\n                | FLOAT\n                | STRING\n                | BOOL\n    \n    class_function_declaration : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON\n    \n    return_arg  : data_type\n                | VOID\n    \n    parameter   : atomic_var_type data_type ID parameter1\n                | OBJ ID ID parameter1\n                | epsilon\n    \n    parameter1  : COMMA atomic_var_type data_type ID parameter1\n                | COMMA OBJ ID ID parameter1\n                | epsilon\n    \n    conditional : IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_if_1 OPEN_KEY statement_loop CLOSE_KEY conditional1\n    \n    conditional1    : ELSE np_if_3 OPEN_KEY statement_loop CLOSE_KEY np_if_2\n                    | np_if_2\n    \n    np_if_1 : epsilon\n    \n    np_if_2 : epsilon\n    \n    np_if_3 : epsilon\n    \n    cycle   : FOR OPEN_PARENTHESIS ID IN ID CLOSE_PARENTHESIS cycle1\n            | WHILE np_while_1 OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_while_2 cycle1\n            | DO np_do_while_1 OPEN_KEY statement_loop CLOSE_KEY WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_do_while_2 SEMICOLON\n    \n    cycle1  : OPEN_KEY statement_loop CLOSE_KEY np_while_3\n    \n    np_while_1 : epsilon\n    \n    np_while_2 : epsilon\n    \n    np_while_3 : epsilon\n    \n    np_do_while_1 : epsilon\n    \n    np_do_while_2 : epsilon\n    \n    read : READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    variable_loop : variable variable_loop1\n    \n    variable_loop1 : COMMA variable variable_loop1\n                    | epsilon\n    \n    write : WRITE OPEN_PARENTHESIS write_hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    write_hyper_exp_loop : hyper_exp np_add_write_quad write_hyper_exp_loop1\n    \n    write_hyper_exp_loop1 : COMMA hyper_exp np_add_write_quad write_hyper_exp_loop1\n                    | epsilon\n\n    \n    np_add_write_quad : epsilon\n    \n    hyper_exp_loop : hyper_exp hyper_exp_loop1\n    \n    hyper_exp_loop1 : COMMA hyper_exp hyper_exp_loop1\n                    | epsilon\n\n    \n    function_call : ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON\n    \n    function_call1 : DOT ID\n                    | epsilon\n    \n    function_call2 : hyper_exp_loop\n                    | epsilon\n    \n    class_function : AT_CLASS ID FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY\n\n    \n    function_declaration : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY variable_declaration_loop function_statement_loop function_return CLOSE_KEY\n    \n    function_return : RETURN hyper_exp SEMICOLON\n                    | epsilon\n    \n    function_statement_loop : statement_loop\n                    | epsilon\n    epsilon : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,138,],[0,-1,-2,]),'ID':([2,3,4,13,15,16,17,22,23,24,25,26,32,36,41,46,50,55,57,58,59,60,61,65,71,90,91,92,93,94,95,96,104,114,116,117,118,121,139,142,143,144,149,150,152,155,156,160,163,164,167,168,169,170,173,174,177,178,180,182,187,188,197,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,227,229,261,264,266,268,271,283,287,310,311,312,313,316,319,325,327,328,329,335,336,340,341,344,345,347,],[-128,5,-3,21,27,28,29,34,-77,-78,-79,-80,40,43,-31,58,-128,70,87,88,70,-128,-30,109,-128,70,-38,-39,-40,-41,-42,-43,-29,157,70,70,-75,70,70,70,70,186,191,70,198,-32,70,-33,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,219,70,70,235,70,-45,70,70,70,70,70,70,70,70,70,70,254,255,-44,258,191,263,-105,-109,70,294,-117,70,70,-96,70,-97,70,70,-128,-90,-92,-94,-128,-99,-102,70,-98,70,-128,-91,]),'SEMICOLON':([5,23,24,25,26,34,62,70,76,77,78,79,80,81,82,83,84,85,111,113,115,119,123,124,125,126,127,128,129,130,132,133,157,162,165,166,171,172,175,176,179,184,203,204,225,231,238,239,240,241,242,243,244,245,246,247,248,249,250,271,272,273,274,275,276,277,278,279,280,281,296,297,298,299,300,301,302,303,304,305,306,308,330,337,338,],[6,-77,-78,-79,-80,41,105,-128,-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,155,-12,-15,160,-128,-50,-128,-57,-128,-62,-128,-67,-82,-83,-14,-46,-49,-51,-56,-58,-61,-63,-66,220,-13,-128,261,264,271,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-117,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,317,-47,-48,-52,-53,-54,-55,-59,-60,-64,-65,318,-128,341,-104,]),'MAIN':([6,7,8,9,10,11,12,20,41,151,155,160,194,195,196,234,307,332,349,],[-128,19,-128,-5,-9,-10,-11,-4,-31,-128,-32,-33,-16,-128,-20,-19,-123,-28,-122,]),'CLASS':([6,8,10,11,12,41,151,155,160,194,195,196,234,307,332,349,],[13,13,-9,-10,-11,-31,-128,-32,-33,-16,-128,-20,-19,-123,-28,-122,]),'VAR':([6,8,10,11,12,37,39,41,50,53,60,66,135,151,154,155,160,180,194,195,196,234,236,307,315,332,349,],[14,14,-9,-10,-11,48,14,-31,14,14,14,14,48,-128,48,-32,-33,14,-16,-128,-20,-19,48,-123,48,-28,-122,]),'GROUP':([6,8,10,11,12,37,39,41,50,53,60,66,135,151,154,155,160,180,194,195,196,234,236,307,315,332,349,],[15,15,-9,-10,-11,49,15,-31,15,15,15,15,49,-128,49,-32,-33,15,-16,-128,-20,-19,49,-123,49,-28,-122,]),'OBJ':([6,8,10,11,12,37,39,41,50,53,60,66,135,151,154,155,160,180,194,195,196,234,236,307,315,332,349,],[16,16,-9,-10,-11,46,16,-31,16,16,16,16,182,-128,46,-32,-33,16,-16,-128,-20,-19,46,-123,46,-28,-122,]),'FUNCTION':([6,8,10,11,12,41,52,53,64,66,67,68,106,110,151,155,160,194,195,196,234,235,307,317,332,349,],[17,17,-9,-10,-11,-31,65,-128,65,-128,-22,-24,65,-23,-128,-32,-33,-16,-128,-20,-19,268,-123,-81,-28,-122,]),'INT':([14,35,45,48,49,86,181,270,339,],[23,23,23,-34,-35,23,23,23,23,]),'FLOAT':([14,35,45,48,49,86,181,270,339,],[24,24,24,-34,-35,24,24,24,24,]),'STRING':([14,35,45,48,49,86,181,270,339,],[25,25,25,-34,-35,25,25,25,25,]),'BOOL':([14,35,45,48,49,86,181,270,339,],[26,26,26,-34,-35,26,26,26,26,]),'OPEN_PARENTHESIS':([19,29,43,55,70,71,98,99,100,102,103,109,112,115,116,117,118,121,142,143,145,146,150,156,157,163,164,167,168,169,170,173,174,177,178,187,198,206,207,208,209,210,211,212,213,214,215,216,266,283,291,294,313,],[30,37,55,71,-128,-128,143,144,-128,149,150,154,156,-119,71,71,-75,71,71,71,187,-100,71,71,-118,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,71,236,71,-45,71,71,71,71,71,71,71,71,71,71,71,313,315,71,]),'IS':([21,],[32,]),'OPEN_KEY':([21,23,24,25,26,31,33,38,40,101,131,132,133,147,148,221,256,257,259,288,289,290,295,326,333,334,342,],[-128,-77,-78,-79,-80,39,-18,50,-17,-128,180,-82,-83,188,-103,-128,287,-93,-128,311,311,-101,316,-128,340,-95,344,]),'OPEN_BRACKET':([23,24,25,26,42,70,191,],[-77,-78,-79,-80,54,116,116,]),'ASSIGN':([27,28,70,97,113,115,157,203,],[35,36,-128,142,-12,-15,-14,-13,]),'CLOSE_PARENTHESIS':([30,37,44,47,55,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,113,115,120,122,123,124,125,126,127,128,129,130,134,136,137,154,156,157,159,161,162,165,166,171,172,175,176,179,185,189,190,191,192,193,199,200,201,202,203,204,205,223,226,228,230,232,233,236,239,240,241,242,243,244,245,246,247,248,249,250,254,255,258,262,263,265,267,269,271,272,273,274,275,276,277,278,279,280,281,285,286,292,293,297,298,299,300,301,302,303,304,305,306,314,315,321,322,323,],[38,-128,56,-86,-128,-128,119,-36,-37,-128,-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,-128,-128,-12,-15,-114,-116,-128,-50,-128,-57,-128,-62,-128,-67,-84,-89,-85,-128,-128,-14,204,-128,-46,-49,-51,-56,-58,-61,-63,-66,221,225,-128,-128,231,-128,237,238,-120,-121,-13,-128,-115,259,-106,-108,-15,-128,-113,-128,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,288,-128,-14,-110,-112,295,-117,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-87,-88,-107,-128,-47,-48,-52,-53,-54,-55,-59,-60,-64,-65,-128,-128,330,-111,331,]),'IF':([41,50,59,60,61,90,91,92,93,94,95,96,104,139,155,160,180,188,217,220,261,264,271,287,310,311,312,316,319,325,327,328,329,335,336,340,341,344,345,347,],[-31,-128,98,-128,-30,98,-38,-39,-40,-41,-42,-43,-29,98,-32,-33,-128,98,98,-44,-105,-109,-117,98,-96,98,-97,98,-128,-90,-92,-94,-128,-99,-102,98,-98,98,-128,-91,]),'FOR':([41,50,59,60,61,90,91,92,93,94,95,96,104,139,155,160,180,188,217,220,261,264,271,287,310,311,312,316,319,325,327,328,329,335,336,340,341,344,345,347,],[-31,-128,99,-128,-30,99,-38,-39,-40,-41,-42,-43,-29,99,-32,-33,-128,99,99,-44,-105,-109,-117,99,-96,99,-97,99,-128,-90,-92,-94,-128,-99,-102,99,-98,99,-128,-91,]),'WHILE':([41,50,59,60,61,90,91,92,93,94,95,96,104,139,155,160,180,188,217,220,260,261,264,271,287,310,311,312,316,319,325,327,328,329,335,336,340,341,344,345,347,],[-31,-128,100,-128,-30,100,-38,-39,-40,-41,-42,-43,-29,100,-32,-33,-128,100,100,-44,291,-105,-109,-117,100,-96,100,-97,100,-128,-90,-92,-94,-128,-99,-102,100,-98,100,-128,-91,]),'DO':([41,50,59,60,61,90,91,92,93,94,95,96,104,139,155,160,180,188,217,220,261,264,271,287,310,311,312,316,319,325,327,328,329,335,336,340,341,344,345,347,],[-31,-128,101,-128,-30,101,-38,-39,-40,-41,-42,-43,-29,101,-32,-33,-128,101,101,-44,-105,-109,-117,101,-96,101,-97,101,-128,-90,-92,-94,-128,-99,-102,101,-98,101,-128,-91,]),'READ':([41,50,59,60,61,90,91,92,93,94,95,96,104,139,155,160,180,188,217,220,261,264,271,287,310,311,312,316,319,325,327,328,329,335,336,340,341,344,345,347,],[-31,-128,102,-128,-30,102,-38,-39,-40,-41,-42,-43,-29,102,-32,-33,-128,102,102,-44,-105,-109,-117,102,-96,102,-97,102,-128,-90,-92,-94,-128,-99,-102,102,-98,102,-128,-91,]),'WRITE':([41,50,59,60,61,90,91,92,93,94,95,96,104,139,155,160,180,188,217,220,261,264,271,287,310,311,312,316,319,325,327,328,329,335,336,340,341,344,345,347,],[-31,-128,103,-128,-30,103,-38,-39,-40,-41,-42,-43,-29,103,-32,-33,-128,103,103,-44,-105,-109,-117,103,-96,103,-97,103,-128,-90,-92,-94,-128,-99,-102,103,-98,103,-128,-91,]),'RETURN':([41,60,61,90,91,92,93,94,95,96,104,139,140,141,155,160,180,183,217,220,251,252,253,261,264,271,310,312,319,325,327,328,329,335,336,341,344,345,346,347,],[-31,-128,-30,-128,-38,-39,-40,-41,-42,-43,-29,-128,-6,-8,-32,-33,-128,-7,-128,-44,283,-126,-127,-105,-109,-117,-96,-97,-128,-90,-92,-94,-128,-99,-102,-98,-128,-128,283,-91,]),'CLOSE_KEY':([41,51,60,61,63,64,89,90,91,92,93,94,95,96,104,106,107,108,139,140,141,153,155,160,180,183,217,220,224,251,252,253,261,264,271,282,284,309,310,312,317,318,319,320,324,325,327,328,329,335,336,341,343,344,345,346,347,348,],[-31,62,-128,-30,-21,-128,138,-128,-38,-39,-40,-41,-42,-43,-29,-128,-25,-27,-128,-6,-8,-26,-32,-33,-128,-7,-128,-44,260,-128,-126,-127,-105,-109,-117,307,-125,319,-96,-97,-81,-124,-128,329,332,-90,-92,-94,-128,-99,-102,-98,345,-128,-128,-128,-91,349,]),'INT_VALUE':([54,55,71,116,117,118,121,142,143,150,156,163,164,167,168,169,170,173,174,177,178,187,206,207,208,209,210,211,212,213,214,215,216,266,283,313,],[69,82,-128,82,82,-75,82,82,82,82,82,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,82,82,-45,82,82,82,82,82,82,82,82,82,82,82,82,]),'FLOAT_VALUE':([55,71,116,117,118,121,142,143,150,156,163,164,167,168,169,170,173,174,177,178,187,206,207,208,209,210,211,212,213,214,215,216,266,283,313,],[81,-128,81,81,-75,81,81,81,81,81,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,81,81,-45,81,81,81,81,81,81,81,81,81,81,81,81,]),'BOOL_VALUE':([55,71,116,117,118,121,142,143,150,156,163,164,167,168,169,170,173,174,177,178,187,206,207,208,209,210,211,212,213,214,215,216,266,283,313,],[83,-128,83,83,-75,83,83,83,83,83,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,83,83,-45,83,83,83,83,83,83,83,83,83,83,83,83,]),'STRING_VALUE':([55,71,116,117,118,121,142,143,150,156,163,164,167,168,169,170,173,174,177,178,187,206,207,208,209,210,211,212,213,214,215,216,266,283,313,],[84,-128,84,84,-75,84,84,84,84,84,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,84,84,-45,84,84,84,84,84,84,84,84,84,84,84,84,]),'RETURNS':([56,237,331,],[86,270,339,]),'CLOSE_BRACKET':([69,70,76,77,78,79,80,81,82,83,84,85,113,115,123,124,125,126,127,128,129,130,157,158,162,165,166,171,172,175,176,179,203,204,239,240,241,242,243,244,245,246,247,248,249,250,271,272,273,274,275,276,277,278,279,280,281,297,298,299,300,301,302,303,304,305,306,],[111,-128,-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,-128,-50,-128,-57,-128,-62,-128,-67,-14,203,-46,-49,-51,-56,-58,-61,-63,-66,-13,-128,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-117,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-47,-48,-52,-53,-54,-55,-59,-60,-64,-65,]),'DOT':([70,191,],[114,229,]),'MULTIPLICATION':([70,79,80,81,82,83,84,85,113,115,129,130,157,203,204,239,240,249,250,271,280,281,],[-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,177,-67,-14,-13,-128,-74,-76,-128,-128,-117,177,177,]),'DIVISION':([70,79,80,81,82,83,84,85,113,115,129,130,157,203,204,239,240,249,250,271,280,281,],[-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,178,-67,-14,-13,-128,-74,-76,-128,-128,-117,178,178,]),'PLUS':([70,78,79,80,81,82,83,84,85,113,115,127,128,129,130,157,176,179,203,204,239,240,247,248,249,250,271,278,279,280,281,305,306,],[-128,-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,173,-62,-128,-67,-14,-63,-66,-13,-128,-74,-76,-128,-128,-128,-128,-117,173,173,-128,-128,-64,-65,]),'MINUS':([70,78,79,80,81,82,83,84,85,113,115,127,128,129,130,157,176,179,203,204,239,240,247,248,249,250,271,278,279,280,281,305,306,],[-128,-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,174,-62,-128,-67,-14,-63,-66,-13,-128,-74,-76,-128,-128,-128,-128,-117,174,174,-128,-128,-64,-65,]),'GREATER_THAN':([70,77,78,79,80,81,82,83,84,85,113,115,125,126,127,128,129,130,157,172,175,176,179,203,204,239,240,243,244,245,246,247,248,249,250,271,274,275,276,277,278,279,280,281,303,304,305,306,],[-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,167,-57,-128,-62,-128,-67,-14,-58,-61,-63,-66,-13,-128,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-117,167,167,167,167,-128,-128,-128,-128,-59,-60,-64,-65,]),'LESS_THAN':([70,77,78,79,80,81,82,83,84,85,113,115,125,126,127,128,129,130,157,172,175,176,179,203,204,239,240,243,244,245,246,247,248,249,250,271,274,275,276,277,278,279,280,281,303,304,305,306,],[-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,168,-57,-128,-62,-128,-67,-14,-58,-61,-63,-66,-13,-128,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-117,168,168,168,168,-128,-128,-128,-128,-59,-60,-64,-65,]),'EQUAL_TO':([70,77,78,79,80,81,82,83,84,85,113,115,125,126,127,128,129,130,157,172,175,176,179,203,204,239,240,243,244,245,246,247,248,249,250,271,274,275,276,277,278,279,280,281,303,304,305,306,],[-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,169,-57,-128,-62,-128,-67,-14,-58,-61,-63,-66,-13,-128,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-117,169,169,169,169,-128,-128,-128,-128,-59,-60,-64,-65,]),'NOT_EQUAL_TO':([70,77,78,79,80,81,82,83,84,85,113,115,125,126,127,128,129,130,157,172,175,176,179,203,204,239,240,243,244,245,246,247,248,249,250,271,274,275,276,277,278,279,280,281,303,304,305,306,],[-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,170,-57,-128,-62,-128,-67,-14,-58,-61,-63,-66,-13,-128,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-117,170,170,170,170,-128,-128,-128,-128,-59,-60,-64,-65,]),'AND':([70,76,77,78,79,80,81,82,83,84,85,113,115,123,124,125,126,127,128,129,130,157,166,171,172,175,176,179,203,204,239,240,241,242,243,244,245,246,247,248,249,250,271,272,273,274,275,276,277,278,279,280,281,299,300,301,302,303,304,305,306,],[-128,-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,163,-50,-128,-57,-128,-62,-128,-67,-14,-51,-56,-58,-61,-63,-66,-13,-128,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-117,163,163,-128,-128,-128,-128,-128,-128,-128,-128,-52,-53,-54,-55,-59,-60,-64,-65,]),'OR':([70,76,77,78,79,80,81,82,83,84,85,113,115,123,124,125,126,127,128,129,130,157,166,171,172,175,176,179,203,204,239,240,241,242,243,244,245,246,247,248,249,250,271,272,273,274,275,276,277,278,279,280,281,299,300,301,302,303,304,305,306,],[-128,-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,-12,-15,164,-50,-128,-57,-128,-62,-128,-67,-14,-51,-56,-58,-61,-63,-66,-13,-128,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-117,164,164,-128,-128,-128,-128,-128,-128,-128,-128,-52,-53,-54,-55,-59,-60,-64,-65,]),'COMMA':([70,75,76,77,78,79,80,81,82,83,84,85,87,88,113,115,123,124,125,126,127,128,129,130,157,161,162,165,166,171,172,175,176,179,190,191,193,203,204,230,232,233,239,240,241,242,243,244,245,246,247,248,249,250,254,255,262,263,271,272,273,274,275,276,277,278,279,280,281,293,297,298,299,300,301,302,303,304,305,306,314,],[-128,121,-128,-128,-128,-128,-68,-69,-70,-71,-72,-73,135,135,-12,-15,-128,-50,-128,-57,-128,-62,-128,-67,-14,121,-46,-49,-51,-56,-58,-61,-63,-66,227,-128,-128,-13,-128,-15,266,-113,-74,-76,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,135,135,227,-14,-117,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-47,-48,-52,-53,-54,-55,-59,-60,-64,-65,266,]),'VOID':([86,270,339,],[133,133,133,]),'CONSTRUCTOR':([105,],[152,]),'AT_CLASS':([151,195,332,349,],[197,197,-28,-122,]),'IN':([186,],[222,]),'ELSE':([319,],[326,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'np_start_func_dir':([2,],[3,]),'epsilon':([2,6,8,21,37,50,53,55,60,64,66,70,71,75,76,77,78,79,87,88,90,100,101,106,123,125,127,129,139,151,154,156,161,163,164,167,168,169,170,173,174,177,178,180,190,191,193,195,204,217,221,232,236,241,242,243,244,245,246,247,248,249,250,251,254,255,259,262,272,273,274,275,276,277,278,279,280,281,293,314,315,319,326,329,330,344,345,346,],[4,9,9,33,47,61,68,74,61,108,68,115,118,122,124,126,128,130,136,136,141,146,148,108,165,171,175,179,141,196,47,202,122,207,207,207,207,207,207,207,207,207,207,61,228,230,233,196,240,253,257,267,47,124,124,126,126,126,126,128,128,130,130,284,136,136,290,228,165,165,171,171,171,171,175,175,179,179,233,267,47,328,334,336,338,253,328,284,]),'declaration_loop':([6,8,],[7,20,]),'declaration':([6,8,],[8,8,]),'class_declaration':([6,8,],[10,10,]),'variable_declaration':([6,8,39,50,53,60,66,180,],[11,11,53,60,66,60,66,60,]),'function_declaration':([6,8,],[12,12,]),'main_function':([7,],[18,]),'data_type':([14,35,45,86,181,270,339,],[22,42,57,132,218,132,132,]),'class_declaration1':([21,],[31,]),'parameter':([37,154,236,315,],[44,199,269,323,]),'atomic_var_type':([37,135,154,236,315,],[45,181,45,45,45,]),'class_body':([39,],[51,]),'class_body1':([39,],[52,]),'variable_declaration_loop':([50,60,180,],[59,104,217,]),'class_body3':([52,],[63,]),'class_function_declaration':([52,64,106,],[64,106,106,]),'class_body2':([53,66,],[67,110,]),'variable_declaration1':([55,],[72,]),'hyper_exp_loop':([55,156,],[73,201,]),'hyper_exp':([55,116,117,121,142,143,150,156,187,266,283,313,],[75,158,159,161,184,185,193,75,223,293,308,321,]),'super_exp':([55,116,117,121,142,143,150,156,187,206,208,266,283,313,],[76,76,76,76,76,76,76,76,76,241,242,76,76,76,]),'exp':([55,116,117,121,142,143,150,156,187,206,208,209,210,211,212,266,283,313,],[77,77,77,77,77,77,77,77,77,77,77,243,244,245,246,77,77,77,]),'term':([55,116,117,121,142,143,150,156,187,206,208,209,210,211,212,213,214,266,283,313,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,247,248,78,78,78,]),'factor':([55,116,117,121,142,143,150,156,187,206,208,209,210,211,212,213,214,215,216,266,283,313,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,249,250,79,79,79,]),'function_call':([55,59,90,116,117,121,139,142,143,150,156,187,188,206,208,209,210,211,212,213,214,215,216,217,266,283,287,311,313,316,340,344,],[80,96,96,80,80,80,96,80,80,80,80,80,96,80,80,80,80,80,80,80,80,80,80,96,80,80,96,96,80,96,96,96,]),'variable':([55,59,90,116,117,121,139,142,143,149,150,156,187,188,206,208,209,210,211,212,213,214,215,216,217,227,266,283,287,311,313,316,340,344,],[85,97,97,85,85,85,97,85,85,190,85,85,85,97,85,85,85,85,85,85,85,85,85,85,97,262,85,85,97,97,85,97,97,97,]),'statement_loop':([59,188,217,287,311,316,340,344,],[89,224,252,309,320,324,343,252,]),'statement':([59,90,139,188,217,287,311,316,340,344,],[90,139,139,90,90,90,90,90,90,90,]),'assignment':([59,90,139,188,217,287,311,316,340,344,],[91,91,91,91,91,91,91,91,91,91,]),'conditional':([59,90,139,188,217,287,311,316,340,344,],[92,92,92,92,92,92,92,92,92,92,]),'cycle':([59,90,139,188,217,287,311,316,340,344,],[93,93,93,93,93,93,93,93,93,93,]),'read':([59,90,139,188,217,287,311,316,340,344,],[94,94,94,94,94,94,94,94,94,94,]),'write':([59,90,139,188,217,287,311,316,340,344,],[95,95,95,95,95,95,95,95,95,95,]),'class_body4':([64,106,],[107,153,]),'function_call1':([70,],[112,]),'variable1':([70,191,],[113,113,]),'np_add_open_parenthesis':([71,],[117,]),'hyper_exp_loop1':([75,161,],[120,205,]),'np_hyper_exp':([76,241,242,],[123,272,273,]),'np_super_exp':([77,243,244,245,246,],[125,274,275,276,277,]),'np_exp':([78,247,248,],[127,278,279,]),'np_term':([79,249,250,],[129,280,281,]),'return_arg':([86,270,339,],[131,296,342,]),'parameter1':([87,88,254,255,],[134,137,285,286,]),'statement_loop1':([90,139,],[140,183,]),'np_while_1':([100,],[145,]),'np_do_while_1':([101,],[147,]),'constructor':([105,],[151,]),'hyper_exp1':([123,272,273,],[162,297,298,]),'super_exp1':([125,274,275,276,277,],[166,299,300,301,302,]),'exp1':([127,278,279,],[172,303,304,]),'term1':([129,280,281,],[176,305,306,]),'variable_loop':([149,],[189,]),'write_hyper_exp_loop':([150,],[192,]),'class_declaration2':([151,195,],[194,234,]),'class_function':([151,195,],[195,195,]),'function_call2':([156,],[200,]),'np_add_operator':([163,164,167,168,169,170,173,174,177,178,],[206,208,209,210,211,212,213,214,215,216,]),'variable_loop1':([190,262,],[226,292,]),'np_add_write_quad':([193,293,],[232,314,]),'np_remove_open_parenthesis':([204,],[239,]),'function_statement_loop':([217,344,],[251,346,]),'np_if_1':([221,],[256,]),'write_hyper_exp_loop1':([232,314,],[265,322,]),'function_return':([251,346,],[282,348,]),'np_while_2':([259,],[289,]),'cycle1':([288,289,],[310,312,]),'conditional1':([319,],[325,]),'np_if_2':([319,345,],[327,347,]),'np_if_3':([326,],[333,]),'np_while_3':([329,],[335,]),'np_do_while_2':([330,],[337,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM np_start_func_dir ID SEMICOLON declaration_loop main_function','program',6,'p_program','pecan_parser.py',34),
  ('main_function -> MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY variable_declaration_loop statement_loop CLOSE_KEY','main_function',7,'p_main_function','pecan_parser.py',43),
  ('np_start_func_dir -> epsilon','np_start_func_dir',1,'p_np_start_func_dir','pecan_parser.py',51),
  ('declaration_loop -> declaration declaration_loop','declaration_loop',2,'p_declaration_loop','pecan_parser.py',59),
  ('declaration_loop -> epsilon','declaration_loop',1,'p_declaration_loop','pecan_parser.py',60),
  ('statement_loop -> statement statement_loop1','statement_loop',2,'p_statement_loop','pecan_parser.py',71),
  ('statement_loop1 -> statement statement_loop1','statement_loop1',2,'p_statement_loop1','pecan_parser.py',78),
  ('statement_loop1 -> epsilon','statement_loop1',1,'p_statement_loop1','pecan_parser.py',79),
  ('declaration -> class_declaration','declaration',1,'p_declaration','pecan_parser.py',89),
  ('declaration -> variable_declaration','declaration',1,'p_declaration','pecan_parser.py',90),
  ('declaration -> function_declaration','declaration',1,'p_declaration','pecan_parser.py',91),
  ('variable -> ID variable1','variable',2,'p_variable','pecan_parser.py',99),
  ('variable1 -> OPEN_BRACKET hyper_exp CLOSE_BRACKET','variable1',3,'p_variable1','pecan_parser.py',106),
  ('variable1 -> DOT ID','variable1',2,'p_variable1','pecan_parser.py',107),
  ('variable1 -> epsilon','variable1',1,'p_variable1','pecan_parser.py',108),
  ('class_declaration -> CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2','class_declaration',9,'p_class_declaration','pecan_parser.py',116),
  ('class_declaration1 -> IS ID','class_declaration1',2,'p_class_declaration1','pecan_parser.py',123),
  ('class_declaration1 -> epsilon','class_declaration1',1,'p_class_declaration1','pecan_parser.py',124),
  ('class_declaration2 -> class_function class_declaration2','class_declaration2',2,'p_class_declaration2','pecan_parser.py',131),
  ('class_declaration2 -> epsilon','class_declaration2',1,'p_class_declaration2','pecan_parser.py',132),
  ('class_body -> class_body1 class_body3','class_body',2,'p_class_body','pecan_parser.py',139),
  ('class_body1 -> variable_declaration class_body2','class_body1',2,'p_class_body1','pecan_parser.py',146),
  ('class_body2 -> variable_declaration class_body2','class_body2',2,'p_class_body2','pecan_parser.py',153),
  ('class_body2 -> epsilon','class_body2',1,'p_class_body2','pecan_parser.py',154),
  ('class_body3 -> class_function_declaration class_body4','class_body3',2,'p_class_body3','pecan_parser.py',161),
  ('class_body4 -> class_function_declaration class_body4','class_body4',2,'p_class_body4','pecan_parser.py',168),
  ('class_body4 -> epsilon','class_body4',1,'p_class_body4','pecan_parser.py',169),
  ('constructor -> CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY','constructor',8,'p_constructor','pecan_parser.py',177),
  ('variable_declaration_loop -> variable_declaration variable_declaration_loop','variable_declaration_loop',2,'p_variable_declaration_loop','pecan_parser.py',184),
  ('variable_declaration_loop -> epsilon','variable_declaration_loop',1,'p_variable_declaration_loop','pecan_parser.py',185),
  ('variable_declaration -> VAR data_type ID SEMICOLON','variable_declaration',4,'p_variable_declaration','pecan_parser.py',195),
  ('variable_declaration -> GROUP ID ASSIGN data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON','variable_declaration',8,'p_variable_declaration','pecan_parser.py',196),
  ('variable_declaration -> OBJ ID ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON','variable_declaration',8,'p_variable_declaration','pecan_parser.py',197),
  ('atomic_var_type -> VAR','atomic_var_type',1,'p_atomic_var_type','pecan_parser.py',211),
  ('atomic_var_type -> GROUP','atomic_var_type',1,'p_atomic_var_type','pecan_parser.py',212),
  ('variable_declaration1 -> hyper_exp_loop','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',219),
  ('variable_declaration1 -> epsilon','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',220),
  ('statement -> assignment','statement',1,'p_statement','pecan_parser.py',226),
  ('statement -> conditional','statement',1,'p_statement','pecan_parser.py',227),
  ('statement -> cycle','statement',1,'p_statement','pecan_parser.py',228),
  ('statement -> read','statement',1,'p_statement','pecan_parser.py',229),
  ('statement -> write','statement',1,'p_statement','pecan_parser.py',230),
  ('statement -> function_call','statement',1,'p_statement','pecan_parser.py',231),
  ('assignment -> variable ASSIGN hyper_exp SEMICOLON','assignment',4,'p_assignment','pecan_parser.py',239),
  ('np_add_operator -> epsilon','np_add_operator',1,'p_np_add_operator','pecan_parser.py',252),
  ('hyper_exp -> super_exp np_hyper_exp hyper_exp1','hyper_exp',3,'p_hyper_exp','pecan_parser.py',259),
  ('hyper_exp1 -> AND np_add_operator super_exp np_hyper_exp hyper_exp1','hyper_exp1',5,'p_hyper_exp1','pecan_parser.py',266),
  ('hyper_exp1 -> OR np_add_operator super_exp np_hyper_exp hyper_exp1','hyper_exp1',5,'p_hyper_exp1','pecan_parser.py',267),
  ('hyper_exp1 -> epsilon','hyper_exp1',1,'p_hyper_exp1','pecan_parser.py',268),
  ('np_hyper_exp -> epsilon','np_hyper_exp',1,'p_np_hyper_exp','pecan_parser.py',275),
  ('super_exp -> exp np_super_exp super_exp1','super_exp',3,'p_super_exp','pecan_parser.py',282),
  ('super_exp1 -> GREATER_THAN np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',289),
  ('super_exp1 -> LESS_THAN np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',290),
  ('super_exp1 -> EQUAL_TO np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',291),
  ('super_exp1 -> NOT_EQUAL_TO np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',292),
  ('super_exp1 -> epsilon','super_exp1',1,'p_super_exp1','pecan_parser.py',293),
  ('np_super_exp -> epsilon','np_super_exp',1,'p_np_super_exp','pecan_parser.py',300),
  ('exp -> term np_exp exp1','exp',3,'p_exp','pecan_parser.py',307),
  ('exp1 -> PLUS np_add_operator term np_exp exp1','exp1',5,'p_exp1','pecan_parser.py',314),
  ('exp1 -> MINUS np_add_operator term np_exp exp1','exp1',5,'p_exp1','pecan_parser.py',315),
  ('exp1 -> epsilon','exp1',1,'p_exp1','pecan_parser.py',316),
  ('np_exp -> epsilon','np_exp',1,'p_np_exp','pecan_parser.py',323),
  ('term -> factor np_term term1','term',3,'p_term','pecan_parser.py',330),
  ('term1 -> MULTIPLICATION np_add_operator factor np_term term1','term1',5,'p_term1','pecan_parser.py',337),
  ('term1 -> DIVISION np_add_operator factor np_term term1','term1',5,'p_term1','pecan_parser.py',338),
  ('term1 -> epsilon','term1',1,'p_term1','pecan_parser.py',339),
  ('np_term -> epsilon','np_term',1,'p_np_term','pecan_parser.py',346),
  ('factor -> function_call','factor',1,'p_factor','pecan_parser.py',367),
  ('factor -> FLOAT_VALUE','factor',1,'p_factor','pecan_parser.py',368),
  ('factor -> INT_VALUE','factor',1,'p_factor','pecan_parser.py',369),
  ('factor -> BOOL_VALUE','factor',1,'p_factor','pecan_parser.py',370),
  ('factor -> STRING_VALUE','factor',1,'p_factor','pecan_parser.py',371),
  ('factor -> variable','factor',1,'p_factor','pecan_parser.py',372),
  ('factor -> OPEN_PARENTHESIS np_add_open_parenthesis hyper_exp CLOSE_PARENTHESIS np_remove_open_parenthesis','factor',5,'p_factor','pecan_parser.py',373),
  ('np_add_open_parenthesis -> epsilon','np_add_open_parenthesis',1,'p_np_add_open_parenthesis','pecan_parser.py',382),
  ('np_remove_open_parenthesis -> epsilon','np_remove_open_parenthesis',1,'p_np_remove_open_parenthesis','pecan_parser.py',389),
  ('data_type -> INT','data_type',1,'p_data_type','pecan_parser.py',396),
  ('data_type -> FLOAT','data_type',1,'p_data_type','pecan_parser.py',397),
  ('data_type -> STRING','data_type',1,'p_data_type','pecan_parser.py',398),
  ('data_type -> BOOL','data_type',1,'p_data_type','pecan_parser.py',399),
  ('class_function_declaration -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON','class_function_declaration',8,'p_class_function_declaration','pecan_parser.py',406),
  ('return_arg -> data_type','return_arg',1,'p_return_arg','pecan_parser.py',413),
  ('return_arg -> VOID','return_arg',1,'p_return_arg','pecan_parser.py',414),
  ('parameter -> atomic_var_type data_type ID parameter1','parameter',4,'p_parameter','pecan_parser.py',421),
  ('parameter -> OBJ ID ID parameter1','parameter',4,'p_parameter','pecan_parser.py',422),
  ('parameter -> epsilon','parameter',1,'p_parameter','pecan_parser.py',423),
  ('parameter1 -> COMMA atomic_var_type data_type ID parameter1','parameter1',5,'p_parameter1','pecan_parser.py',433),
  ('parameter1 -> COMMA OBJ ID ID parameter1','parameter1',5,'p_parameter1','pecan_parser.py',434),
  ('parameter1 -> epsilon','parameter1',1,'p_parameter1','pecan_parser.py',435),
  ('conditional -> IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_if_1 OPEN_KEY statement_loop CLOSE_KEY conditional1','conditional',9,'p_conditional','pecan_parser.py',445),
  ('conditional1 -> ELSE np_if_3 OPEN_KEY statement_loop CLOSE_KEY np_if_2','conditional1',6,'p_conditional1','pecan_parser.py',452),
  ('conditional1 -> np_if_2','conditional1',1,'p_conditional1','pecan_parser.py',453),
  ('np_if_1 -> epsilon','np_if_1',1,'p_np_if_1','pecan_parser.py',460),
  ('np_if_2 -> epsilon','np_if_2',1,'p_np_if_2','pecan_parser.py',472),
  ('np_if_3 -> epsilon','np_if_3',1,'p_np_if_3','pecan_parser.py',480),
  ('cycle -> FOR OPEN_PARENTHESIS ID IN ID CLOSE_PARENTHESIS cycle1','cycle',7,'p_cycle','pecan_parser.py',490),
  ('cycle -> WHILE np_while_1 OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_while_2 cycle1','cycle',7,'p_cycle','pecan_parser.py',491),
  ('cycle -> DO np_do_while_1 OPEN_KEY statement_loop CLOSE_KEY WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_do_while_2 SEMICOLON','cycle',11,'p_cycle','pecan_parser.py',492),
  ('cycle1 -> OPEN_KEY statement_loop CLOSE_KEY np_while_3','cycle1',4,'p_cycle1','pecan_parser.py',499),
  ('np_while_1 -> epsilon','np_while_1',1,'p_np_while_1','pecan_parser.py',507),
  ('np_while_2 -> epsilon','np_while_2',1,'p_np_while_2','pecan_parser.py',514),
  ('np_while_3 -> epsilon','np_while_3',1,'p_np_while_3','pecan_parser.py',526),
  ('np_do_while_1 -> epsilon','np_do_while_1',1,'p_np_do_while_1','pecan_parser.py',536),
  ('np_do_while_2 -> epsilon','np_do_while_2',1,'p_np_do_while_2','pecan_parser.py',543),
  ('read -> READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON','read',5,'p_read','pecan_parser.py',555),
  ('variable_loop -> variable variable_loop1','variable_loop',2,'p_variable_loop','pecan_parser.py',563),
  ('variable_loop1 -> COMMA variable variable_loop1','variable_loop1',3,'p_variable_loop1','pecan_parser.py',570),
  ('variable_loop1 -> epsilon','variable_loop1',1,'p_variable_loop1','pecan_parser.py',571),
  ('write -> WRITE OPEN_PARENTHESIS write_hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON','write',5,'p_write','pecan_parser.py',581),
  ('write_hyper_exp_loop -> hyper_exp np_add_write_quad write_hyper_exp_loop1','write_hyper_exp_loop',3,'p_write_hyper_exp_loop','pecan_parser.py',588),
  ('write_hyper_exp_loop1 -> COMMA hyper_exp np_add_write_quad write_hyper_exp_loop1','write_hyper_exp_loop1',4,'p_write_hyper_exp_loop1','pecan_parser.py',595),
  ('write_hyper_exp_loop1 -> epsilon','write_hyper_exp_loop1',1,'p_write_hyper_exp_loop1','pecan_parser.py',596),
  ('np_add_write_quad -> epsilon','np_add_write_quad',1,'p_np_add_write_quad','pecan_parser.py',604),
  ('hyper_exp_loop -> hyper_exp hyper_exp_loop1','hyper_exp_loop',2,'p_hyper_exp_loop','pecan_parser.py',612),
  ('hyper_exp_loop1 -> COMMA hyper_exp hyper_exp_loop1','hyper_exp_loop1',3,'p_hyper_exp_loop1','pecan_parser.py',619),
  ('hyper_exp_loop1 -> epsilon','hyper_exp_loop1',1,'p_hyper_exp_loop1','pecan_parser.py',620),
  ('function_call -> ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON','function_call',6,'p_function_call','pecan_parser.py',628),
  ('function_call1 -> DOT ID','function_call1',2,'p_function_call1','pecan_parser.py',635),
  ('function_call1 -> epsilon','function_call1',1,'p_function_call1','pecan_parser.py',636),
  ('function_call2 -> hyper_exp_loop','function_call2',1,'p_function_call2','pecan_parser.py',643),
  ('function_call2 -> epsilon','function_call2',1,'p_function_call2','pecan_parser.py',644),
  ('class_function -> AT_CLASS ID FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY','class_function',13,'p_class_function','pecan_parser.py',651),
  ('function_declaration -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY variable_declaration_loop function_statement_loop function_return CLOSE_KEY','function_declaration',12,'p_function_declaration','pecan_parser.py',659),
  ('function_return -> RETURN hyper_exp SEMICOLON','function_return',3,'p_function_return','pecan_parser.py',667),
  ('function_return -> epsilon','function_return',1,'p_function_return','pecan_parser.py',668),
  ('function_statement_loop -> statement_loop','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',675),
  ('function_statement_loop -> epsilon','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',676),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','pecan_parser.py',682),
]
