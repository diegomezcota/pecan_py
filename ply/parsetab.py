
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN AT_CLASS BOOL BOOL_VALUE CLASS CLOSE_BRACKET CLOSE_KEY CLOSE_PARENTHESIS COMMA CONSTRUCTOR DIVISION DOT ELSE EQUAL_TO FLOAT FLOAT_VALUE FOR FUNCTION GREATER_THAN GROUP ID IF IN INT INT_VALUE IS LESS_THAN MAIN MINUS MULTIPLICATION NOT_EQUAL_TO OBJ OPEN_BRACKET OPEN_KEY OPEN_PARENTHESIS OR PLUS PROGRAM READ RETURN RETURNS SEMICOLON STRING STRING_VALUE VAR VOID WHILE WRITE\n    program : PROGRAM np_start_func_dir ID SEMICOLON declaration_loop main_function\n    \n    main_function : MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY\n    \n    np_start_func_dir : epsilon\n    \n    declaration_loop : declaration declaration_loop\n                     | epsilon\n    \n    statement_loop  : statement statement_loop1\n    \n    statement_loop1 : statement statement_loop1\n                    | epsilon\n    \n    declaration : class_declaration\n                | variable_declaration\n                | function_declaration\n    \n    variable    : ID variable1\n    \n    variable1   : OPEN_BRACKET hyper_exp CLOSE_BRACKET\n                | DOT ID\n                | epsilon\n\n    \n    class_declaration   : CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2\n    \n    class_declaration1  : IS ID\n                        | epsilon\n    \n    class_declaration2  : class_function class_declaration2\n                        | epsilon\n    \n    class_body  : class_body1 class_body3\n    \n    class_body1 : variable_declaration class_body2\n    \n    class_body2 : variable_declaration class_body2\n                | epsilon\n    \n    class_body3 : class_function_declaration class_body4\n    \n    class_body4 : class_function_declaration class_body4\n                | epsilon\n\n    \n    constructor : CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY\n    \n    variable_declaration    : VAR data_type ID SEMICOLON\n                            | GROUP ID ASSIGN data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON\n                            | OBJ ID ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON\n\n    \n    variable_declaration1   : hyper_exp_loop\n                            | epsilon\n    \n    statement   : assignment\n                | conditional\n                | cycle\n                | read\n                | write\n                | function_call\n                | variable_declaration\n    \n    assignment  : variable ASSIGN hyper_exp SEMICOLON\n    \n    hyper_exp   : super_exp hyper_exp1\n    \n    hyper_exp1  : AND super_exp\n                | OR super_exp\n                | epsilon\n    \n    super_exp   : exp super_exp1\n    \n    super_exp1  : GREATER_THAN exp\n                | LESS_THAN exp\n                | EQUAL_TO exp\n                | NOT_EQUAL_TO exp\n                | epsilon\n    \n    exp : term exp1\n    \n    exp1    : PLUS term exp1\n            | MINUS term exp1\n            | epsilon\n    \n    term    : factor term1\n    \n    term1   : MULTIPLICATION factor term1\n            | DIVISION factor term1\n            | epsilon\n    \n    factor  : function_call\n            | FLOAT_VALUE\n            | INT_VALUE\n            | BOOL_VALUE\n            | STRING_VALUE\n            | variable\n            | OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS\n    \n    data_type   : INT\n                | FLOAT\n                | STRING\n                | BOOL\n    \n    class_function_declaration : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON\n    \n    return_arg  : data_type\n                | VOID\n    \n    parameter   : data_type ID parameter1\n                | epsilon\n    \n    parameter1  : COMMA data_type ID parameter1\n                | epsilon\n    \n    conditional : IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY conditional1\n    \n    conditional1    : ELSE OPEN_KEY statement_loop CLOSE_KEY\n                    | epsilon\n    \n    cycle   : FOR OPEN_PARENTHESIS ID IN ID CLOSE_PARENTHESIS cycle1\n            | WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS cycle1\n    \n    cycle1  : OPEN_KEY statement_loop CLOSE_KEY\n    \n    read    : READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    variable_loop   : variable variable_loop1\n    \n    variable_loop1  : COMMA variable variable_loop1\n                    | epsilon\n    \n    write   : WRITE OPEN_PARENTHESIS hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    hyper_exp_loop  : hyper_exp hyper_exp_loop1\n    \n    hyper_exp_loop1 : COMMA hyper_exp hyper_exp_loop1\n                    | epsilon\n\n    \n    function_call   : ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON\n    \n    function_call1  : DOT ID\n                    | epsilon\n    \n    function_call2  : hyper_exp_loop\n                    | epsilon\n    \n    class_function  : AT_CLASS ID FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY\n\n    \n    function_declaration    : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY\n    \n    function_return : RETURN hyper_exp SEMICOLON\n                    | epsilon\n    \n    function_statement_loop  : statement_loop\n                    | epsilon\n    epsilon :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,98,],[0,-1,-2,]),'ID':([2,3,4,13,15,16,17,22,23,24,25,26,32,36,41,45,47,52,56,57,58,59,60,61,62,63,74,79,99,102,103,104,107,109,110,111,112,123,126,127,130,131,132,133,136,137,140,141,146,151,160,163,165,177,179,181,189,191,197,209,212,213,214,217,223,227,230,235,236,237,242,244,246,248,254,257,],[-103,5,-3,21,27,28,29,34,-67,-68,-69,-70,40,43,-29,54,67,67,67,-34,-35,-36,-37,-38,-39,-40,117,67,67,67,67,150,152,67,67,157,67,67,67,67,67,67,67,67,67,67,67,67,178,67,198,-30,-31,67,-41,210,157,216,219,67,-82,67,-84,-88,67,-92,238,-103,-81,-83,-78,-80,67,67,-79,67,]),'SEMICOLON':([5,23,24,25,26,34,67,71,84,85,86,87,88,89,90,91,92,93,106,108,119,121,125,128,129,134,135,138,139,142,144,145,148,152,164,167,168,169,170,171,172,173,174,175,176,185,187,193,201,202,203,204,211,227,234,240,],[6,-67,-68,-69,-70,41,-103,113,-103,-103,-103,-103,-60,-61,-62,-63,-64,-65,-12,-15,163,165,-42,-45,-46,-51,-52,-55,-56,-59,-72,-73,179,-14,-66,-43,-44,-47,-48,-49,-50,-103,-103,-103,-103,-13,214,217,-53,-54,-57,-58,227,-92,241,247,]),'MAIN':([6,7,8,9,10,11,12,20,41,159,163,165,194,195,196,218,233,253,260,],[-103,19,-103,-5,-9,-10,-11,-4,-29,-103,-30,-31,-16,-103,-20,-19,-98,-28,-97,]),'CLASS':([6,8,10,11,12,41,159,163,165,194,195,196,218,233,253,260,],[13,13,-9,-10,-11,-29,-103,-30,-31,-16,-103,-20,-19,-98,-28,-97,]),'VAR':([6,8,10,11,12,39,41,47,50,56,57,58,59,60,61,62,63,75,99,159,163,165,177,179,194,195,196,209,212,213,214,217,218,227,233,235,236,237,242,244,246,248,253,254,257,260,],[14,14,-9,-10,-11,14,-29,14,14,14,-34,-35,-36,-37,-38,-39,-40,14,14,-103,-30,-31,14,-41,-16,-103,-20,14,-82,14,-84,-88,-19,-92,-98,-103,-81,-83,-78,-80,14,14,-28,-79,14,-97,]),'GROUP':([6,8,10,11,12,39,41,47,50,56,57,58,59,60,61,62,63,75,99,159,163,165,177,179,194,195,196,209,212,213,214,217,218,227,233,235,236,237,242,244,246,248,253,254,257,260,],[15,15,-9,-10,-11,15,-29,15,15,15,-34,-35,-36,-37,-38,-39,-40,15,15,-103,-30,-31,15,-41,-16,-103,-20,15,-82,15,-84,-88,-19,-92,-98,-103,-81,-83,-78,-80,15,15,-28,-79,15,-97,]),'OBJ':([6,8,10,11,12,39,41,47,50,56,57,58,59,60,61,62,63,75,99,159,163,165,177,179,194,195,196,209,212,213,214,217,218,227,233,235,236,237,242,244,246,248,253,254,257,260,],[16,16,-9,-10,-11,16,-29,16,16,16,-34,-35,-36,-37,-38,-39,-40,16,16,-103,-30,-31,16,-41,-16,-103,-20,16,-82,16,-84,-88,-19,-92,-98,-103,-81,-83,-78,-80,16,16,-28,-79,16,-97,]),'FUNCTION':([6,8,10,11,12,41,49,50,73,75,76,77,114,118,159,163,165,194,195,196,218,219,233,247,253,260,],[17,17,-9,-10,-11,-29,74,-103,74,-103,-22,-24,74,-23,-103,-30,-31,-16,-103,-20,-19,230,-98,-71,-28,-97,]),'INT':([14,35,37,94,96,162,220,232,245,255,],[23,23,23,23,23,23,23,23,23,23,]),'FLOAT':([14,35,37,94,96,162,220,232,245,255,],[24,24,24,24,24,24,24,24,24,24,]),'STRING':([14,35,37,94,96,162,220,232,245,255,],[25,25,25,25,25,25,25,25,25,25,]),'BOOL':([14,35,37,94,96,162,220,232,245,255,],[26,26,26,26,26,26,26,26,26,26,]),'OPEN_PARENTHESIS':([19,29,43,52,65,66,67,68,69,70,79,102,103,105,108,109,110,112,117,123,126,127,130,131,132,133,136,137,140,141,151,152,198,223,238,],[30,37,52,79,103,104,-103,110,111,112,79,79,79,151,-94,79,79,79,162,79,79,79,79,79,79,79,79,79,79,79,79,-93,220,79,245,]),'IS':([21,],[32,]),'OPEN_KEY':([21,23,24,25,26,31,33,38,40,143,144,145,180,186,226,239,243,256,],[-103,-67,-68,-69,-70,39,-18,47,-17,177,-72,-73,209,213,213,246,248,257,]),'OPEN_BRACKET':([23,24,25,26,42,67,157,],[-67,-68,-69,-70,51,109,109,]),'ASSIGN':([27,28,64,67,106,108,152,185,],[35,36,102,-103,-12,-15,-14,-13,]),'CLOSE_PARENTHESIS':([30,37,44,46,52,54,67,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,106,108,120,122,124,125,128,129,134,135,138,139,142,149,151,152,154,155,156,157,158,162,164,166,167,168,169,170,171,172,173,174,175,176,178,182,183,184,185,188,190,192,199,200,201,202,203,204,208,210,215,216,220,227,229,231,245,249,],[38,-103,53,-75,-103,-103,-103,121,-32,-33,-103,-103,-103,-103,-103,-60,-61,-62,-63,-64,-65,-74,-77,-12,-15,164,-89,-91,-42,-45,-46,-51,-52,-55,-56,-59,180,-103,-14,186,187,-103,-103,193,-103,-66,-103,-43,-44,-47,-48,-49,-50,-103,-103,-103,-103,-103,211,-95,-96,-13,-85,-87,-15,221,-90,-53,-54,-57,-58,-76,226,-103,-14,-103,-92,-86,239,-103,252,]),'IF':([41,47,56,57,58,59,60,61,62,63,99,163,165,177,179,209,212,213,214,217,227,235,236,237,242,244,246,248,254,257,],[-29,65,65,-34,-35,-36,-37,-38,-39,-40,65,-30,-31,65,-41,65,-82,65,-84,-88,-92,-103,-81,-83,-78,-80,65,65,-79,65,]),'FOR':([41,47,56,57,58,59,60,61,62,63,99,163,165,177,179,209,212,213,214,217,227,235,236,237,242,244,246,248,254,257,],[-29,66,66,-34,-35,-36,-37,-38,-39,-40,66,-30,-31,66,-41,66,-82,66,-84,-88,-92,-103,-81,-83,-78,-80,66,66,-79,66,]),'WHILE':([41,47,56,57,58,59,60,61,62,63,99,163,165,177,179,209,212,213,214,217,227,235,236,237,242,244,246,248,254,257,],[-29,68,68,-34,-35,-36,-37,-38,-39,-40,68,-30,-31,68,-41,68,-82,68,-84,-88,-92,-103,-81,-83,-78,-80,68,68,-79,68,]),'READ':([41,47,56,57,58,59,60,61,62,63,99,163,165,177,179,209,212,213,214,217,227,235,236,237,242,244,246,248,254,257,],[-29,69,69,-34,-35,-36,-37,-38,-39,-40,69,-30,-31,69,-41,69,-82,69,-84,-88,-92,-103,-81,-83,-78,-80,69,69,-79,69,]),'WRITE':([41,47,56,57,58,59,60,61,62,63,99,163,165,177,179,209,212,213,214,217,227,235,236,237,242,244,246,248,254,257,],[-29,70,70,-34,-35,-36,-37,-38,-39,-40,70,-30,-31,70,-41,70,-82,70,-84,-88,-92,-103,-81,-83,-78,-80,70,70,-79,70,]),'CLOSE_KEY':([41,48,55,56,57,58,59,60,61,62,63,72,73,99,100,101,114,115,116,147,161,163,165,177,179,205,206,207,212,214,217,222,224,225,227,228,235,236,237,241,242,244,247,250,251,254,257,258,259,],[-29,71,98,-103,-34,-35,-36,-37,-38,-39,-40,-21,-103,-103,-6,-8,-103,-25,-27,-7,-26,-30,-31,-103,-41,-103,-101,-102,-82,-84,-88,233,-100,235,-92,237,-103,-81,-83,-99,-78,-80,-71,253,254,-79,-103,-103,260,]),'RETURN':([41,56,57,58,59,60,61,62,63,99,100,101,147,163,165,177,179,205,206,207,212,214,217,227,235,236,237,242,244,254,257,258,],[-29,-103,-34,-35,-36,-37,-38,-39,-40,-103,-6,-8,-7,-30,-31,-103,-41,223,-101,-102,-82,-84,-88,-92,-103,-81,-83,-78,-80,-79,-103,223,]),'INT_VALUE':([51,52,79,102,103,109,110,112,123,126,127,130,131,132,133,136,137,140,141,151,223,],[78,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'FLOAT_VALUE':([52,79,102,103,109,110,112,123,126,127,130,131,132,133,136,137,140,141,151,223,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'BOOL_VALUE':([52,79,102,103,109,110,112,123,126,127,130,131,132,133,136,137,140,141,151,223,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'STRING_VALUE':([52,79,102,103,109,110,112,123,126,127,130,131,132,133,136,137,140,141,151,223,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'RETURNS':([53,221,252,],[94,232,255,]),'COMMA':([54,67,83,84,85,86,87,88,89,90,91,92,93,106,108,125,128,129,134,135,138,139,142,152,156,157,164,166,167,168,169,170,171,172,173,174,175,176,178,185,192,201,202,203,204,215,216,227,],[96,-103,123,-103,-103,-103,-103,-60,-61,-62,-63,-64,-65,-12,-15,-42,-45,-46,-51,-52,-55,-56,-59,-14,189,-103,-66,123,-43,-44,-47,-48,-49,-50,-103,-103,-103,-103,96,-13,-15,-53,-54,-57,-58,189,-14,-92,]),'DOT':([67,157,],[107,191,]),'MULTIPLICATION':([67,87,88,89,90,91,92,93,106,108,152,164,175,176,185,227,],[-103,140,-60,-61,-62,-63,-64,-65,-12,-15,-14,-66,140,140,-13,-92,]),'DIVISION':([67,87,88,89,90,91,92,93,106,108,152,164,175,176,185,227,],[-103,141,-60,-61,-62,-63,-64,-65,-12,-15,-14,-66,141,141,-13,-92,]),'PLUS':([67,86,87,88,89,90,91,92,93,106,108,139,142,152,164,173,174,175,176,185,203,204,227,],[-103,136,-103,-60,-61,-62,-63,-64,-65,-12,-15,-56,-59,-14,-66,136,136,-103,-103,-13,-57,-58,-92,]),'MINUS':([67,86,87,88,89,90,91,92,93,106,108,139,142,152,164,173,174,175,176,185,203,204,227,],[-103,137,-103,-60,-61,-62,-63,-64,-65,-12,-15,-56,-59,-14,-66,137,137,-103,-103,-13,-57,-58,-92,]),'GREATER_THAN':([67,85,86,87,88,89,90,91,92,93,106,108,135,138,139,142,152,164,173,174,175,176,185,201,202,203,204,227,],[-103,130,-103,-103,-60,-61,-62,-63,-64,-65,-12,-15,-52,-55,-56,-59,-14,-66,-103,-103,-103,-103,-13,-53,-54,-57,-58,-92,]),'LESS_THAN':([67,85,86,87,88,89,90,91,92,93,106,108,135,138,139,142,152,164,173,174,175,176,185,201,202,203,204,227,],[-103,131,-103,-103,-60,-61,-62,-63,-64,-65,-12,-15,-52,-55,-56,-59,-14,-66,-103,-103,-103,-103,-13,-53,-54,-57,-58,-92,]),'EQUAL_TO':([67,85,86,87,88,89,90,91,92,93,106,108,135,138,139,142,152,164,173,174,175,176,185,201,202,203,204,227,],[-103,132,-103,-103,-60,-61,-62,-63,-64,-65,-12,-15,-52,-55,-56,-59,-14,-66,-103,-103,-103,-103,-13,-53,-54,-57,-58,-92,]),'NOT_EQUAL_TO':([67,85,86,87,88,89,90,91,92,93,106,108,135,138,139,142,152,164,173,174,175,176,185,201,202,203,204,227,],[-103,133,-103,-103,-60,-61,-62,-63,-64,-65,-12,-15,-52,-55,-56,-59,-14,-66,-103,-103,-103,-103,-13,-53,-54,-57,-58,-92,]),'AND':([67,84,85,86,87,88,89,90,91,92,93,106,108,129,134,135,138,139,142,152,164,169,170,171,172,173,174,175,176,185,201,202,203,204,227,],[-103,126,-103,-103,-103,-60,-61,-62,-63,-64,-65,-12,-15,-46,-51,-52,-55,-56,-59,-14,-66,-47,-48,-49,-50,-103,-103,-103,-103,-13,-53,-54,-57,-58,-92,]),'OR':([67,84,85,86,87,88,89,90,91,92,93,106,108,129,134,135,138,139,142,152,164,169,170,171,172,173,174,175,176,185,201,202,203,204,227,],[-103,127,-103,-103,-103,-60,-61,-62,-63,-64,-65,-12,-15,-46,-51,-52,-55,-56,-59,-14,-66,-47,-48,-49,-50,-103,-103,-103,-103,-13,-53,-54,-57,-58,-92,]),'CLOSE_BRACKET':([67,78,84,85,86,87,88,89,90,91,92,93,106,108,125,128,129,134,135,138,139,142,152,153,164,167,168,169,170,171,172,173,174,175,176,185,201,202,203,204,227,],[-103,119,-103,-103,-103,-103,-60,-61,-62,-63,-64,-65,-12,-15,-42,-45,-46,-51,-52,-55,-56,-59,-14,185,-66,-43,-44,-47,-48,-49,-50,-103,-103,-103,-103,-13,-53,-54,-57,-58,-92,]),'VOID':([94,232,255,],[145,145,145,]),'CONSTRUCTOR':([113,],[160,]),'IN':([150,],[181,]),'AT_CLASS':([159,195,253,260,],[197,197,-28,-97,]),'ELSE':([235,],[243,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'np_start_func_dir':([2,],[3,]),'epsilon':([2,6,8,21,37,50,52,54,56,67,73,75,83,84,85,86,87,99,114,151,156,157,159,162,166,173,174,175,176,177,178,195,205,215,220,235,245,257,258,],[4,9,9,33,46,77,82,97,101,108,116,77,124,128,134,138,142,101,116,184,190,192,196,46,124,138,138,142,142,207,97,196,224,190,46,244,46,207,224,]),'declaration_loop':([6,8,],[7,20,]),'declaration':([6,8,],[8,8,]),'class_declaration':([6,8,],[10,10,]),'variable_declaration':([6,8,39,47,50,56,75,99,177,209,213,246,248,257,],[11,11,50,63,75,63,75,63,63,63,63,63,63,63,]),'function_declaration':([6,8,],[12,12,]),'main_function':([7,],[18,]),'data_type':([14,35,37,94,96,162,220,232,245,255,],[22,42,45,144,146,45,45,144,45,144,]),'class_declaration1':([21,],[31,]),'parameter':([37,162,220,245,],[44,199,231,249,]),'class_body':([39,],[48,]),'class_body1':([39,],[49,]),'statement_loop':([47,177,209,213,246,248,257,],[55,206,225,228,250,251,206,]),'statement':([47,56,99,177,209,213,246,248,257,],[56,99,99,56,56,56,56,56,56,]),'assignment':([47,56,99,177,209,213,246,248,257,],[57,57,57,57,57,57,57,57,57,]),'conditional':([47,56,99,177,209,213,246,248,257,],[58,58,58,58,58,58,58,58,58,]),'cycle':([47,56,99,177,209,213,246,248,257,],[59,59,59,59,59,59,59,59,59,]),'read':([47,56,99,177,209,213,246,248,257,],[60,60,60,60,60,60,60,60,60,]),'write':([47,56,99,177,209,213,246,248,257,],[61,61,61,61,61,61,61,61,61,]),'function_call':([47,52,56,79,99,102,103,109,110,112,123,126,127,130,131,132,133,136,137,140,141,151,177,209,213,223,246,248,257,],[62,88,62,88,62,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,62,62,62,88,62,62,62,]),'variable':([47,52,56,79,99,102,103,109,110,111,112,123,126,127,130,131,132,133,136,137,140,141,151,177,189,209,213,223,246,248,257,],[64,93,64,93,64,93,93,93,93,156,93,93,93,93,93,93,93,93,93,93,93,93,93,64,215,64,64,93,64,64,64,]),'class_body3':([49,],[72,]),'class_function_declaration':([49,73,114,],[73,114,114,]),'class_body2':([50,75,],[76,118,]),'variable_declaration1':([52,],[80,]),'hyper_exp_loop':([52,112,151,],[81,158,183,]),'hyper_exp':([52,79,102,103,109,110,112,123,151,223,],[83,120,148,149,153,154,83,166,83,234,]),'super_exp':([52,79,102,103,109,110,112,123,126,127,151,223,],[84,84,84,84,84,84,84,84,167,168,84,84,]),'exp':([52,79,102,103,109,110,112,123,126,127,130,131,132,133,151,223,],[85,85,85,85,85,85,85,85,85,85,169,170,171,172,85,85,]),'term':([52,79,102,103,109,110,112,123,126,127,130,131,132,133,136,137,151,223,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,173,174,86,86,]),'factor':([52,79,102,103,109,110,112,123,126,127,130,131,132,133,136,137,140,141,151,223,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,175,176,87,87,]),'parameter1':([54,178,],[95,208,]),'statement_loop1':([56,99,],[100,147,]),'function_call1':([67,],[105,]),'variable1':([67,157,],[106,106,]),'class_body4':([73,114,],[115,161,]),'hyper_exp_loop1':([83,166,],[122,200,]),'hyper_exp1':([84,],[125,]),'super_exp1':([85,],[129,]),'exp1':([86,173,174,],[135,201,202,]),'term1':([87,175,176,],[139,203,204,]),'return_arg':([94,232,255,],[143,240,256,]),'variable_loop':([111,],[155,]),'constructor':([113,],[159,]),'function_call2':([151,],[182,]),'variable_loop1':([156,215,],[188,229,]),'class_declaration2':([159,195,],[194,218,]),'class_function':([159,195,],[195,195,]),'function_statement_loop':([177,257,],[205,258,]),'cycle1':([186,226,],[212,236,]),'function_return':([205,258,],[222,259,]),'conditional1':([235,],[242,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM np_start_func_dir ID SEMICOLON declaration_loop main_function','program',6,'p_program','pecan_parser.py',24),
  ('main_function -> MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY','main_function',6,'p_main_function','pecan_parser.py',32),
  ('np_start_func_dir -> epsilon','np_start_func_dir',1,'p_np_start_func_dir','pecan_parser.py',39),
  ('declaration_loop -> declaration declaration_loop','declaration_loop',2,'p_declaration_loop','pecan_parser.py',48),
  ('declaration_loop -> epsilon','declaration_loop',1,'p_declaration_loop','pecan_parser.py',49),
  ('statement_loop -> statement statement_loop1','statement_loop',2,'p_statement_loop','pecan_parser.py',62),
  ('statement_loop1 -> statement statement_loop1','statement_loop1',2,'p_statement_loop1','pecan_parser.py',69),
  ('statement_loop1 -> epsilon','statement_loop1',1,'p_statement_loop1','pecan_parser.py',70),
  ('declaration -> class_declaration','declaration',1,'p_declaration','pecan_parser.py',80),
  ('declaration -> variable_declaration','declaration',1,'p_declaration','pecan_parser.py',81),
  ('declaration -> function_declaration','declaration',1,'p_declaration','pecan_parser.py',82),
  ('variable -> ID variable1','variable',2,'p_variable','pecan_parser.py',90),
  ('variable1 -> OPEN_BRACKET hyper_exp CLOSE_BRACKET','variable1',3,'p_variable1','pecan_parser.py',97),
  ('variable1 -> DOT ID','variable1',2,'p_variable1','pecan_parser.py',98),
  ('variable1 -> epsilon','variable1',1,'p_variable1','pecan_parser.py',99),
  ('class_declaration -> CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2','class_declaration',9,'p_class_declaration','pecan_parser.py',107),
  ('class_declaration1 -> IS ID','class_declaration1',2,'p_class_declaration1','pecan_parser.py',114),
  ('class_declaration1 -> epsilon','class_declaration1',1,'p_class_declaration1','pecan_parser.py',115),
  ('class_declaration2 -> class_function class_declaration2','class_declaration2',2,'p_class_declaration2','pecan_parser.py',122),
  ('class_declaration2 -> epsilon','class_declaration2',1,'p_class_declaration2','pecan_parser.py',123),
  ('class_body -> class_body1 class_body3','class_body',2,'p_class_body','pecan_parser.py',130),
  ('class_body1 -> variable_declaration class_body2','class_body1',2,'p_class_body1','pecan_parser.py',137),
  ('class_body2 -> variable_declaration class_body2','class_body2',2,'p_class_body2','pecan_parser.py',144),
  ('class_body2 -> epsilon','class_body2',1,'p_class_body2','pecan_parser.py',145),
  ('class_body3 -> class_function_declaration class_body4','class_body3',2,'p_class_body3','pecan_parser.py',152),
  ('class_body4 -> class_function_declaration class_body4','class_body4',2,'p_class_body4','pecan_parser.py',159),
  ('class_body4 -> epsilon','class_body4',1,'p_class_body4','pecan_parser.py',160),
  ('constructor -> CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY','constructor',8,'p_constructor','pecan_parser.py',168),
  ('variable_declaration -> VAR data_type ID SEMICOLON','variable_declaration',4,'p_variable_declaration','pecan_parser.py',175),
  ('variable_declaration -> GROUP ID ASSIGN data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON','variable_declaration',8,'p_variable_declaration','pecan_parser.py',176),
  ('variable_declaration -> OBJ ID ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON','variable_declaration',8,'p_variable_declaration','pecan_parser.py',177),
  ('variable_declaration1 -> hyper_exp_loop','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',191),
  ('variable_declaration1 -> epsilon','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',192),
  ('statement -> assignment','statement',1,'p_statement','pecan_parser.py',198),
  ('statement -> conditional','statement',1,'p_statement','pecan_parser.py',199),
  ('statement -> cycle','statement',1,'p_statement','pecan_parser.py',200),
  ('statement -> read','statement',1,'p_statement','pecan_parser.py',201),
  ('statement -> write','statement',1,'p_statement','pecan_parser.py',202),
  ('statement -> function_call','statement',1,'p_statement','pecan_parser.py',203),
  ('statement -> variable_declaration','statement',1,'p_statement','pecan_parser.py',204),
  ('assignment -> variable ASSIGN hyper_exp SEMICOLON','assignment',4,'p_assignment','pecan_parser.py',212),
  ('hyper_exp -> super_exp hyper_exp1','hyper_exp',2,'p_hyper_exp','pecan_parser.py',219),
  ('hyper_exp1 -> AND super_exp','hyper_exp1',2,'p_hyper_exp1','pecan_parser.py',226),
  ('hyper_exp1 -> OR super_exp','hyper_exp1',2,'p_hyper_exp1','pecan_parser.py',227),
  ('hyper_exp1 -> epsilon','hyper_exp1',1,'p_hyper_exp1','pecan_parser.py',228),
  ('super_exp -> exp super_exp1','super_exp',2,'p_super_exp','pecan_parser.py',235),
  ('super_exp1 -> GREATER_THAN exp','super_exp1',2,'p_super_exp1','pecan_parser.py',242),
  ('super_exp1 -> LESS_THAN exp','super_exp1',2,'p_super_exp1','pecan_parser.py',243),
  ('super_exp1 -> EQUAL_TO exp','super_exp1',2,'p_super_exp1','pecan_parser.py',244),
  ('super_exp1 -> NOT_EQUAL_TO exp','super_exp1',2,'p_super_exp1','pecan_parser.py',245),
  ('super_exp1 -> epsilon','super_exp1',1,'p_super_exp1','pecan_parser.py',246),
  ('exp -> term exp1','exp',2,'p_exp','pecan_parser.py',253),
  ('exp1 -> PLUS term exp1','exp1',3,'p_exp1','pecan_parser.py',260),
  ('exp1 -> MINUS term exp1','exp1',3,'p_exp1','pecan_parser.py',261),
  ('exp1 -> epsilon','exp1',1,'p_exp1','pecan_parser.py',262),
  ('term -> factor term1','term',2,'p_term','pecan_parser.py',269),
  ('term1 -> MULTIPLICATION factor term1','term1',3,'p_term1','pecan_parser.py',276),
  ('term1 -> DIVISION factor term1','term1',3,'p_term1','pecan_parser.py',277),
  ('term1 -> epsilon','term1',1,'p_term1','pecan_parser.py',278),
  ('factor -> function_call','factor',1,'p_factor','pecan_parser.py',285),
  ('factor -> FLOAT_VALUE','factor',1,'p_factor','pecan_parser.py',286),
  ('factor -> INT_VALUE','factor',1,'p_factor','pecan_parser.py',287),
  ('factor -> BOOL_VALUE','factor',1,'p_factor','pecan_parser.py',288),
  ('factor -> STRING_VALUE','factor',1,'p_factor','pecan_parser.py',289),
  ('factor -> variable','factor',1,'p_factor','pecan_parser.py',290),
  ('factor -> OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS','factor',3,'p_factor','pecan_parser.py',291),
  ('data_type -> INT','data_type',1,'p_data_type','pecan_parser.py',298),
  ('data_type -> FLOAT','data_type',1,'p_data_type','pecan_parser.py',299),
  ('data_type -> STRING','data_type',1,'p_data_type','pecan_parser.py',300),
  ('data_type -> BOOL','data_type',1,'p_data_type','pecan_parser.py',301),
  ('class_function_declaration -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON','class_function_declaration',8,'p_class_function_declaration','pecan_parser.py',308),
  ('return_arg -> data_type','return_arg',1,'p_return_arg','pecan_parser.py',315),
  ('return_arg -> VOID','return_arg',1,'p_return_arg','pecan_parser.py',316),
  ('parameter -> data_type ID parameter1','parameter',3,'p_parameter','pecan_parser.py',323),
  ('parameter -> epsilon','parameter',1,'p_parameter','pecan_parser.py',324),
  ('parameter1 -> COMMA data_type ID parameter1','parameter1',4,'p_parameter1','pecan_parser.py',331),
  ('parameter1 -> epsilon','parameter1',1,'p_parameter1','pecan_parser.py',332),
  ('conditional -> IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY conditional1','conditional',8,'p_conditional','pecan_parser.py',339),
  ('conditional1 -> ELSE OPEN_KEY statement_loop CLOSE_KEY','conditional1',4,'p_conditional1','pecan_parser.py',346),
  ('conditional1 -> epsilon','conditional1',1,'p_conditional1','pecan_parser.py',347),
  ('cycle -> FOR OPEN_PARENTHESIS ID IN ID CLOSE_PARENTHESIS cycle1','cycle',7,'p_cycle','pecan_parser.py',354),
  ('cycle -> WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS cycle1','cycle',5,'p_cycle','pecan_parser.py',355),
  ('cycle1 -> OPEN_KEY statement_loop CLOSE_KEY','cycle1',3,'p_cycle1','pecan_parser.py',362),
  ('read -> READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON','read',5,'p_read','pecan_parser.py',369),
  ('variable_loop -> variable variable_loop1','variable_loop',2,'p_variable_loop','pecan_parser.py',376),
  ('variable_loop1 -> COMMA variable variable_loop1','variable_loop1',3,'p_variable_loop1','pecan_parser.py',383),
  ('variable_loop1 -> epsilon','variable_loop1',1,'p_variable_loop1','pecan_parser.py',384),
  ('write -> WRITE OPEN_PARENTHESIS hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON','write',5,'p_write','pecan_parser.py',391),
  ('hyper_exp_loop -> hyper_exp hyper_exp_loop1','hyper_exp_loop',2,'p_hyper_exp_loop','pecan_parser.py',398),
  ('hyper_exp_loop1 -> COMMA hyper_exp hyper_exp_loop1','hyper_exp_loop1',3,'p_hyper_exp_loop1','pecan_parser.py',405),
  ('hyper_exp_loop1 -> epsilon','hyper_exp_loop1',1,'p_hyper_exp_loop1','pecan_parser.py',406),
  ('function_call -> ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON','function_call',6,'p_function_call','pecan_parser.py',414),
  ('function_call1 -> DOT ID','function_call1',2,'p_function_call1','pecan_parser.py',421),
  ('function_call1 -> epsilon','function_call1',1,'p_function_call1','pecan_parser.py',422),
  ('function_call2 -> hyper_exp_loop','function_call2',1,'p_function_call2','pecan_parser.py',429),
  ('function_call2 -> epsilon','function_call2',1,'p_function_call2','pecan_parser.py',430),
  ('class_function -> AT_CLASS ID FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY','class_function',13,'p_class_function','pecan_parser.py',437),
  ('function_declaration -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY','function_declaration',11,'p_function_declaration','pecan_parser.py',445),
  ('function_return -> RETURN hyper_exp SEMICOLON','function_return',3,'p_function_return','pecan_parser.py',465),
  ('function_return -> epsilon','function_return',1,'p_function_return','pecan_parser.py',466),
  ('function_statement_loop -> statement_loop','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',473),
  ('function_statement_loop -> epsilon','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',474),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','pecan_parser.py',480),
]
