
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN AT_CLASS BOOL BOOL_VALUE CLASS CLOSE_BRACKET CLOSE_KEY CLOSE_PARENTHESIS COMMA CONSTRUCTOR DIVISION DOT ELSE EQUAL_TO FLOAT FLOAT_VALUE FOR FUNCTION GREATER_THAN GROUP ID IF IN INT INT_VALUE IS LESS_THAN MAIN MINUS MULTIPLICATION NOT_EQUAL_TO OBJ OPEN_BRACKET OPEN_KEY OPEN_PARENTHESIS OR PLUS PROGRAM READ RETURN RETURNS SEMICOLON STRING STRING_VALUE VAR VOID WHILE WRITE\n    program : PROGRAM np_start_func_dir ID SEMICOLON declaration_loop main_function\n    \n    main_function : MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY variable_declaration_loop statement_loop CLOSE_KEY\n    \n    np_start_func_dir : epsilon\n    \n    declaration_loop : declaration declaration_loop\n                     | epsilon\n    \n    statement_loop  : statement statement_loop1\n    \n    statement_loop1 : statement statement_loop1\n                    | epsilon\n    \n    declaration : class_declaration\n                | variable_declaration\n                | function_declaration\n    \n    variable    : ID variable1\n    \n    variable1   : OPEN_BRACKET hyper_exp CLOSE_BRACKET\n                | DOT ID\n                | epsilon\n\n    \n    class_declaration   : CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2\n    \n    class_declaration1  : IS ID\n                        | epsilon\n    \n    class_declaration2  : class_function class_declaration2\n                        | epsilon\n    \n    class_body  : class_body1 class_body3\n    \n    class_body1 : variable_declaration class_body2\n    \n    class_body2 : variable_declaration class_body2\n                | epsilon\n    \n    class_body3 : class_function_declaration class_body4\n    \n    class_body4 : class_function_declaration class_body4\n                | epsilon\n\n    \n    constructor : CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY\n    \n    variable_declaration_loop : variable_declaration variable_declaration_loop\n                                | epsilon\n    \n    variable_declaration    : VAR data_type ID SEMICOLON\n                            | GROUP ID ASSIGN data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON\n                            | OBJ ID ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON\n\n    \n    atomic_var_type    : VAR\n                | GROUP\n    \n    variable_declaration1   : hyper_exp_loop\n                            | epsilon\n    \n    statement   : assignment\n                | conditional\n                | cycle\n                | read\n                | write\n                | function_call\n    \n    assignment  : variable ASSIGN hyper_exp SEMICOLON\n    \n    np_add_operator : epsilon\n    \n    hyper_exp   : super_exp np_hyper_exp hyper_exp1\n    \n    hyper_exp1  : AND np_add_operator super_exp np_hyper_exp hyper_exp1\n                | OR np_add_operator super_exp np_hyper_exp hyper_exp1\n                | epsilon\n    \n    np_hyper_exp : epsilon\n    \n    super_exp   : exp np_super_exp super_exp1\n    \n    super_exp1  : GREATER_THAN np_add_operator exp np_super_exp super_exp1\n                | LESS_THAN np_add_operator exp np_super_exp super_exp1\n                | EQUAL_TO np_add_operator exp np_super_exp super_exp1\n                | NOT_EQUAL_TO np_add_operator exp np_super_exp super_exp1\n                | epsilon\n    \n    np_super_exp : epsilon\n    \n    exp : term np_exp exp1\n    \n    exp1    : PLUS np_add_operator term np_exp exp1\n            | MINUS np_add_operator term np_exp exp1\n            | epsilon\n    \n    np_exp : epsilon\n    \n    term    : factor np_term term1\n    \n    term1   : MULTIPLICATION np_add_operator factor np_term term1\n            | DIVISION np_add_operator factor np_term term1\n            | epsilon\n    \n    np_term : epsilon\n    \n    factor  : function_call\n            | FLOAT_VALUE\n            | INT_VALUE\n            | BOOL_VALUE\n            | STRING_VALUE\n            | variable\n            | OPEN_PARENTHESIS np_add_open_parenthesis hyper_exp CLOSE_PARENTHESIS np_remove_open_parenthesis\n    \n    np_add_open_parenthesis : epsilon\n    \n    np_remove_open_parenthesis : epsilon\n    \n    data_type   : INT\n                | FLOAT\n                | STRING\n                | BOOL\n    \n    class_function_declaration : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON\n    \n    return_arg  : data_type\n                | VOID\n    \n    parameter   : atomic_var_type data_type ID parameter1\n                | OBJ ID ID parameter1\n                | epsilon\n    \n    parameter1  : COMMA atomic_var_type data_type ID parameter1\n                | COMMA OBJ ID ID parameter1\n                | epsilon\n    \n    conditional : IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_if_1 OPEN_KEY statement_loop CLOSE_KEY conditional1\n    \n    conditional1    : ELSE np_if_3 OPEN_KEY statement_loop CLOSE_KEY np_if_2\n                    | np_if_2\n    \n    np_if_1 : epsilon\n    \n    np_if_2 : epsilon\n    \n    np_if_3 : epsilon\n    \n    cycle   : FOR OPEN_PARENTHESIS ID IN ID CLOSE_PARENTHESIS cycle1\n            | WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS cycle1\n    \n    cycle1  : OPEN_KEY statement_loop CLOSE_KEY\n    \n    read    : READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    variable_loop   : variable variable_loop1\n    \n    variable_loop1  : COMMA variable variable_loop1\n                    | epsilon\n    \n    write   : WRITE OPEN_PARENTHESIS write_hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    write_hyper_exp_loop  : hyper_exp np_add_write_quad write_hyper_exp_loop1\n    \n    write_hyper_exp_loop1 : COMMA hyper_exp np_add_write_quad write_hyper_exp_loop1\n                    | epsilon\n\n    \n    np_add_write_quad : epsilon\n    \n    hyper_exp_loop  : hyper_exp hyper_exp_loop1\n    \n    hyper_exp_loop1 : COMMA hyper_exp hyper_exp_loop1\n                    | epsilon\n\n    \n    function_call   : ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON\n    \n    function_call1  : DOT ID\n                    | epsilon\n    \n    function_call2  : hyper_exp_loop\n                    | epsilon\n    \n    class_function  : AT_CLASS ID FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY\n\n    \n    function_declaration    : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY variable_declaration_loop function_statement_loop function_return CLOSE_KEY\n    \n    function_return : RETURN hyper_exp SEMICOLON\n                    | epsilon\n    \n    function_statement_loop  : statement_loop\n                    | epsilon\n    epsilon :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,137,],[0,-1,-2,]),'ID':([2,3,4,13,15,16,17,22,23,24,25,26,32,36,41,46,50,55,57,58,59,60,61,65,71,90,91,92,93,94,95,96,103,113,115,116,117,120,138,141,142,143,144,145,146,148,151,152,156,159,160,163,164,165,166,169,170,173,174,176,178,192,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,221,223,253,254,255,258,260,262,265,277,281,302,303,306,309,313,315,316,322,325,326,328,],[-122,5,-3,21,27,28,29,34,-77,-78,-79,-80,40,43,-31,58,-122,70,87,88,70,-122,-30,108,-122,70,-38,-39,-40,-41,-42,-43,-29,153,70,70,-75,70,70,70,70,182,70,186,70,193,-32,70,-33,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,214,229,70,-45,70,70,70,70,70,70,70,70,70,70,248,249,-44,252,186,257,-97,70,-99,-103,70,286,-111,70,70,-96,-98,70,-122,-90,-92,-94,70,70,-122,-91,]),'SEMICOLON':([5,23,24,25,26,34,62,70,76,77,78,79,80,81,82,83,84,85,110,112,114,118,122,123,124,125,126,127,128,129,131,132,153,158,161,162,167,168,171,172,175,180,198,199,219,225,232,233,234,235,236,237,238,239,240,241,242,243,244,265,266,267,268,269,270,271,272,273,274,275,288,289,290,291,292,293,294,295,296,297,298,300,],[6,-77,-78,-79,-80,41,104,-122,-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,151,-12,-15,156,-122,-50,-122,-57,-122,-62,-122,-67,-82,-83,-14,-46,-49,-51,-56,-58,-61,-63,-66,215,-13,-122,255,258,265,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-111,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,307,-47,-48,-52,-53,-54,-55,-59,-60,-64,-65,308,]),'MAIN':([6,7,8,9,10,11,12,20,41,147,151,156,189,190,191,228,299,318,330,],[-122,19,-122,-5,-9,-10,-11,-4,-31,-122,-32,-33,-16,-122,-20,-19,-117,-28,-116,]),'CLASS':([6,8,10,11,12,41,147,151,156,189,190,191,228,299,318,330,],[13,13,-9,-10,-11,-31,-122,-32,-33,-16,-122,-20,-19,-117,-28,-116,]),'VAR':([6,8,10,11,12,37,39,41,50,53,60,66,134,147,150,151,156,176,189,190,191,228,230,299,305,318,330,],[14,14,-9,-10,-11,48,14,-31,14,14,14,14,48,-122,48,-32,-33,14,-16,-122,-20,-19,48,-117,48,-28,-116,]),'GROUP':([6,8,10,11,12,37,39,41,50,53,60,66,134,147,150,151,156,176,189,190,191,228,230,299,305,318,330,],[15,15,-9,-10,-11,49,15,-31,15,15,15,15,49,-122,49,-32,-33,15,-16,-122,-20,-19,49,-117,49,-28,-116,]),'OBJ':([6,8,10,11,12,37,39,41,50,53,60,66,134,147,150,151,156,176,189,190,191,228,230,299,305,318,330,],[16,16,-9,-10,-11,46,16,-31,16,16,16,16,178,-122,46,-32,-33,16,-16,-122,-20,-19,46,-117,46,-28,-116,]),'FUNCTION':([6,8,10,11,12,41,52,53,64,66,67,68,105,109,147,151,156,189,190,191,228,229,299,307,318,330,],[17,17,-9,-10,-11,-31,65,-122,65,-122,-22,-24,65,-23,-122,-32,-33,-16,-122,-20,-19,262,-117,-81,-28,-116,]),'INT':([14,35,45,48,49,86,177,264,321,],[23,23,23,-34,-35,23,23,23,23,]),'FLOAT':([14,35,45,48,49,86,177,264,321,],[24,24,24,-34,-35,24,24,24,24,]),'STRING':([14,35,45,48,49,86,177,264,321,],[25,25,25,-34,-35,25,25,25,25,]),'BOOL':([14,35,45,48,49,86,177,264,321,],[26,26,26,-34,-35,26,26,26,26,]),'OPEN_PARENTHESIS':([19,29,43,55,70,71,98,99,100,101,102,108,111,114,115,116,117,120,141,142,144,146,152,153,159,160,163,164,165,166,169,170,173,174,193,201,202,203,204,205,206,207,208,209,210,211,260,277,286,],[30,37,55,71,-122,-122,142,143,144,145,146,150,152,-113,71,71,-75,71,71,71,71,71,71,-112,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,230,71,-45,71,71,71,71,71,71,71,71,71,71,71,305,]),'IS':([21,],[32,]),'OPEN_KEY':([21,23,24,25,26,31,33,38,40,130,131,132,216,218,250,251,282,287,314,319,320,323,],[-122,-77,-78,-79,-80,39,-18,50,-17,176,-82,-83,-122,254,281,-93,254,306,-122,322,-95,325,]),'OPEN_BRACKET':([23,24,25,26,42,70,186,],[-77,-78,-79,-80,54,115,115,]),'ASSIGN':([27,28,70,97,112,114,153,198,],[35,36,-122,141,-12,-15,-14,-13,]),'CLOSE_PARENTHESIS':([30,37,44,47,55,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,112,114,119,121,122,123,124,125,126,127,128,129,133,135,136,150,152,153,155,157,158,161,162,167,168,171,172,175,181,183,184,185,186,187,188,194,195,196,197,198,199,200,220,222,224,226,227,230,233,234,235,236,237,238,239,240,241,242,243,244,248,249,252,256,257,259,261,263,265,266,267,268,269,270,271,272,273,274,275,279,280,284,285,289,290,291,292,293,294,295,296,297,298,304,305,310,311,],[38,-122,56,-86,-122,-122,118,-36,-37,-122,-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,-122,-122,-12,-15,-108,-110,-122,-50,-122,-57,-122,-62,-122,-67,-84,-89,-85,-122,-122,-14,199,-122,-46,-49,-51,-56,-58,-61,-63,-66,216,218,219,-122,-122,225,-122,231,232,-114,-115,-13,-122,-109,-100,-102,-15,-122,-107,-122,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,282,-122,-14,-104,-106,287,-111,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-87,-88,-101,-122,-47,-48,-52,-53,-54,-55,-59,-60,-64,-65,-122,-122,-105,317,]),'IF':([41,50,59,60,61,90,91,92,93,94,95,96,103,138,151,156,176,212,215,253,254,255,258,265,281,302,303,306,309,313,315,316,322,325,326,328,],[-31,-122,98,-122,-30,98,-38,-39,-40,-41,-42,-43,-29,98,-32,-33,-122,98,-44,-97,98,-99,-103,-111,98,-96,-98,98,-122,-90,-92,-94,98,98,-122,-91,]),'FOR':([41,50,59,60,61,90,91,92,93,94,95,96,103,138,151,156,176,212,215,253,254,255,258,265,281,302,303,306,309,313,315,316,322,325,326,328,],[-31,-122,99,-122,-30,99,-38,-39,-40,-41,-42,-43,-29,99,-32,-33,-122,99,-44,-97,99,-99,-103,-111,99,-96,-98,99,-122,-90,-92,-94,99,99,-122,-91,]),'WHILE':([41,50,59,60,61,90,91,92,93,94,95,96,103,138,151,156,176,212,215,253,254,255,258,265,281,302,303,306,309,313,315,316,322,325,326,328,],[-31,-122,100,-122,-30,100,-38,-39,-40,-41,-42,-43,-29,100,-32,-33,-122,100,-44,-97,100,-99,-103,-111,100,-96,-98,100,-122,-90,-92,-94,100,100,-122,-91,]),'READ':([41,50,59,60,61,90,91,92,93,94,95,96,103,138,151,156,176,212,215,253,254,255,258,265,281,302,303,306,309,313,315,316,322,325,326,328,],[-31,-122,101,-122,-30,101,-38,-39,-40,-41,-42,-43,-29,101,-32,-33,-122,101,-44,-97,101,-99,-103,-111,101,-96,-98,101,-122,-90,-92,-94,101,101,-122,-91,]),'WRITE':([41,50,59,60,61,90,91,92,93,94,95,96,103,138,151,156,176,212,215,253,254,255,258,265,281,302,303,306,309,313,315,316,322,325,326,328,],[-31,-122,102,-122,-30,102,-38,-39,-40,-41,-42,-43,-29,102,-32,-33,-122,102,-44,-97,102,-99,-103,-111,102,-96,-98,102,-122,-90,-92,-94,102,102,-122,-91,]),'RETURN':([41,60,61,90,91,92,93,94,95,96,103,138,139,140,151,156,176,179,212,215,245,246,247,253,255,258,265,302,303,309,313,315,316,325,326,327,328,],[-31,-122,-30,-122,-38,-39,-40,-41,-42,-43,-29,-122,-6,-8,-32,-33,-122,-7,-122,-44,277,-120,-121,-97,-99,-103,-111,-96,-98,-122,-90,-92,-94,-122,-122,277,-91,]),'CLOSE_KEY':([41,51,60,61,63,64,89,90,91,92,93,94,95,96,103,105,106,107,138,139,140,149,151,156,176,179,212,215,245,246,247,253,255,258,265,276,278,283,301,302,303,307,308,309,312,313,315,316,324,325,326,327,328,329,],[-31,62,-122,-30,-21,-122,137,-122,-38,-39,-40,-41,-42,-43,-29,-122,-25,-27,-122,-6,-8,-26,-32,-33,-122,-7,-122,-44,-122,-120,-121,-97,-99,-103,-111,299,-119,303,309,-96,-98,-81,-118,-122,318,-90,-92,-94,326,-122,-122,-122,-91,330,]),'INT_VALUE':([54,55,71,115,116,117,120,141,142,144,146,152,159,160,163,164,165,166,169,170,173,174,201,202,203,204,205,206,207,208,209,210,211,260,277,],[69,82,-122,82,82,-75,82,82,82,82,82,82,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,82,-45,82,82,82,82,82,82,82,82,82,82,82,]),'FLOAT_VALUE':([55,71,115,116,117,120,141,142,144,146,152,159,160,163,164,165,166,169,170,173,174,201,202,203,204,205,206,207,208,209,210,211,260,277,],[81,-122,81,81,-75,81,81,81,81,81,81,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,81,-45,81,81,81,81,81,81,81,81,81,81,81,]),'BOOL_VALUE':([55,71,115,116,117,120,141,142,144,146,152,159,160,163,164,165,166,169,170,173,174,201,202,203,204,205,206,207,208,209,210,211,260,277,],[83,-122,83,83,-75,83,83,83,83,83,83,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,83,-45,83,83,83,83,83,83,83,83,83,83,83,]),'STRING_VALUE':([55,71,115,116,117,120,141,142,144,146,152,159,160,163,164,165,166,169,170,173,174,201,202,203,204,205,206,207,208,209,210,211,260,277,],[84,-122,84,84,-75,84,84,84,84,84,84,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,84,-45,84,84,84,84,84,84,84,84,84,84,84,]),'RETURNS':([56,231,317,],[86,264,321,]),'CLOSE_BRACKET':([69,70,76,77,78,79,80,81,82,83,84,85,112,114,122,123,124,125,126,127,128,129,153,154,158,161,162,167,168,171,172,175,198,199,233,234,235,236,237,238,239,240,241,242,243,244,265,266,267,268,269,270,271,272,273,274,275,289,290,291,292,293,294,295,296,297,298,],[110,-122,-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,-122,-50,-122,-57,-122,-62,-122,-67,-14,198,-46,-49,-51,-56,-58,-61,-63,-66,-13,-122,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-111,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-47,-48,-52,-53,-54,-55,-59,-60,-64,-65,]),'DOT':([70,186,],[113,223,]),'MULTIPLICATION':([70,79,80,81,82,83,84,85,112,114,128,129,153,198,199,233,234,243,244,265,274,275,],[-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,173,-67,-14,-13,-122,-74,-76,-122,-122,-111,173,173,]),'DIVISION':([70,79,80,81,82,83,84,85,112,114,128,129,153,198,199,233,234,243,244,265,274,275,],[-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,174,-67,-14,-13,-122,-74,-76,-122,-122,-111,174,174,]),'PLUS':([70,78,79,80,81,82,83,84,85,112,114,126,127,128,129,153,172,175,198,199,233,234,241,242,243,244,265,272,273,274,275,297,298,],[-122,-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,169,-62,-122,-67,-14,-63,-66,-13,-122,-74,-76,-122,-122,-122,-122,-111,169,169,-122,-122,-64,-65,]),'MINUS':([70,78,79,80,81,82,83,84,85,112,114,126,127,128,129,153,172,175,198,199,233,234,241,242,243,244,265,272,273,274,275,297,298,],[-122,-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,170,-62,-122,-67,-14,-63,-66,-13,-122,-74,-76,-122,-122,-122,-122,-111,170,170,-122,-122,-64,-65,]),'GREATER_THAN':([70,77,78,79,80,81,82,83,84,85,112,114,124,125,126,127,128,129,153,168,171,172,175,198,199,233,234,237,238,239,240,241,242,243,244,265,268,269,270,271,272,273,274,275,295,296,297,298,],[-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,163,-57,-122,-62,-122,-67,-14,-58,-61,-63,-66,-13,-122,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-111,163,163,163,163,-122,-122,-122,-122,-59,-60,-64,-65,]),'LESS_THAN':([70,77,78,79,80,81,82,83,84,85,112,114,124,125,126,127,128,129,153,168,171,172,175,198,199,233,234,237,238,239,240,241,242,243,244,265,268,269,270,271,272,273,274,275,295,296,297,298,],[-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,164,-57,-122,-62,-122,-67,-14,-58,-61,-63,-66,-13,-122,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-111,164,164,164,164,-122,-122,-122,-122,-59,-60,-64,-65,]),'EQUAL_TO':([70,77,78,79,80,81,82,83,84,85,112,114,124,125,126,127,128,129,153,168,171,172,175,198,199,233,234,237,238,239,240,241,242,243,244,265,268,269,270,271,272,273,274,275,295,296,297,298,],[-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,165,-57,-122,-62,-122,-67,-14,-58,-61,-63,-66,-13,-122,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-111,165,165,165,165,-122,-122,-122,-122,-59,-60,-64,-65,]),'NOT_EQUAL_TO':([70,77,78,79,80,81,82,83,84,85,112,114,124,125,126,127,128,129,153,168,171,172,175,198,199,233,234,237,238,239,240,241,242,243,244,265,268,269,270,271,272,273,274,275,295,296,297,298,],[-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,166,-57,-122,-62,-122,-67,-14,-58,-61,-63,-66,-13,-122,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-111,166,166,166,166,-122,-122,-122,-122,-59,-60,-64,-65,]),'AND':([70,76,77,78,79,80,81,82,83,84,85,112,114,122,123,124,125,126,127,128,129,153,162,167,168,171,172,175,198,199,233,234,235,236,237,238,239,240,241,242,243,244,265,266,267,268,269,270,271,272,273,274,275,291,292,293,294,295,296,297,298,],[-122,-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,159,-50,-122,-57,-122,-62,-122,-67,-14,-51,-56,-58,-61,-63,-66,-13,-122,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-111,159,159,-122,-122,-122,-122,-122,-122,-122,-122,-52,-53,-54,-55,-59,-60,-64,-65,]),'OR':([70,76,77,78,79,80,81,82,83,84,85,112,114,122,123,124,125,126,127,128,129,153,162,167,168,171,172,175,198,199,233,234,235,236,237,238,239,240,241,242,243,244,265,266,267,268,269,270,271,272,273,274,275,291,292,293,294,295,296,297,298,],[-122,-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,-12,-15,160,-50,-122,-57,-122,-62,-122,-67,-14,-51,-56,-58,-61,-63,-66,-13,-122,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-111,160,160,-122,-122,-122,-122,-122,-122,-122,-122,-52,-53,-54,-55,-59,-60,-64,-65,]),'COMMA':([70,75,76,77,78,79,80,81,82,83,84,85,87,88,112,114,122,123,124,125,126,127,128,129,153,157,158,161,162,167,168,171,172,175,185,186,188,198,199,224,226,227,233,234,235,236,237,238,239,240,241,242,243,244,248,249,256,257,265,266,267,268,269,270,271,272,273,274,275,285,289,290,291,292,293,294,295,296,297,298,304,],[-122,120,-122,-122,-122,-122,-68,-69,-70,-71,-72,-73,134,134,-12,-15,-122,-50,-122,-57,-122,-62,-122,-67,-14,120,-46,-49,-51,-56,-58,-61,-63,-66,221,-122,-122,-13,-122,-15,260,-107,-74,-76,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,134,134,221,-14,-111,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-47,-48,-52,-53,-54,-55,-59,-60,-64,-65,260,]),'VOID':([86,264,321,],[132,132,132,]),'CONSTRUCTOR':([104,],[148,]),'AT_CLASS':([147,190,318,330,],[192,192,-28,-116,]),'IN':([182,],[217,]),'ELSE':([309,],[314,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'np_start_func_dir':([2,],[3,]),'epsilon':([2,6,8,21,37,50,53,55,60,64,66,70,71,75,76,77,78,79,87,88,90,105,122,124,126,128,138,147,150,152,157,159,160,163,164,165,166,169,170,173,174,176,185,186,188,190,199,212,216,226,230,235,236,237,238,239,240,241,242,243,244,245,248,249,256,266,267,268,269,270,271,272,273,274,275,285,304,305,309,314,325,326,327,],[4,9,9,33,47,61,68,74,61,107,68,114,117,121,123,125,127,129,135,135,140,107,161,167,171,175,140,191,47,197,121,202,202,202,202,202,202,202,202,202,202,61,222,224,227,191,234,247,251,261,47,123,123,125,125,125,125,127,127,129,129,278,135,135,222,161,161,167,167,167,167,171,171,175,175,227,261,47,316,320,247,316,278,]),'declaration_loop':([6,8,],[7,20,]),'declaration':([6,8,],[8,8,]),'class_declaration':([6,8,],[10,10,]),'variable_declaration':([6,8,39,50,53,60,66,176,],[11,11,53,60,66,60,66,60,]),'function_declaration':([6,8,],[12,12,]),'main_function':([7,],[18,]),'data_type':([14,35,45,86,177,264,321,],[22,42,57,131,213,131,131,]),'class_declaration1':([21,],[31,]),'parameter':([37,150,230,305,],[44,194,263,311,]),'atomic_var_type':([37,134,150,230,305,],[45,177,45,45,45,]),'class_body':([39,],[51,]),'class_body1':([39,],[52,]),'variable_declaration_loop':([50,60,176,],[59,103,212,]),'class_body3':([52,],[63,]),'class_function_declaration':([52,64,105,],[64,105,105,]),'class_body2':([53,66,],[67,109,]),'variable_declaration1':([55,],[72,]),'hyper_exp_loop':([55,152,],[73,196,]),'hyper_exp':([55,115,116,120,141,142,144,146,152,260,277,],[75,154,155,157,180,181,183,188,75,285,300,]),'super_exp':([55,115,116,120,141,142,144,146,152,201,203,260,277,],[76,76,76,76,76,76,76,76,76,235,236,76,76,]),'exp':([55,115,116,120,141,142,144,146,152,201,203,204,205,206,207,260,277,],[77,77,77,77,77,77,77,77,77,77,77,237,238,239,240,77,77,]),'term':([55,115,116,120,141,142,144,146,152,201,203,204,205,206,207,208,209,260,277,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,241,242,78,78,]),'factor':([55,115,116,120,141,142,144,146,152,201,203,204,205,206,207,208,209,210,211,260,277,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,243,244,79,79,]),'function_call':([55,59,90,115,116,120,138,141,142,144,146,152,201,203,204,205,206,207,208,209,210,211,212,254,260,277,281,306,322,325,],[80,96,96,80,80,80,96,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,80,80,96,96,96,96,]),'variable':([55,59,90,115,116,120,138,141,142,144,145,146,152,201,203,204,205,206,207,208,209,210,211,212,221,254,260,277,281,306,322,325,],[85,97,97,85,85,85,97,85,85,85,185,85,85,85,85,85,85,85,85,85,85,85,85,97,256,97,85,85,97,97,97,97,]),'statement_loop':([59,212,254,281,306,322,325,],[89,246,283,301,312,324,246,]),'statement':([59,90,138,212,254,281,306,322,325,],[90,138,138,90,90,90,90,90,90,]),'assignment':([59,90,138,212,254,281,306,322,325,],[91,91,91,91,91,91,91,91,91,]),'conditional':([59,90,138,212,254,281,306,322,325,],[92,92,92,92,92,92,92,92,92,]),'cycle':([59,90,138,212,254,281,306,322,325,],[93,93,93,93,93,93,93,93,93,]),'read':([59,90,138,212,254,281,306,322,325,],[94,94,94,94,94,94,94,94,94,]),'write':([59,90,138,212,254,281,306,322,325,],[95,95,95,95,95,95,95,95,95,]),'class_body4':([64,105,],[106,149,]),'function_call1':([70,],[111,]),'variable1':([70,186,],[112,112,]),'np_add_open_parenthesis':([71,],[116,]),'hyper_exp_loop1':([75,157,],[119,200,]),'np_hyper_exp':([76,235,236,],[122,266,267,]),'np_super_exp':([77,237,238,239,240,],[124,268,269,270,271,]),'np_exp':([78,241,242,],[126,272,273,]),'np_term':([79,243,244,],[128,274,275,]),'return_arg':([86,264,321,],[130,288,323,]),'parameter1':([87,88,248,249,],[133,136,279,280,]),'statement_loop1':([90,138,],[139,179,]),'constructor':([104,],[147,]),'hyper_exp1':([122,266,267,],[158,289,290,]),'super_exp1':([124,268,269,270,271,],[162,291,292,293,294,]),'exp1':([126,272,273,],[168,295,296,]),'term1':([128,274,275,],[172,297,298,]),'variable_loop':([145,],[184,]),'write_hyper_exp_loop':([146,],[187,]),'class_declaration2':([147,190,],[189,228,]),'class_function':([147,190,],[190,190,]),'function_call2':([152,],[195,]),'np_add_operator':([159,160,163,164,165,166,169,170,173,174,],[201,203,204,205,206,207,208,209,210,211,]),'variable_loop1':([185,256,],[220,284,]),'np_add_write_quad':([188,285,],[226,304,]),'np_remove_open_parenthesis':([199,],[233,]),'function_statement_loop':([212,325,],[245,327,]),'np_if_1':([216,],[250,]),'cycle1':([218,282,],[253,302,]),'write_hyper_exp_loop1':([226,304,],[259,310,]),'function_return':([245,327,],[276,329,]),'conditional1':([309,],[313,]),'np_if_2':([309,326,],[315,328,]),'np_if_3':([314,],[319,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM np_start_func_dir ID SEMICOLON declaration_loop main_function','program',6,'p_program','pecan_parser.py',34),
  ('main_function -> MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY variable_declaration_loop statement_loop CLOSE_KEY','main_function',7,'p_main_function','pecan_parser.py',43),
  ('np_start_func_dir -> epsilon','np_start_func_dir',1,'p_np_start_func_dir','pecan_parser.py',51),
  ('declaration_loop -> declaration declaration_loop','declaration_loop',2,'p_declaration_loop','pecan_parser.py',59),
  ('declaration_loop -> epsilon','declaration_loop',1,'p_declaration_loop','pecan_parser.py',60),
  ('statement_loop -> statement statement_loop1','statement_loop',2,'p_statement_loop','pecan_parser.py',71),
  ('statement_loop1 -> statement statement_loop1','statement_loop1',2,'p_statement_loop1','pecan_parser.py',78),
  ('statement_loop1 -> epsilon','statement_loop1',1,'p_statement_loop1','pecan_parser.py',79),
  ('declaration -> class_declaration','declaration',1,'p_declaration','pecan_parser.py',89),
  ('declaration -> variable_declaration','declaration',1,'p_declaration','pecan_parser.py',90),
  ('declaration -> function_declaration','declaration',1,'p_declaration','pecan_parser.py',91),
  ('variable -> ID variable1','variable',2,'p_variable','pecan_parser.py',99),
  ('variable1 -> OPEN_BRACKET hyper_exp CLOSE_BRACKET','variable1',3,'p_variable1','pecan_parser.py',106),
  ('variable1 -> DOT ID','variable1',2,'p_variable1','pecan_parser.py',107),
  ('variable1 -> epsilon','variable1',1,'p_variable1','pecan_parser.py',108),
  ('class_declaration -> CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2','class_declaration',9,'p_class_declaration','pecan_parser.py',116),
  ('class_declaration1 -> IS ID','class_declaration1',2,'p_class_declaration1','pecan_parser.py',123),
  ('class_declaration1 -> epsilon','class_declaration1',1,'p_class_declaration1','pecan_parser.py',124),
  ('class_declaration2 -> class_function class_declaration2','class_declaration2',2,'p_class_declaration2','pecan_parser.py',131),
  ('class_declaration2 -> epsilon','class_declaration2',1,'p_class_declaration2','pecan_parser.py',132),
  ('class_body -> class_body1 class_body3','class_body',2,'p_class_body','pecan_parser.py',139),
  ('class_body1 -> variable_declaration class_body2','class_body1',2,'p_class_body1','pecan_parser.py',146),
  ('class_body2 -> variable_declaration class_body2','class_body2',2,'p_class_body2','pecan_parser.py',153),
  ('class_body2 -> epsilon','class_body2',1,'p_class_body2','pecan_parser.py',154),
  ('class_body3 -> class_function_declaration class_body4','class_body3',2,'p_class_body3','pecan_parser.py',161),
  ('class_body4 -> class_function_declaration class_body4','class_body4',2,'p_class_body4','pecan_parser.py',168),
  ('class_body4 -> epsilon','class_body4',1,'p_class_body4','pecan_parser.py',169),
  ('constructor -> CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY','constructor',8,'p_constructor','pecan_parser.py',177),
  ('variable_declaration_loop -> variable_declaration variable_declaration_loop','variable_declaration_loop',2,'p_variable_declaration_loop','pecan_parser.py',184),
  ('variable_declaration_loop -> epsilon','variable_declaration_loop',1,'p_variable_declaration_loop','pecan_parser.py',185),
  ('variable_declaration -> VAR data_type ID SEMICOLON','variable_declaration',4,'p_variable_declaration','pecan_parser.py',195),
  ('variable_declaration -> GROUP ID ASSIGN data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON','variable_declaration',8,'p_variable_declaration','pecan_parser.py',196),
  ('variable_declaration -> OBJ ID ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON','variable_declaration',8,'p_variable_declaration','pecan_parser.py',197),
  ('atomic_var_type -> VAR','atomic_var_type',1,'p_atomic_var_type','pecan_parser.py',211),
  ('atomic_var_type -> GROUP','atomic_var_type',1,'p_atomic_var_type','pecan_parser.py',212),
  ('variable_declaration1 -> hyper_exp_loop','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',219),
  ('variable_declaration1 -> epsilon','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',220),
  ('statement -> assignment','statement',1,'p_statement','pecan_parser.py',226),
  ('statement -> conditional','statement',1,'p_statement','pecan_parser.py',227),
  ('statement -> cycle','statement',1,'p_statement','pecan_parser.py',228),
  ('statement -> read','statement',1,'p_statement','pecan_parser.py',229),
  ('statement -> write','statement',1,'p_statement','pecan_parser.py',230),
  ('statement -> function_call','statement',1,'p_statement','pecan_parser.py',231),
  ('assignment -> variable ASSIGN hyper_exp SEMICOLON','assignment',4,'p_assignment','pecan_parser.py',239),
  ('np_add_operator -> epsilon','np_add_operator',1,'p_np_add_operator','pecan_parser.py',252),
  ('hyper_exp -> super_exp np_hyper_exp hyper_exp1','hyper_exp',3,'p_hyper_exp','pecan_parser.py',259),
  ('hyper_exp1 -> AND np_add_operator super_exp np_hyper_exp hyper_exp1','hyper_exp1',5,'p_hyper_exp1','pecan_parser.py',266),
  ('hyper_exp1 -> OR np_add_operator super_exp np_hyper_exp hyper_exp1','hyper_exp1',5,'p_hyper_exp1','pecan_parser.py',267),
  ('hyper_exp1 -> epsilon','hyper_exp1',1,'p_hyper_exp1','pecan_parser.py',268),
  ('np_hyper_exp -> epsilon','np_hyper_exp',1,'p_np_hyper_exp','pecan_parser.py',275),
  ('super_exp -> exp np_super_exp super_exp1','super_exp',3,'p_super_exp','pecan_parser.py',282),
  ('super_exp1 -> GREATER_THAN np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',289),
  ('super_exp1 -> LESS_THAN np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',290),
  ('super_exp1 -> EQUAL_TO np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',291),
  ('super_exp1 -> NOT_EQUAL_TO np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',292),
  ('super_exp1 -> epsilon','super_exp1',1,'p_super_exp1','pecan_parser.py',293),
  ('np_super_exp -> epsilon','np_super_exp',1,'p_np_super_exp','pecan_parser.py',300),
  ('exp -> term np_exp exp1','exp',3,'p_exp','pecan_parser.py',307),
  ('exp1 -> PLUS np_add_operator term np_exp exp1','exp1',5,'p_exp1','pecan_parser.py',314),
  ('exp1 -> MINUS np_add_operator term np_exp exp1','exp1',5,'p_exp1','pecan_parser.py',315),
  ('exp1 -> epsilon','exp1',1,'p_exp1','pecan_parser.py',316),
  ('np_exp -> epsilon','np_exp',1,'p_np_exp','pecan_parser.py',323),
  ('term -> factor np_term term1','term',3,'p_term','pecan_parser.py',330),
  ('term1 -> MULTIPLICATION np_add_operator factor np_term term1','term1',5,'p_term1','pecan_parser.py',337),
  ('term1 -> DIVISION np_add_operator factor np_term term1','term1',5,'p_term1','pecan_parser.py',338),
  ('term1 -> epsilon','term1',1,'p_term1','pecan_parser.py',339),
  ('np_term -> epsilon','np_term',1,'p_np_term','pecan_parser.py',346),
  ('factor -> function_call','factor',1,'p_factor','pecan_parser.py',367),
  ('factor -> FLOAT_VALUE','factor',1,'p_factor','pecan_parser.py',368),
  ('factor -> INT_VALUE','factor',1,'p_factor','pecan_parser.py',369),
  ('factor -> BOOL_VALUE','factor',1,'p_factor','pecan_parser.py',370),
  ('factor -> STRING_VALUE','factor',1,'p_factor','pecan_parser.py',371),
  ('factor -> variable','factor',1,'p_factor','pecan_parser.py',372),
  ('factor -> OPEN_PARENTHESIS np_add_open_parenthesis hyper_exp CLOSE_PARENTHESIS np_remove_open_parenthesis','factor',5,'p_factor','pecan_parser.py',373),
  ('np_add_open_parenthesis -> epsilon','np_add_open_parenthesis',1,'p_np_add_open_parenthesis','pecan_parser.py',382),
  ('np_remove_open_parenthesis -> epsilon','np_remove_open_parenthesis',1,'p_np_remove_open_parenthesis','pecan_parser.py',389),
  ('data_type -> INT','data_type',1,'p_data_type','pecan_parser.py',396),
  ('data_type -> FLOAT','data_type',1,'p_data_type','pecan_parser.py',397),
  ('data_type -> STRING','data_type',1,'p_data_type','pecan_parser.py',398),
  ('data_type -> BOOL','data_type',1,'p_data_type','pecan_parser.py',399),
  ('class_function_declaration -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON','class_function_declaration',8,'p_class_function_declaration','pecan_parser.py',406),
  ('return_arg -> data_type','return_arg',1,'p_return_arg','pecan_parser.py',413),
  ('return_arg -> VOID','return_arg',1,'p_return_arg','pecan_parser.py',414),
  ('parameter -> atomic_var_type data_type ID parameter1','parameter',4,'p_parameter','pecan_parser.py',421),
  ('parameter -> OBJ ID ID parameter1','parameter',4,'p_parameter','pecan_parser.py',422),
  ('parameter -> epsilon','parameter',1,'p_parameter','pecan_parser.py',423),
  ('parameter1 -> COMMA atomic_var_type data_type ID parameter1','parameter1',5,'p_parameter1','pecan_parser.py',433),
  ('parameter1 -> COMMA OBJ ID ID parameter1','parameter1',5,'p_parameter1','pecan_parser.py',434),
  ('parameter1 -> epsilon','parameter1',1,'p_parameter1','pecan_parser.py',435),
  ('conditional -> IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_if_1 OPEN_KEY statement_loop CLOSE_KEY conditional1','conditional',9,'p_conditional','pecan_parser.py',445),
  ('conditional1 -> ELSE np_if_3 OPEN_KEY statement_loop CLOSE_KEY np_if_2','conditional1',6,'p_conditional1','pecan_parser.py',452),
  ('conditional1 -> np_if_2','conditional1',1,'p_conditional1','pecan_parser.py',453),
  ('np_if_1 -> epsilon','np_if_1',1,'p_np_if_1','pecan_parser.py',460),
  ('np_if_2 -> epsilon','np_if_2',1,'p_np_if_2','pecan_parser.py',472),
  ('np_if_3 -> epsilon','np_if_3',1,'p_np_if_3','pecan_parser.py',480),
  ('cycle -> FOR OPEN_PARENTHESIS ID IN ID CLOSE_PARENTHESIS cycle1','cycle',7,'p_cycle','pecan_parser.py',490),
  ('cycle -> WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS cycle1','cycle',5,'p_cycle','pecan_parser.py',491),
  ('cycle1 -> OPEN_KEY statement_loop CLOSE_KEY','cycle1',3,'p_cycle1','pecan_parser.py',498),
  ('read -> READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON','read',5,'p_read','pecan_parser.py',505),
  ('variable_loop -> variable variable_loop1','variable_loop',2,'p_variable_loop','pecan_parser.py',513),
  ('variable_loop1 -> COMMA variable variable_loop1','variable_loop1',3,'p_variable_loop1','pecan_parser.py',520),
  ('variable_loop1 -> epsilon','variable_loop1',1,'p_variable_loop1','pecan_parser.py',521),
  ('write -> WRITE OPEN_PARENTHESIS write_hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON','write',5,'p_write','pecan_parser.py',531),
  ('write_hyper_exp_loop -> hyper_exp np_add_write_quad write_hyper_exp_loop1','write_hyper_exp_loop',3,'p_write_hyper_exp_loop','pecan_parser.py',538),
  ('write_hyper_exp_loop1 -> COMMA hyper_exp np_add_write_quad write_hyper_exp_loop1','write_hyper_exp_loop1',4,'p_write_hyper_exp_loop1','pecan_parser.py',545),
  ('write_hyper_exp_loop1 -> epsilon','write_hyper_exp_loop1',1,'p_write_hyper_exp_loop1','pecan_parser.py',546),
  ('np_add_write_quad -> epsilon','np_add_write_quad',1,'p_np_add_write_quad','pecan_parser.py',554),
  ('hyper_exp_loop -> hyper_exp hyper_exp_loop1','hyper_exp_loop',2,'p_hyper_exp_loop','pecan_parser.py',562),
  ('hyper_exp_loop1 -> COMMA hyper_exp hyper_exp_loop1','hyper_exp_loop1',3,'p_hyper_exp_loop1','pecan_parser.py',569),
  ('hyper_exp_loop1 -> epsilon','hyper_exp_loop1',1,'p_hyper_exp_loop1','pecan_parser.py',570),
  ('function_call -> ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON','function_call',6,'p_function_call','pecan_parser.py',578),
  ('function_call1 -> DOT ID','function_call1',2,'p_function_call1','pecan_parser.py',585),
  ('function_call1 -> epsilon','function_call1',1,'p_function_call1','pecan_parser.py',586),
  ('function_call2 -> hyper_exp_loop','function_call2',1,'p_function_call2','pecan_parser.py',593),
  ('function_call2 -> epsilon','function_call2',1,'p_function_call2','pecan_parser.py',594),
  ('class_function -> AT_CLASS ID FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY','class_function',13,'p_class_function','pecan_parser.py',601),
  ('function_declaration -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY variable_declaration_loop function_statement_loop function_return CLOSE_KEY','function_declaration',12,'p_function_declaration','pecan_parser.py',609),
  ('function_return -> RETURN hyper_exp SEMICOLON','function_return',3,'p_function_return','pecan_parser.py',617),
  ('function_return -> epsilon','function_return',1,'p_function_return','pecan_parser.py',618),
  ('function_statement_loop -> statement_loop','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',625),
  ('function_statement_loop -> epsilon','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',626),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','pecan_parser.py',632),
]
