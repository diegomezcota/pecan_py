
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN AT_CLASS BOOL BOOL_VALUE CLASS CLOSE_BRACKET CLOSE_KEY CLOSE_PARENTHESIS COMMA CONSTRUCTOR DIVISION DO DOT ELSE EQUAL_TO FLOAT FLOAT_VALUE FOR FUNCTION GREATER_THAN GROUP ID IF INT INT_VALUE IS LESS_THAN MAIN MINUS MULTIPLICATION NOT_EQUAL_TO OBJ OPEN_BRACKET OPEN_KEY OPEN_PARENTHESIS OR PLUS PROGRAM READ RETURN RETURNS SEMICOLON STRING STRING_VALUE TO VAR VOID WHILE WRITE\n    program : PROGRAM np_start_state np_start_func_dir ID SEMICOLON declaration_loop main_function\n    \n    main_function : MAIN np_add_main_internal_scope OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY variable_declaration_loop statement_loop CLOSE_KEY\n    \n    np_add_main_internal_scope : epsilon\n    \n    np_start_state : epsilon\n    \n    np_start_func_dir : epsilon\n    \n    declaration_loop : declaration declaration_loop\n                     | epsilon\n    \n    statement_loop  : statement statement_loop1\n    \n    statement_loop1 : statement statement_loop1\n                    | epsilon\n    \n    declaration : class_declaration\n                | variable_declaration\n                | function_declaration\n    \n    variable    : ID variable1\n    \n    variable1   : OPEN_BRACKET hyper_exp CLOSE_BRACKET\n                | DOT ID\n                | epsilon\n\n    \n    class_declaration   : CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2\n    \n    class_declaration1  : IS ID\n                        | epsilon\n    \n    class_declaration2  : class_function class_declaration2\n                        | epsilon\n    \n    class_body  : class_body1 class_body3\n    \n    class_body1 : variable_declaration class_body2\n    \n    class_body2 : variable_declaration class_body2\n                | epsilon\n    \n    class_body3 : class_function_declaration class_body4\n    \n    class_body4 : class_function_declaration class_body4\n                | epsilon\n\n    \n    constructor : CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY\n    \n    variable_declaration_loop : variable_declaration variable_declaration_loop\n                                | epsilon\n    \n    variable_declaration    : VAR np_set_current_var_type data_type np_set_current_var_data_type ID np_set_current_var_name SEMICOLON np_add_variable\n                            | GROUP np_set_current_var_type ID np_set_current_var_name ASSIGN data_type np_set_current_var_data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON np_add_variable\n                            | OBJ np_set_current_var_type ID np_set_current_var_name ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON np_add_variable\n\n    \n    np_set_current_var_type : epsilon\n    \n    np_set_current_var_data_type : epsilon\n    \n    np_set_current_var_name : epsilon\n    \n    atomic_var_type    : VAR\n                | GROUP\n    \n    np_add_variable : epsilon\n    \n    variable_declaration1   : hyper_exp_loop\n                            | epsilon\n    \n    statement   : assignment\n                | conditional\n                | cycle\n                | read\n                | write\n                | function_call\n    \n    assignment  : variable ASSIGN hyper_exp SEMICOLON\n    \n    np_add_operator : epsilon\n    \n    hyper_exp   : super_exp np_hyper_exp hyper_exp1\n    \n    hyper_exp1  : AND np_add_operator super_exp np_hyper_exp hyper_exp1\n                | OR np_add_operator super_exp np_hyper_exp hyper_exp1\n                | epsilon\n    \n    np_hyper_exp : epsilon\n    \n    super_exp   : exp np_super_exp super_exp1\n    \n    super_exp1  : GREATER_THAN np_add_operator exp np_super_exp super_exp1\n                | LESS_THAN np_add_operator exp np_super_exp super_exp1\n                | EQUAL_TO np_add_operator exp np_super_exp super_exp1\n                | NOT_EQUAL_TO np_add_operator exp np_super_exp super_exp1\n                | epsilon\n    \n    np_super_exp : epsilon\n    \n    exp : term np_exp exp1\n    \n    exp1    : PLUS np_add_operator term np_exp exp1\n            | MINUS np_add_operator term np_exp exp1\n            | epsilon\n    \n    np_exp : epsilon\n    \n    term    : factor np_term term1\n    \n    term1   : MULTIPLICATION np_add_operator factor np_term term1\n            | DIVISION np_add_operator factor np_term term1\n            | epsilon\n    \n    np_term : epsilon\n    \n    factor  : function_call\n            | FLOAT_VALUE\n            | INT_VALUE\n            | BOOL_VALUE\n            | STRING_VALUE\n            | variable\n            | OPEN_PARENTHESIS np_add_open_parenthesis hyper_exp CLOSE_PARENTHESIS np_remove_open_parenthesis\n    \n    np_add_open_parenthesis : epsilon\n    \n    np_remove_open_parenthesis : epsilon\n    \n    data_type   : INT\n                | FLOAT\n                | STRING\n                | BOOL\n    \n    class_function_declaration : FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON\n    \n    return_arg  : data_type\n                | VOID\n    \n    parameter   : atomic_var_type data_type ID parameter1\n                | OBJ ID ID parameter1\n                | epsilon\n    \n    parameter1  : COMMA atomic_var_type data_type ID parameter1\n                | COMMA OBJ ID ID parameter1\n                | epsilon\n    \n    conditional : IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_if_1 OPEN_KEY statement_loop CLOSE_KEY conditional1\n    \n    conditional1    : ELSE np_if_3 OPEN_KEY statement_loop CLOSE_KEY np_if_2\n                    | np_if_2\n    \n    np_if_1 : epsilon\n    \n    np_if_2 : epsilon\n    \n    np_if_3 : epsilon\n    \n    cycle   : FOR ID np_for_1 ASSIGN hyper_exp np_for_2 TO hyper_exp np_for_3 cycle_for\n            | WHILE np_while_1 OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_while_2 cycle_while\n            | DO np_do_while_1 OPEN_KEY statement_loop CLOSE_KEY WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_do_while_2 SEMICOLON\n    \n    cycle_for  : OPEN_KEY statement_loop CLOSE_KEY np_for_4\n    \n    np_for_1 : epsilon\n    \n    np_for_2 : epsilon\n    \n    np_for_3 : epsilon\n    \n    np_for_4 : epsilon\n    \n    cycle_while  : OPEN_KEY statement_loop CLOSE_KEY np_while_3\n    \n    np_while_1 : epsilon\n    \n    np_while_2 : epsilon\n    \n    np_while_3 : epsilon\n    \n    np_do_while_1 : epsilon\n    \n    np_do_while_2 : epsilon\n    \n    read : READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    variable_loop : variable variable_loop1\n    \n    variable_loop1 : COMMA variable variable_loop1\n                    | epsilon\n    \n    write : WRITE OPEN_PARENTHESIS write_hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON\n    \n    write_hyper_exp_loop : hyper_exp np_add_write_quad write_hyper_exp_loop1\n    \n    write_hyper_exp_loop1 : COMMA hyper_exp np_add_write_quad write_hyper_exp_loop1\n                    | epsilon\n\n    \n    np_add_write_quad : epsilon\n    \n    hyper_exp_loop : hyper_exp hyper_exp_loop1\n    \n    hyper_exp_loop1 : COMMA hyper_exp hyper_exp_loop1\n                    | epsilon\n\n    \n    function_call : ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON\n    \n    function_call1 : DOT ID\n                    | epsilon\n    \n    function_call2 : hyper_exp_loop\n                    | epsilon\n    \n    class_function : AT_CLASS ID FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY\n\n    \n    function_declaration : FUNCTION ID np_add_function_internal_scope OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg np_set_function_return_type OPEN_KEY variable_declaration_loop function_statement_loop function_return CLOSE_KEY\n    \n    np_add_function_internal_scope : epsilon\n    \n    np_set_function_return_type : epsilon\n    \n    function_return : RETURN hyper_exp SEMICOLON\n                    | epsilon\n    \n    function_statement_loop : statement_loop\n                    | epsilon\n    epsilon : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,20,140,],[0,-1,-2,]),'ID':([2,3,4,5,6,15,17,18,19,25,26,27,32,34,35,36,37,38,46,47,58,61,65,69,77,78,79,80,81,88,90,95,96,97,98,99,100,101,104,110,112,115,116,118,141,144,145,149,151,156,157,161,165,166,169,182,188,191,192,204,207,208,211,212,213,214,217,218,221,222,224,225,226,227,229,238,240,245,248,250,252,253,254,255,256,257,258,259,260,261,262,263,272,275,277,282,300,303,310,323,326,327,328,329,345,353,355,356,359,364,365,366,367,371,373,374,376,378,379,380,382,],[-141,-141,-4,7,-5,23,-141,-141,28,-36,39,40,45,-141,-83,-84,-85,-86,56,-37,75,78,-141,86,92,93,105,-141,-32,-141,105,105,-44,-45,-46,-47,-48,-49,146,-31,162,-33,-41,-141,105,105,105,189,105,195,105,199,105,-81,105,226,105,105,105,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,264,265,-50,105,195,274,279,-141,-35,105,-51,105,105,105,105,105,105,105,105,105,105,-116,-120,105,-34,105,-128,105,105,105,-103,105,105,-141,-96,-98,-100,-141,-102,105,-110,-113,105,-104,105,-141,-141,-105,-109,-97,]),'SEMICOLON':([7,35,36,37,38,49,56,66,73,105,123,124,125,126,127,128,129,130,131,132,134,135,148,150,167,171,172,173,174,175,176,177,178,184,189,202,206,209,210,215,216,219,220,223,233,236,242,249,269,281,283,284,285,286,287,288,289,290,291,292,293,294,303,312,313,314,315,316,317,318,319,320,321,333,334,335,336,337,338,339,340,341,342,344,360,368,369,],[8,-83,-84,-85,-86,-38,-141,82,88,-141,-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-88,-89,-14,-17,204,-141,-56,-141,-63,-141,-68,-141,-73,227,-16,248,-52,-55,-57,-62,-64,-67,-69,-72,-15,272,275,-141,303,311,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-128,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-53,-54,-58,-59,-60,-61,-65,-66,-70,-71,352,-141,373,-115,]),'MAIN':([8,9,10,11,12,13,14,22,88,111,115,116,158,159,160,198,204,248,250,282,343,351,383,],[-141,21,-141,-7,-11,-12,-13,-6,-141,-141,-33,-41,-18,-141,-22,-21,-141,-141,-35,-34,-134,-30,-133,]),'CLASS':([8,10,12,13,14,88,111,115,116,158,159,160,198,204,248,250,282,343,351,383,],[15,15,-11,-12,-13,-141,-141,-33,-41,-18,-141,-22,-21,-141,-141,-35,-34,-134,-30,-133,]),'VAR':([8,10,12,13,14,44,51,55,65,70,80,88,111,114,115,116,137,158,159,160,198,200,204,224,248,250,282,309,343,351,383,],[16,16,-11,-12,-13,16,63,16,16,16,16,-141,-141,63,-33,-41,63,-18,-141,-22,-21,63,-141,16,-141,-35,-34,63,-134,-30,-133,]),'GROUP':([8,10,12,13,14,44,51,55,65,70,80,88,111,114,115,116,137,158,159,160,198,200,204,224,248,250,282,309,343,351,383,],[17,17,-11,-12,-13,17,64,17,17,17,17,-141,-141,64,-33,-41,64,-18,-141,-22,-21,64,-141,17,-141,-35,-34,64,-134,-30,-133,]),'OBJ':([8,10,12,13,14,44,51,55,65,70,80,88,111,114,115,116,137,158,159,160,198,200,204,224,248,250,282,309,343,351,383,],[18,18,-11,-12,-13,18,61,18,18,18,18,-141,-141,61,-33,-41,182,-18,-141,-22,-21,61,-141,18,-141,-35,-34,61,-134,-30,-133,]),'FUNCTION':([8,10,12,13,14,54,55,68,70,71,72,83,87,88,111,115,116,158,159,160,198,199,204,248,250,282,311,343,351,383,],[19,19,-11,-12,-13,69,-141,69,-141,-24,-26,69,-25,-141,-141,-33,-41,-18,-141,-22,-21,245,-141,-141,-35,-34,-87,-134,-30,-133,]),'INT':([16,24,25,57,60,63,64,91,181,247,361,],[-141,35,-36,35,35,-39,-40,35,35,35,35,]),'FLOAT':([16,24,25,57,60,63,64,91,181,247,361,],[-141,36,-36,36,36,-39,-40,36,36,36,36,]),'STRING':([16,24,25,57,60,63,64,91,181,247,361,],[-141,37,-36,37,37,-39,-40,37,37,37,37,]),'BOOL':([16,24,25,57,60,63,64,91,181,247,361,],[-141,38,-36,38,38,-39,-40,38,38,38,38,]),'OPEN_PARENTHESIS':([21,28,29,30,41,42,75,86,90,103,105,106,108,109,118,144,145,147,150,151,152,153,157,162,165,166,169,188,189,191,207,208,211,212,213,214,217,218,221,222,229,252,253,254,255,256,257,258,259,260,261,262,277,279,306,323,326,329,],[-141,-141,43,-3,51,-135,90,114,118,145,-141,-141,156,157,-141,118,118,188,-130,118,191,-111,118,200,118,-81,118,118,-129,118,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,118,118,-51,118,118,118,118,118,118,118,118,118,118,309,329,118,118,118,]),'IS':([23,],[32,]),'OPEN_KEY':([23,31,33,35,36,37,38,45,52,105,107,123,124,125,126,127,128,129,130,131,132,133,134,135,148,150,154,155,171,172,173,174,175,176,177,178,179,180,189,206,209,210,215,216,219,220,223,228,233,249,266,267,270,280,283,284,285,286,287,288,289,290,291,292,293,294,303,304,305,312,313,314,315,316,317,318,319,320,321,333,334,335,336,337,338,339,340,341,342,346,354,357,358,362,363,370,],[-141,44,-20,-83,-84,-85,-86,-19,65,-141,-141,-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-141,-88,-89,-14,-17,192,-114,-141,-56,-141,-63,-141,-68,-141,-73,224,-136,-16,-52,-55,-57,-62,-64,-67,-69,-72,-141,-15,-141,300,-99,-141,310,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-128,328,-112,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-53,-54,-58,-59,-60,-61,-65,-66,-70,-71,-141,-141,365,-108,371,-101,374,]),'OPEN_BRACKET':([35,36,37,38,47,74,89,105,195,],[-83,-84,-85,-86,-37,-141,117,151,151,]),'ASSIGN':([39,40,48,49,50,102,105,146,148,150,186,187,189,233,],[-141,-141,57,-38,58,144,-141,-141,-14,-17,229,-106,-16,-15,]),'CLOSE_PARENTHESIS':([43,51,59,62,90,92,93,105,114,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,138,139,148,150,163,168,170,171,172,173,174,175,176,177,178,185,188,189,193,194,195,196,197,200,203,205,206,209,210,215,216,219,220,223,230,231,232,233,234,237,239,241,243,244,246,249,251,264,265,273,274,276,278,283,284,285,286,287,288,289,290,291,292,293,294,298,299,303,307,308,309,312,313,314,315,316,317,318,319,320,321,330,331,333,334,335,336,337,338,339,340,341,342,348,349,],[52,-141,76,-92,-141,-141,-141,-141,-141,167,-42,-43,-141,-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-90,-95,-91,-14,-17,201,-125,-127,-141,-56,-141,-63,-141,-68,-141,-73,228,-141,-16,236,-141,-141,242,-141,-141,249,-141,-52,-55,-57,-62,-64,-67,-69,-72,269,-131,-132,-15,270,-117,-119,-17,-141,-124,280,-141,-126,-141,-141,-141,-16,-121,-123,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-93,-94,-128,-118,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,350,-53,-54,-58,-59,-60,-61,-65,-66,-70,-71,360,-122,]),'CLOSE_KEY':([53,67,68,80,81,83,84,85,88,94,95,96,97,98,99,100,101,110,113,115,116,141,142,143,183,204,224,227,235,248,250,263,272,275,282,295,296,297,303,311,322,324,325,327,332,345,347,352,353,355,356,359,364,366,367,372,373,374,375,376,377,378,379,380,381,382,],[66,-23,-141,-141,-32,-141,-27,-29,-141,140,-141,-44,-45,-46,-47,-48,-49,-31,-28,-33,-41,-141,-8,-10,-9,-141,-141,-50,271,-141,-35,-141,-116,-120,-34,-141,-139,-140,-128,-87,343,-138,345,-103,351,-141,359,-137,-96,-98,-100,-141,-102,-110,-113,376,-104,-141,378,-141,-141,-141,-105,-109,383,-97,]),'IF':([65,79,80,81,88,95,96,97,98,99,100,101,110,115,116,141,192,204,224,227,248,250,263,272,275,282,300,303,310,327,328,345,353,355,356,359,364,365,366,367,371,373,374,376,378,379,380,382,],[-141,103,-141,-32,-141,103,-44,-45,-46,-47,-48,-49,-31,-33,-41,103,103,-141,-141,-50,-141,-35,103,-116,-120,-34,103,-128,103,-103,103,-141,-96,-98,-100,-141,-102,103,-110,-113,103,-104,103,-141,-141,-105,-109,-97,]),'FOR':([65,79,80,81,88,95,96,97,98,99,100,101,110,115,116,141,192,204,224,227,248,250,263,272,275,282,300,303,310,327,328,345,353,355,356,359,364,365,366,367,371,373,374,376,378,379,380,382,],[-141,104,-141,-32,-141,104,-44,-45,-46,-47,-48,-49,-31,-33,-41,104,104,-141,-141,-50,-141,-35,104,-116,-120,-34,104,-128,104,-103,104,-141,-96,-98,-100,-141,-102,104,-110,-113,104,-104,104,-141,-141,-105,-109,-97,]),'WHILE':([65,79,80,81,88,95,96,97,98,99,100,101,110,115,116,141,192,204,224,227,248,250,263,271,272,275,282,300,303,310,327,328,345,353,355,356,359,364,365,366,367,371,373,374,376,378,379,380,382,],[-141,106,-141,-32,-141,106,-44,-45,-46,-47,-48,-49,-31,-33,-41,106,106,-141,-141,-50,-141,-35,106,306,-116,-120,-34,106,-128,106,-103,106,-141,-96,-98,-100,-141,-102,106,-110,-113,106,-104,106,-141,-141,-105,-109,-97,]),'DO':([65,79,80,81,88,95,96,97,98,99,100,101,110,115,116,141,192,204,224,227,248,250,263,272,275,282,300,303,310,327,328,345,353,355,356,359,364,365,366,367,371,373,374,376,378,379,380,382,],[-141,107,-141,-32,-141,107,-44,-45,-46,-47,-48,-49,-31,-33,-41,107,107,-141,-141,-50,-141,-35,107,-116,-120,-34,107,-128,107,-103,107,-141,-96,-98,-100,-141,-102,107,-110,-113,107,-104,107,-141,-141,-105,-109,-97,]),'READ':([65,79,80,81,88,95,96,97,98,99,100,101,110,115,116,141,192,204,224,227,248,250,263,272,275,282,300,303,310,327,328,345,353,355,356,359,364,365,366,367,371,373,374,376,378,379,380,382,],[-141,108,-141,-32,-141,108,-44,-45,-46,-47,-48,-49,-31,-33,-41,108,108,-141,-141,-50,-141,-35,108,-116,-120,-34,108,-128,108,-103,108,-141,-96,-98,-100,-141,-102,108,-110,-113,108,-104,108,-141,-141,-105,-109,-97,]),'WRITE':([65,79,80,81,88,95,96,97,98,99,100,101,110,115,116,141,192,204,224,227,248,250,263,272,275,282,300,303,310,327,328,345,353,355,356,359,364,365,366,367,371,373,374,376,378,379,380,382,],[-141,109,-141,-32,-141,109,-44,-45,-46,-47,-48,-49,-31,-33,-41,109,109,-141,-141,-50,-141,-35,109,-116,-120,-34,109,-128,109,-103,109,-141,-96,-98,-100,-141,-102,109,-110,-113,109,-104,109,-141,-141,-105,-109,-97,]),'RETURNS':([76,201,350,],[91,247,361,]),'RETURN':([80,81,88,95,96,97,98,99,100,101,110,115,116,141,142,143,183,204,224,227,248,250,263,272,275,282,295,296,297,303,327,345,353,355,356,359,364,366,367,373,374,376,377,378,379,380,382,],[-141,-32,-141,-141,-44,-45,-46,-47,-48,-49,-31,-33,-41,-141,-8,-10,-9,-141,-141,-50,-141,-35,-141,-116,-120,-34,323,-139,-140,-128,-103,-141,-96,-98,-100,-141,-102,-110,-113,-104,-141,-141,323,-141,-105,-109,-97,]),'CONSTRUCTOR':([82,],[112,]),'FLOAT_VALUE':([90,118,144,145,151,157,165,166,169,188,191,207,208,211,212,213,214,217,218,221,222,229,252,253,254,255,256,257,258,259,260,261,262,277,323,326,329,],[128,-141,128,128,128,128,128,-81,128,128,128,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,128,128,-51,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'INT_VALUE':([90,117,118,144,145,151,157,165,166,169,188,191,207,208,211,212,213,214,217,218,221,222,229,252,253,254,255,256,257,258,259,260,261,262,277,323,326,329,],[129,164,-141,129,129,129,129,129,-81,129,129,129,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,129,129,-51,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'BOOL_VALUE':([90,118,144,145,151,157,165,166,169,188,191,207,208,211,212,213,214,217,218,221,222,229,252,253,254,255,256,257,258,259,260,261,262,277,323,326,329,],[130,-141,130,130,130,130,130,-81,130,130,130,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,130,130,-51,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'STRING_VALUE':([90,118,144,145,151,157,165,166,169,188,191,207,208,211,212,213,214,217,218,221,222,229,252,253,254,255,256,257,258,259,260,261,262,277,323,326,329,],[131,-141,131,131,131,131,131,-81,131,131,131,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,131,131,-51,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'VOID':([91,247,361,],[135,135,135,]),'COMMA':([92,93,105,122,123,124,125,126,127,128,129,130,131,132,148,150,171,172,173,174,175,176,177,178,189,194,195,197,205,206,209,210,215,216,219,220,223,233,241,243,244,249,264,265,273,274,283,284,285,286,287,288,289,290,291,292,293,294,303,308,312,313,314,315,316,317,318,319,320,321,330,333,334,335,336,337,338,339,340,341,342,],[137,137,-141,169,-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,-141,-56,-141,-63,-141,-68,-141,-73,-16,238,-141,-141,169,-52,-55,-57,-62,-64,-67,-69,-72,-15,-17,277,-124,-141,137,137,238,-16,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-128,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,277,-53,-54,-58,-59,-60,-61,-65,-66,-70,-71,]),'DOT':([105,195,],[149,240,]),'MULTIPLICATION':([105,126,127,128,129,130,131,132,148,150,177,178,189,233,249,283,284,293,294,303,320,321,],[-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,221,-73,-16,-15,-141,-80,-82,-141,-141,-128,221,221,]),'DIVISION':([105,126,127,128,129,130,131,132,148,150,177,178,189,233,249,283,284,293,294,303,320,321,],[-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,222,-73,-16,-15,-141,-80,-82,-141,-141,-128,222,222,]),'PLUS':([105,125,126,127,128,129,130,131,132,148,150,175,176,177,178,189,220,223,233,249,283,284,291,292,293,294,303,318,319,320,321,341,342,],[-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,217,-68,-141,-73,-16,-69,-72,-15,-141,-80,-82,-141,-141,-141,-141,-128,217,217,-141,-141,-70,-71,]),'MINUS':([105,125,126,127,128,129,130,131,132,148,150,175,176,177,178,189,220,223,233,249,283,284,291,292,293,294,303,318,319,320,321,341,342,],[-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,218,-68,-141,-73,-16,-69,-72,-15,-141,-80,-82,-141,-141,-141,-141,-128,218,218,-141,-141,-70,-71,]),'GREATER_THAN':([105,124,125,126,127,128,129,130,131,132,148,150,173,174,175,176,177,178,189,216,219,220,223,233,249,283,284,287,288,289,290,291,292,293,294,303,314,315,316,317,318,319,320,321,339,340,341,342,],[-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,211,-63,-141,-68,-141,-73,-16,-64,-67,-69,-72,-15,-141,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-128,211,211,211,211,-141,-141,-141,-141,-65,-66,-70,-71,]),'LESS_THAN':([105,124,125,126,127,128,129,130,131,132,148,150,173,174,175,176,177,178,189,216,219,220,223,233,249,283,284,287,288,289,290,291,292,293,294,303,314,315,316,317,318,319,320,321,339,340,341,342,],[-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,212,-63,-141,-68,-141,-73,-16,-64,-67,-69,-72,-15,-141,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-128,212,212,212,212,-141,-141,-141,-141,-65,-66,-70,-71,]),'EQUAL_TO':([105,124,125,126,127,128,129,130,131,132,148,150,173,174,175,176,177,178,189,216,219,220,223,233,249,283,284,287,288,289,290,291,292,293,294,303,314,315,316,317,318,319,320,321,339,340,341,342,],[-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,213,-63,-141,-68,-141,-73,-16,-64,-67,-69,-72,-15,-141,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-128,213,213,213,213,-141,-141,-141,-141,-65,-66,-70,-71,]),'NOT_EQUAL_TO':([105,124,125,126,127,128,129,130,131,132,148,150,173,174,175,176,177,178,189,216,219,220,223,233,249,283,284,287,288,289,290,291,292,293,294,303,314,315,316,317,318,319,320,321,339,340,341,342,],[-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,214,-63,-141,-68,-141,-73,-16,-64,-67,-69,-72,-15,-141,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-128,214,214,214,214,-141,-141,-141,-141,-65,-66,-70,-71,]),'AND':([105,123,124,125,126,127,128,129,130,131,132,148,150,171,172,173,174,175,176,177,178,189,210,215,216,219,220,223,233,249,283,284,285,286,287,288,289,290,291,292,293,294,303,312,313,314,315,316,317,318,319,320,321,335,336,337,338,339,340,341,342,],[-141,-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,207,-56,-141,-63,-141,-68,-141,-73,-16,-57,-62,-64,-67,-69,-72,-15,-141,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-128,207,207,-141,-141,-141,-141,-141,-141,-141,-141,-58,-59,-60,-61,-65,-66,-70,-71,]),'OR':([105,123,124,125,126,127,128,129,130,131,132,148,150,171,172,173,174,175,176,177,178,189,210,215,216,219,220,223,233,249,283,284,285,286,287,288,289,290,291,292,293,294,303,312,313,314,315,316,317,318,319,320,321,335,336,337,338,339,340,341,342,],[-141,-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,208,-56,-141,-63,-141,-68,-141,-73,-16,-57,-62,-64,-67,-69,-72,-15,-141,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-128,208,208,-141,-141,-141,-141,-141,-141,-141,-141,-58,-59,-60,-61,-65,-66,-70,-71,]),'CLOSE_BRACKET':([105,123,124,125,126,127,128,129,130,131,132,148,150,164,171,172,173,174,175,176,177,178,189,190,206,209,210,215,216,219,220,223,233,249,283,284,285,286,287,288,289,290,291,292,293,294,303,312,313,314,315,316,317,318,319,320,321,333,334,335,336,337,338,339,340,341,342,],[-141,-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,202,-141,-56,-141,-63,-141,-68,-141,-73,-16,233,-52,-55,-57,-62,-64,-67,-69,-72,-15,-141,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-128,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-53,-54,-58,-59,-60,-61,-65,-66,-70,-71,]),'TO':([105,123,124,125,126,127,128,129,130,131,132,148,150,171,172,173,174,175,176,177,178,189,206,209,210,215,216,219,220,223,233,249,268,283,284,285,286,287,288,289,290,291,292,293,294,301,302,303,312,313,314,315,316,317,318,319,320,321,333,334,335,336,337,338,339,340,341,342,],[-141,-141,-141,-141,-141,-74,-75,-76,-77,-78,-79,-14,-17,-141,-56,-141,-63,-141,-68,-141,-73,-16,-52,-55,-57,-62,-64,-67,-69,-72,-15,-141,-141,-80,-82,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,326,-107,-128,-141,-141,-141,-141,-141,-141,-141,-141,-141,-141,-53,-54,-58,-59,-60,-61,-65,-66,-70,-71,]),'AT_CLASS':([111,159,351,383,],[161,161,-30,-133,]),'ELSE':([345,],[354,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'np_start_state':([2,],[3,]),'epsilon':([2,3,8,10,16,17,18,21,23,28,34,39,40,51,55,56,65,68,70,74,80,83,88,90,92,93,95,105,106,107,111,114,118,122,123,124,125,126,133,141,146,159,171,173,175,177,188,194,195,197,200,204,205,207,208,211,212,213,214,217,218,221,222,224,228,243,248,249,263,264,265,268,270,273,285,286,287,288,289,290,291,292,293,294,295,308,309,312,313,314,315,316,317,318,319,320,321,330,345,346,354,359,360,374,376,377,378,],[4,6,11,11,25,25,25,30,33,42,47,49,49,62,72,49,81,85,72,47,81,85,116,121,138,138,143,150,153,155,160,62,166,170,172,174,176,178,180,143,187,160,209,215,219,223,232,239,241,244,62,116,170,253,253,253,253,253,253,253,253,253,253,81,267,278,116,284,297,138,138,302,305,239,172,172,174,174,174,174,176,176,178,178,324,244,62,209,209,215,215,215,215,219,219,223,223,278,356,358,363,367,369,297,380,324,356,]),'np_start_func_dir':([3,],[5,]),'declaration_loop':([8,10,],[9,22,]),'declaration':([8,10,],[10,10,]),'class_declaration':([8,10,],[12,12,]),'variable_declaration':([8,10,44,55,65,70,80,224,],[13,13,55,70,80,70,80,80,]),'function_declaration':([8,10,],[14,14,]),'main_function':([9,],[20,]),'np_set_current_var_type':([16,17,18,],[24,26,27,]),'np_add_main_internal_scope':([21,],[29,]),'class_declaration1':([23,],[31,]),'data_type':([24,57,60,91,181,247,361,],[34,74,77,134,225,134,134,]),'np_add_function_internal_scope':([28,],[41,]),'np_set_current_var_data_type':([34,74,],[46,89,]),'np_set_current_var_name':([39,40,56,],[48,50,73,]),'class_body':([44,],[53,]),'class_body1':([44,],[54,]),'parameter':([51,114,200,309,],[59,163,246,331,]),'atomic_var_type':([51,114,137,200,309,],[60,60,181,60,60,]),'class_body3':([54,],[67,]),'class_function_declaration':([54,68,83,],[68,83,83,]),'class_body2':([55,70,],[71,87,]),'variable_declaration_loop':([65,80,224,],[79,110,263,]),'class_body4':([68,83,],[84,113,]),'statement_loop':([79,192,263,300,310,328,365,371,374,],[94,235,296,325,332,347,372,375,296,]),'statement':([79,95,141,192,263,300,310,328,365,371,374,],[95,141,141,95,95,95,95,95,95,95,95,]),'assignment':([79,95,141,192,263,300,310,328,365,371,374,],[96,96,96,96,96,96,96,96,96,96,96,]),'conditional':([79,95,141,192,263,300,310,328,365,371,374,],[97,97,97,97,97,97,97,97,97,97,97,]),'cycle':([79,95,141,192,263,300,310,328,365,371,374,],[98,98,98,98,98,98,98,98,98,98,98,]),'read':([79,95,141,192,263,300,310,328,365,371,374,],[99,99,99,99,99,99,99,99,99,99,99,]),'write':([79,95,141,192,263,300,310,328,365,371,374,],[100,100,100,100,100,100,100,100,100,100,100,]),'function_call':([79,90,95,141,144,145,151,157,165,169,188,191,192,229,252,254,255,256,257,258,259,260,261,262,263,277,300,310,323,326,328,329,365,371,374,],[101,127,101,101,127,127,127,127,127,127,127,127,101,127,127,127,127,127,127,127,127,127,127,127,101,127,101,101,127,127,101,127,101,101,101,]),'variable':([79,90,95,141,144,145,151,156,157,165,169,188,191,192,229,238,252,254,255,256,257,258,259,260,261,262,263,277,300,310,323,326,328,329,365,371,374,],[102,132,102,102,132,132,132,194,132,132,132,132,132,102,132,273,132,132,132,132,132,132,132,132,132,132,102,132,102,102,132,132,102,132,102,102,102,]),'constructor':([82,],[111,]),'np_add_variable':([88,204,248,],[115,250,282,]),'variable_declaration1':([90,],[119,]),'hyper_exp_loop':([90,188,],[120,231,]),'hyper_exp':([90,144,145,151,157,165,169,188,191,229,277,323,326,329,],[122,184,185,190,197,203,205,122,234,268,308,344,346,348,]),'super_exp':([90,144,145,151,157,165,169,188,191,229,252,254,277,323,326,329,],[123,123,123,123,123,123,123,123,123,123,285,286,123,123,123,123,]),'exp':([90,144,145,151,157,165,169,188,191,229,252,254,255,256,257,258,277,323,326,329,],[124,124,124,124,124,124,124,124,124,124,124,124,287,288,289,290,124,124,124,124,]),'term':([90,144,145,151,157,165,169,188,191,229,252,254,255,256,257,258,259,260,277,323,326,329,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,291,292,125,125,125,125,]),'factor':([90,144,145,151,157,165,169,188,191,229,252,254,255,256,257,258,259,260,261,262,277,323,326,329,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,293,294,126,126,126,126,]),'return_arg':([91,247,361,],[133,281,370,]),'parameter1':([92,93,264,265,],[136,139,298,299,]),'statement_loop1':([95,141,],[142,183,]),'function_call1':([105,],[147,]),'variable1':([105,195,],[148,148,]),'np_while_1':([106,],[152,]),'np_do_while_1':([107,],[154,]),'class_declaration2':([111,159,],[158,198,]),'class_function':([111,159,],[159,159,]),'np_add_open_parenthesis':([118,],[165,]),'hyper_exp_loop1':([122,205,],[168,251,]),'np_hyper_exp':([123,285,286,],[171,312,313,]),'np_super_exp':([124,287,288,289,290,],[173,314,315,316,317,]),'np_exp':([125,291,292,],[175,318,319,]),'np_term':([126,293,294,],[177,320,321,]),'np_set_function_return_type':([133,],[179,]),'np_for_1':([146,],[186,]),'variable_loop':([156,],[193,]),'write_hyper_exp_loop':([157,],[196,]),'hyper_exp1':([171,312,313,],[206,333,334,]),'super_exp1':([173,314,315,316,317,],[210,335,336,337,338,]),'exp1':([175,318,319,],[216,339,340,]),'term1':([177,320,321,],[220,341,342,]),'function_call2':([188,],[230,]),'variable_loop1':([194,273,],[237,307,]),'np_add_write_quad':([197,308,],[243,330,]),'np_add_operator':([207,208,211,212,213,214,217,218,221,222,],[252,254,255,256,257,258,259,260,261,262,]),'np_if_1':([228,],[266,]),'write_hyper_exp_loop1':([243,330,],[276,349,]),'np_remove_open_parenthesis':([249,],[283,]),'function_statement_loop':([263,374,],[295,377,]),'np_for_2':([268,],[301,]),'np_while_2':([270,],[304,]),'function_return':([295,377,],[322,381,]),'cycle_while':([304,],[327,]),'conditional1':([345,],[353,]),'np_if_2':([345,378,],[355,382,]),'np_for_3':([346,],[357,]),'np_if_3':([354,],[362,]),'cycle_for':([357,],[364,]),'np_while_3':([359,],[366,]),'np_do_while_2':([360,],[368,]),'np_for_4':([376,],[379,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM np_start_state np_start_func_dir ID SEMICOLON declaration_loop main_function','program',7,'p_program','pecan_parser.py',36),
  ('main_function -> MAIN np_add_main_internal_scope OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_KEY variable_declaration_loop statement_loop CLOSE_KEY','main_function',8,'p_main_function','pecan_parser.py',45),
  ('np_add_main_internal_scope -> epsilon','np_add_main_internal_scope',1,'p_np_add_main_internal_scope','pecan_parser.py',51),
  ('np_start_state -> epsilon','np_start_state',1,'p_np_start_state','pecan_parser.py',63),
  ('np_start_func_dir -> epsilon','np_start_func_dir',1,'p_np_start_func_dir','pecan_parser.py',84),
  ('declaration_loop -> declaration declaration_loop','declaration_loop',2,'p_declaration_loop','pecan_parser.py',98),
  ('declaration_loop -> epsilon','declaration_loop',1,'p_declaration_loop','pecan_parser.py',99),
  ('statement_loop -> statement statement_loop1','statement_loop',2,'p_statement_loop','pecan_parser.py',106),
  ('statement_loop1 -> statement statement_loop1','statement_loop1',2,'p_statement_loop1','pecan_parser.py',113),
  ('statement_loop1 -> epsilon','statement_loop1',1,'p_statement_loop1','pecan_parser.py',114),
  ('declaration -> class_declaration','declaration',1,'p_declaration','pecan_parser.py',124),
  ('declaration -> variable_declaration','declaration',1,'p_declaration','pecan_parser.py',125),
  ('declaration -> function_declaration','declaration',1,'p_declaration','pecan_parser.py',126),
  ('variable -> ID variable1','variable',2,'p_variable','pecan_parser.py',134),
  ('variable1 -> OPEN_BRACKET hyper_exp CLOSE_BRACKET','variable1',3,'p_variable1','pecan_parser.py',152),
  ('variable1 -> DOT ID','variable1',2,'p_variable1','pecan_parser.py',153),
  ('variable1 -> epsilon','variable1',1,'p_variable1','pecan_parser.py',154),
  ('class_declaration -> CLASS ID class_declaration1 OPEN_KEY class_body CLOSE_KEY SEMICOLON constructor class_declaration2','class_declaration',9,'p_class_declaration','pecan_parser.py',162),
  ('class_declaration1 -> IS ID','class_declaration1',2,'p_class_declaration1','pecan_parser.py',169),
  ('class_declaration1 -> epsilon','class_declaration1',1,'p_class_declaration1','pecan_parser.py',170),
  ('class_declaration2 -> class_function class_declaration2','class_declaration2',2,'p_class_declaration2','pecan_parser.py',177),
  ('class_declaration2 -> epsilon','class_declaration2',1,'p_class_declaration2','pecan_parser.py',178),
  ('class_body -> class_body1 class_body3','class_body',2,'p_class_body','pecan_parser.py',185),
  ('class_body1 -> variable_declaration class_body2','class_body1',2,'p_class_body1','pecan_parser.py',192),
  ('class_body2 -> variable_declaration class_body2','class_body2',2,'p_class_body2','pecan_parser.py',199),
  ('class_body2 -> epsilon','class_body2',1,'p_class_body2','pecan_parser.py',200),
  ('class_body3 -> class_function_declaration class_body4','class_body3',2,'p_class_body3','pecan_parser.py',207),
  ('class_body4 -> class_function_declaration class_body4','class_body4',2,'p_class_body4','pecan_parser.py',214),
  ('class_body4 -> epsilon','class_body4',1,'p_class_body4','pecan_parser.py',215),
  ('constructor -> CONSTRUCTOR ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS OPEN_KEY statement_loop CLOSE_KEY','constructor',8,'p_constructor','pecan_parser.py',223),
  ('variable_declaration_loop -> variable_declaration variable_declaration_loop','variable_declaration_loop',2,'p_variable_declaration_loop','pecan_parser.py',230),
  ('variable_declaration_loop -> epsilon','variable_declaration_loop',1,'p_variable_declaration_loop','pecan_parser.py',231),
  ('variable_declaration -> VAR np_set_current_var_type data_type np_set_current_var_data_type ID np_set_current_var_name SEMICOLON np_add_variable','variable_declaration',8,'p_variable_declaration','pecan_parser.py',238),
  ('variable_declaration -> GROUP np_set_current_var_type ID np_set_current_var_name ASSIGN data_type np_set_current_var_data_type OPEN_BRACKET INT_VALUE CLOSE_BRACKET SEMICOLON np_add_variable','variable_declaration',12,'p_variable_declaration','pecan_parser.py',239),
  ('variable_declaration -> OBJ np_set_current_var_type ID np_set_current_var_name ASSIGN ID OPEN_PARENTHESIS variable_declaration1 CLOSE_PARENTHESIS SEMICOLON np_add_variable','variable_declaration',11,'p_variable_declaration','pecan_parser.py',240),
  ('np_set_current_var_type -> epsilon','np_set_current_var_type',1,'p_np_set_current_var_type','pecan_parser.py',248),
  ('np_set_current_var_data_type -> epsilon','np_set_current_var_data_type',1,'p_np_set_current_var_data_type','pecan_parser.py',256),
  ('np_set_current_var_name -> epsilon','np_set_current_var_name',1,'p_np_set_current_var_name','pecan_parser.py',264),
  ('atomic_var_type -> VAR','atomic_var_type',1,'p_atomic_var_type','pecan_parser.py',272),
  ('atomic_var_type -> GROUP','atomic_var_type',1,'p_atomic_var_type','pecan_parser.py',273),
  ('np_add_variable -> epsilon','np_add_variable',1,'p_np_add_variable','pecan_parser.py',280),
  ('variable_declaration1 -> hyper_exp_loop','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',297),
  ('variable_declaration1 -> epsilon','variable_declaration1',1,'p_variable_declaration1','pecan_parser.py',298),
  ('statement -> assignment','statement',1,'p_statement','pecan_parser.py',304),
  ('statement -> conditional','statement',1,'p_statement','pecan_parser.py',305),
  ('statement -> cycle','statement',1,'p_statement','pecan_parser.py',306),
  ('statement -> read','statement',1,'p_statement','pecan_parser.py',307),
  ('statement -> write','statement',1,'p_statement','pecan_parser.py',308),
  ('statement -> function_call','statement',1,'p_statement','pecan_parser.py',309),
  ('assignment -> variable ASSIGN hyper_exp SEMICOLON','assignment',4,'p_assignment','pecan_parser.py',317),
  ('np_add_operator -> epsilon','np_add_operator',1,'p_np_add_operator','pecan_parser.py',330),
  ('hyper_exp -> super_exp np_hyper_exp hyper_exp1','hyper_exp',3,'p_hyper_exp','pecan_parser.py',337),
  ('hyper_exp1 -> AND np_add_operator super_exp np_hyper_exp hyper_exp1','hyper_exp1',5,'p_hyper_exp1','pecan_parser.py',344),
  ('hyper_exp1 -> OR np_add_operator super_exp np_hyper_exp hyper_exp1','hyper_exp1',5,'p_hyper_exp1','pecan_parser.py',345),
  ('hyper_exp1 -> epsilon','hyper_exp1',1,'p_hyper_exp1','pecan_parser.py',346),
  ('np_hyper_exp -> epsilon','np_hyper_exp',1,'p_np_hyper_exp','pecan_parser.py',353),
  ('super_exp -> exp np_super_exp super_exp1','super_exp',3,'p_super_exp','pecan_parser.py',360),
  ('super_exp1 -> GREATER_THAN np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',367),
  ('super_exp1 -> LESS_THAN np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',368),
  ('super_exp1 -> EQUAL_TO np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',369),
  ('super_exp1 -> NOT_EQUAL_TO np_add_operator exp np_super_exp super_exp1','super_exp1',5,'p_super_exp1','pecan_parser.py',370),
  ('super_exp1 -> epsilon','super_exp1',1,'p_super_exp1','pecan_parser.py',371),
  ('np_super_exp -> epsilon','np_super_exp',1,'p_np_super_exp','pecan_parser.py',378),
  ('exp -> term np_exp exp1','exp',3,'p_exp','pecan_parser.py',385),
  ('exp1 -> PLUS np_add_operator term np_exp exp1','exp1',5,'p_exp1','pecan_parser.py',392),
  ('exp1 -> MINUS np_add_operator term np_exp exp1','exp1',5,'p_exp1','pecan_parser.py',393),
  ('exp1 -> epsilon','exp1',1,'p_exp1','pecan_parser.py',394),
  ('np_exp -> epsilon','np_exp',1,'p_np_exp','pecan_parser.py',401),
  ('term -> factor np_term term1','term',3,'p_term','pecan_parser.py',408),
  ('term1 -> MULTIPLICATION np_add_operator factor np_term term1','term1',5,'p_term1','pecan_parser.py',415),
  ('term1 -> DIVISION np_add_operator factor np_term term1','term1',5,'p_term1','pecan_parser.py',416),
  ('term1 -> epsilon','term1',1,'p_term1','pecan_parser.py',417),
  ('np_term -> epsilon','np_term',1,'p_np_term','pecan_parser.py',424),
  ('factor -> function_call','factor',1,'p_factor','pecan_parser.py',445),
  ('factor -> FLOAT_VALUE','factor',1,'p_factor','pecan_parser.py',446),
  ('factor -> INT_VALUE','factor',1,'p_factor','pecan_parser.py',447),
  ('factor -> BOOL_VALUE','factor',1,'p_factor','pecan_parser.py',448),
  ('factor -> STRING_VALUE','factor',1,'p_factor','pecan_parser.py',449),
  ('factor -> variable','factor',1,'p_factor','pecan_parser.py',450),
  ('factor -> OPEN_PARENTHESIS np_add_open_parenthesis hyper_exp CLOSE_PARENTHESIS np_remove_open_parenthesis','factor',5,'p_factor','pecan_parser.py',451),
  ('np_add_open_parenthesis -> epsilon','np_add_open_parenthesis',1,'p_np_add_open_parenthesis','pecan_parser.py',460),
  ('np_remove_open_parenthesis -> epsilon','np_remove_open_parenthesis',1,'p_np_remove_open_parenthesis','pecan_parser.py',467),
  ('data_type -> INT','data_type',1,'p_data_type','pecan_parser.py',474),
  ('data_type -> FLOAT','data_type',1,'p_data_type','pecan_parser.py',475),
  ('data_type -> STRING','data_type',1,'p_data_type','pecan_parser.py',476),
  ('data_type -> BOOL','data_type',1,'p_data_type','pecan_parser.py',477),
  ('class_function_declaration -> FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg SEMICOLON','class_function_declaration',8,'p_class_function_declaration','pecan_parser.py',484),
  ('return_arg -> data_type','return_arg',1,'p_return_arg','pecan_parser.py',491),
  ('return_arg -> VOID','return_arg',1,'p_return_arg','pecan_parser.py',492),
  ('parameter -> atomic_var_type data_type ID parameter1','parameter',4,'p_parameter','pecan_parser.py',499),
  ('parameter -> OBJ ID ID parameter1','parameter',4,'p_parameter','pecan_parser.py',500),
  ('parameter -> epsilon','parameter',1,'p_parameter','pecan_parser.py',501),
  ('parameter1 -> COMMA atomic_var_type data_type ID parameter1','parameter1',5,'p_parameter1','pecan_parser.py',511),
  ('parameter1 -> COMMA OBJ ID ID parameter1','parameter1',5,'p_parameter1','pecan_parser.py',512),
  ('parameter1 -> epsilon','parameter1',1,'p_parameter1','pecan_parser.py',513),
  ('conditional -> IF OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_if_1 OPEN_KEY statement_loop CLOSE_KEY conditional1','conditional',9,'p_conditional','pecan_parser.py',523),
  ('conditional1 -> ELSE np_if_3 OPEN_KEY statement_loop CLOSE_KEY np_if_2','conditional1',6,'p_conditional1','pecan_parser.py',530),
  ('conditional1 -> np_if_2','conditional1',1,'p_conditional1','pecan_parser.py',531),
  ('np_if_1 -> epsilon','np_if_1',1,'p_np_if_1','pecan_parser.py',538),
  ('np_if_2 -> epsilon','np_if_2',1,'p_np_if_2','pecan_parser.py',550),
  ('np_if_3 -> epsilon','np_if_3',1,'p_np_if_3','pecan_parser.py',558),
  ('cycle -> FOR ID np_for_1 ASSIGN hyper_exp np_for_2 TO hyper_exp np_for_3 cycle_for','cycle',10,'p_cycle','pecan_parser.py',568),
  ('cycle -> WHILE np_while_1 OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_while_2 cycle_while','cycle',7,'p_cycle','pecan_parser.py',569),
  ('cycle -> DO np_do_while_1 OPEN_KEY statement_loop CLOSE_KEY WHILE OPEN_PARENTHESIS hyper_exp CLOSE_PARENTHESIS np_do_while_2 SEMICOLON','cycle',11,'p_cycle','pecan_parser.py',570),
  ('cycle_for -> OPEN_KEY statement_loop CLOSE_KEY np_for_4','cycle_for',4,'p_cycle_for','pecan_parser.py',577),
  ('np_for_1 -> epsilon','np_for_1',1,'p_np_for_1','pecan_parser.py',583),
  ('np_for_2 -> epsilon','np_for_2',1,'p_np_for_2','pecan_parser.py',597),
  ('np_for_3 -> epsilon','np_for_3',1,'p_np_for_3','pecan_parser.py',615),
  ('np_for_4 -> epsilon','np_for_4',1,'p_np_for_4','pecan_parser.py',634),
  ('cycle_while -> OPEN_KEY statement_loop CLOSE_KEY np_while_3','cycle_while',4,'p_cycle_while','pecan_parser.py',651),
  ('np_while_1 -> epsilon','np_while_1',1,'p_np_while_1','pecan_parser.py',658),
  ('np_while_2 -> epsilon','np_while_2',1,'p_np_while_2','pecan_parser.py',665),
  ('np_while_3 -> epsilon','np_while_3',1,'p_np_while_3','pecan_parser.py',677),
  ('np_do_while_1 -> epsilon','np_do_while_1',1,'p_np_do_while_1','pecan_parser.py',687),
  ('np_do_while_2 -> epsilon','np_do_while_2',1,'p_np_do_while_2','pecan_parser.py',694),
  ('read -> READ OPEN_PARENTHESIS variable_loop CLOSE_PARENTHESIS SEMICOLON','read',5,'p_read','pecan_parser.py',706),
  ('variable_loop -> variable variable_loop1','variable_loop',2,'p_variable_loop','pecan_parser.py',714),
  ('variable_loop1 -> COMMA variable variable_loop1','variable_loop1',3,'p_variable_loop1','pecan_parser.py',721),
  ('variable_loop1 -> epsilon','variable_loop1',1,'p_variable_loop1','pecan_parser.py',722),
  ('write -> WRITE OPEN_PARENTHESIS write_hyper_exp_loop CLOSE_PARENTHESIS SEMICOLON','write',5,'p_write','pecan_parser.py',732),
  ('write_hyper_exp_loop -> hyper_exp np_add_write_quad write_hyper_exp_loop1','write_hyper_exp_loop',3,'p_write_hyper_exp_loop','pecan_parser.py',739),
  ('write_hyper_exp_loop1 -> COMMA hyper_exp np_add_write_quad write_hyper_exp_loop1','write_hyper_exp_loop1',4,'p_write_hyper_exp_loop1','pecan_parser.py',746),
  ('write_hyper_exp_loop1 -> epsilon','write_hyper_exp_loop1',1,'p_write_hyper_exp_loop1','pecan_parser.py',747),
  ('np_add_write_quad -> epsilon','np_add_write_quad',1,'p_np_add_write_quad','pecan_parser.py',755),
  ('hyper_exp_loop -> hyper_exp hyper_exp_loop1','hyper_exp_loop',2,'p_hyper_exp_loop','pecan_parser.py',763),
  ('hyper_exp_loop1 -> COMMA hyper_exp hyper_exp_loop1','hyper_exp_loop1',3,'p_hyper_exp_loop1','pecan_parser.py',770),
  ('hyper_exp_loop1 -> epsilon','hyper_exp_loop1',1,'p_hyper_exp_loop1','pecan_parser.py',771),
  ('function_call -> ID function_call1 OPEN_PARENTHESIS function_call2 CLOSE_PARENTHESIS SEMICOLON','function_call',6,'p_function_call','pecan_parser.py',779),
  ('function_call1 -> DOT ID','function_call1',2,'p_function_call1','pecan_parser.py',786),
  ('function_call1 -> epsilon','function_call1',1,'p_function_call1','pecan_parser.py',787),
  ('function_call2 -> hyper_exp_loop','function_call2',1,'p_function_call2','pecan_parser.py',794),
  ('function_call2 -> epsilon','function_call2',1,'p_function_call2','pecan_parser.py',795),
  ('class_function -> AT_CLASS ID FUNCTION ID OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg OPEN_KEY function_statement_loop function_return CLOSE_KEY','class_function',13,'p_class_function','pecan_parser.py',802),
  ('function_declaration -> FUNCTION ID np_add_function_internal_scope OPEN_PARENTHESIS parameter CLOSE_PARENTHESIS RETURNS return_arg np_set_function_return_type OPEN_KEY variable_declaration_loop function_statement_loop function_return CLOSE_KEY','function_declaration',14,'p_function_declaration','pecan_parser.py',810),
  ('np_add_function_internal_scope -> epsilon','np_add_function_internal_scope',1,'p_np_add_function_internal_scope','pecan_parser.py',819),
  ('np_set_function_return_type -> epsilon','np_set_function_return_type',1,'p_np_set_function_return_type','pecan_parser.py',829),
  ('function_return -> RETURN hyper_exp SEMICOLON','function_return',3,'p_function_return','pecan_parser.py',837),
  ('function_return -> epsilon','function_return',1,'p_function_return','pecan_parser.py',838),
  ('function_statement_loop -> statement_loop','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',845),
  ('function_statement_loop -> epsilon','function_statement_loop',1,'p_function_statement_loop','pecan_parser.py',846),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','pecan_parser.py',852),
]
